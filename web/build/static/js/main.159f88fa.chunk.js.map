{"version":3,"sources":["menu.js","config.js","utils/axios.js","api/user.js","components/header.js","components/sidebar.js","api/permission.js","components/footer.js","layouts/WelcomeContent.js","components/breadcrumb_path.js","api/cloud.js","components/cloud_resource/common/extra_info_modal.js","components/cloud_resource/common/line_chart.js","assets/Icons.js","components/cloud_resource/server_content.js","components/cloud_resource/rds_content.js","components/cloud_resource/kv_content.js","components/cloud_resource/slb_content.js","components/cloud_resource/account_content.js","api/daily_task.js","components/task/deploy_project_content.js","services/common.js","components/task/jobs_content.js","components/kubernetes/web_terminal.js","components/task/task_content.js","components/permissions/user_manager.js","api/role.js","components/permissions/role_manager.js","components/permissions/permission_manager.js","components/permissions/password_manager.js","components/data/sync_aliyun.js","api/data_api.js","components/cloud_resource/other_content.js","api/settings_api.js","components/system/settings_content.js","components/logout.js","api/system.js","components/system/feedback_manager.js","components/ci_cd/jenkins_jobs.js","api/jenkins.js","components/ci_cd/jenkins_job_detail.js","components/ci_cd/jenkins.js","api/kubernetes.js","utils/k8s_template.js","components/kubernetes/rc_detail.js","components/kubernetes/service_detail.js","components/cloud_resource/common/area_chart.js","components/kubernetes/pod_detail.js","components/kubernetes/container_log.js","components/kubernetes/node_detail.js","components/kubernetes/rs_detail.js","components/kubernetes/deployment_detail.js","components/kubernetes/ingress_detail.js","components/kubernetes/namespaces.js","components/kubernetes/k8s_cluster.js","components/kubernetes/kubernetes.js","api/dms_api.js","components/dms/instance_manage.js","components/dms/auth_manage.js","components/dms/data_manage.js","layouts/ContentLayout.js","layouts/AdminLayout.js","layouts/LoginLayout.js","layouts/ExceptionContent.js","router.js","layouts/main.js","serviceWorker.js","index.js"],"names":["Menus","topMenus","menuTitle","icon","subMenus","title","route","sideMenus","noAuthMenus","axios","interceptors","request","use","config","response","WSBase","defaults","headers","post","service","create","baseURL","timeout","withCredentials","Authorization","localStorage","getItem","error","Promise","reject","httpStatus","status","console","log","message","window","location","href","this","props","history","push","utils_axios","url","param","resolve","method","params","then","res","catch","err","toLocaleString","data","toString","getUsersList","page","size","req","postUpdatePassword","Header","TextArea","OpsHeader","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showFeedbackModal","bind","assertThisInitialized","handleOk","handleCancel","formRef","React","createRef","state","feedbackModalVisible","setState","_this2","current","validateFields","values","code","success","msg","menuContent","react_default","a","createElement","es_menu","map","menu","subMenu","Item","key","Link","to","hasOwnProperty","style","background","padding","color","paddingLeft","fontSize","menuCollapsed","MenuUnfoldOutlined","className","onClick","handleSiderMenu","cursor","MenuFoldOutlined","float","width","textAlign","marginLeft","marginRight","dropdown","overlay","overlayStyle","UserOutlined","popover","content","MessageOutlined","modal","destroyOnClose","visible","onOk","onCancel","es_form","assign","labelCol","span","wrapperCol","ref","label","name","rules","required","rows","rate","tooltips","Component","withRouter","Sider","SubMenu","OpsSider","authList","dataList","permissionUrlList","item","urlPath","subMenuList","_this3","result","indexOf","menuUrlPath","_this4","trigger","collapsed","backgroundSize","display","theme","mode","length","hasSubMenusAllowed","menuIcon","Icons","hasMenuAllowed","Footer","Text","OpsFooter","currentYear","Date","getFullYear","underline","Content","WelcomeContent","height","OpsBreadcrumbPath","breadcrumb","margin","pathData","path","defaultProps","getCloudServers","getCloudServerDetail","id","getCloudAccouts","postCloudAccouts","putCloudAccouts","deleteCloudAccouts","getCloudMonitorEcs","instanceId","timeDimension","metricDimension","getCloudMonitorRds","getCloudMonitorKv","getCloudMonitorSlb","getCloudRds","getCloudKv","getCloudSlb","getCloudRdsDetail","getCloudKvDetail","getCloudSlbDetail","getCloudOtherRes","moment","locale","EcsInfoForm","type","disabled","RdsInfoForm","KvInfoForm","ExtraInfoModal","switchChange","usersData","generateBaseInfoForm","value","renewSwitch","expiredTime","format","dbExpiredTime","kvExpiredTime","resetFields","disableInput","es_input","date_picker","updateMode","resType","twoItemFormLayout","formItem","index","offsetNum","col","offset","getInputItem","divider","orientation","marginTop","row","gutter","centered","initialValues","editData","LineChart","uuid","replace","c","r","Math","random","xField","yField","setTimeout","line","Line","meta","render","changeData","WindowsSvg","t","viewBox","version","xmlns","p-id","d","fill","LinuxSvg","StatusDoneSvg","StatusProgressSvg","K8sContainerIconSvg","OpsIcon","createFromIconfontCN","scriptUrl","TabPane","tabs","Paragraph","Option","es_select","ServerInfoModal","cloudAccountList","that","accounts","accountOptions","formItemLayout","accountName","server_info_modal_visible","handlePostServerInfoSubmit","handlePostServerInfoCancel","okText","cancelText","osType","input_number","Password","iconRender","EyeTwoTone","EyeInvisibleOutlined","ServerContent","refreshTableData","tableLoading","queryParams","pagination","pageSize","queryExpiredTime","queryKeyword","queryCloudAccount","total","parseInt","showTotal","objectSpread","tableData","i","ID","Memory","Cpu","HostName","InstanceId","InnerIpAddress","PublicIpAddress","PrivateIpAddress","InternetMaxBandwidthIn","InternetMaxBandwidthOut","InternetChargeType","InstanceName","OSType","ZoneId","OSName","ExpiredTime","Status","CloudAccountName","DataStatus","SshPort","SshUser","SshPwd","openMonitorDrawer","drawerVisible","currentServerDetail","refreshMonitorData","timeTagValue","metricTagValue","refreshSeverDetail","chartLoading","warn","dataPoints","JSON","parse","chartData","date","e","serverDetailLoading","changePage","onCloseDrawer","handleTimeTagChange","target","handleMetricTagChange","chartFormat","onExpiredDateChange","keywordOnChange","handleCloudAccountChange","handleUserDefineGroupChange","queryDefineGroup","handleManageUserChange","queryManageUser","handleAdd","ecsId","handleQuery","onSelectChange","selectedRowKeys","initTerminal","document","getElementById","rws","ReconnectingWebSocket","terminal","Terminal","cursorBlink","cursorStyle","bellStyle","prompt","write","attachAddon","AttachAddon","loadAddon","open","writeln","initWsConnection","focus","timer","clearTimeout","handleExtraInfoOk","handleExtraInfoCancel","operWidth","isSuperAdmin","columns","dataIndex","server_content_Text","ellipsis","textWrap","tooltip","record","innerContent","privateContent","publicContent","marginBottom","copyable","cpuContent","memoryContent","trafficType","trafficOutContent","align","Icons_WindowsSvg","badge","position","top","Icons_LinuxSvg","fixed","text","es_button","serverEdit","popconfirm","onConfirm","serverDelete","webSocketReady","showSizeChanger","pageSizeOptions","onShowSizeChange","showQuickJumper","concat","onChange","drawerPlacement","msgContent","idsList","extraInfoData","loadCloudAccountsData","close","dispose","addEventListener","innerIpAddress","publicIpAddress","privateIpAddress","instanceName","cpu","memory","resForm","sshPort","sshUser","sshPwd","extraInfoModalVisible","resFrom","_this5","targetId","String","join","putCloudServer","_this6","_this7","createTime","undefined","server_content_Content","breadcrumb_path","defaultValue","placeholder","SearchOutlined","PlusCircleOutlined","server_content_ServerInfoModal","extra_info_modal","drawer","placement","closable","onClose","defaultActiveKey","tabPosition","detailTabChange","tab","spin","tip","spinning","lineHeight","es_radio","Group","Button","line_chart","descriptions","bordered","column","Description","CreationTime","ImageId","InstanceChargeType","InstanceNetworkType","InstanceType","table","dataSource","scroll","x","loading","RdsInfoModal","rds_content_Option","rds_info_modal_visible","handlePostRdsInfoSubmit","handlePostRdsInfoCancel","engine","RdsContent","DBInstanceId","DBInstanceDescription","DBInstanceType","Engine","ExpireTime","DBInstanceStatus","ConnectionString","Port","DBInstanceMemory","DBInstanceStorage","rdsId","handleBatchUpdate","idList","rds_content_Text","rds_content_Paragraph","diskContent","rdsEdit","rdsDelete","dbInstanceDescription","dbMemory","dbInstanceStorage","putCloudRds","expireTime","rds_content_Content","rds_content_RdsInfoModal","rds_content_TabPane","CreateTime","EngineVersion","Category","KvInfoModal","kv_content_Option","kv_info_modal_visible","handlePostKvInfoSubmit","handlePostKvInfoCancel","instanceType","KvContent","ConnectionDomain","EndTime","InstanceStatus","Capacity","QPS","Bandwidth","Connections","kvId","kv_content_Text","kv_content_Paragraph","kvEdit","kvDelete","renewStatus","renewSiteId","bankAccount","manageUser","cost","costType","kvInstanceName","kvBandwidth","kvCapacity","putCloudKv","endTime","kv_content_Content","kv_content_KvInfoModal","kv_content_TabPane","ArchitectureType","PrivateIp","SlbContent","LoadBalancerId","LoadBalancerName","Address","LoadBalancerStatus","slb_content_Text","slb_content_Paragraph","slbDelete","slbId","userDefineInfoFormRef","form","setFieldsValue","userRemark","UserRemark","userDefineGroup","UserDefineGroup","userDefineInfoModalVisible","slb_content_Option","slb_content_Content","slb_content_TabPane","PayType","AddressIPVersion","CloudContent","confirm","handleDeleteAccountInfo","showAddAccountModal","current_data_id","add_new_account_visible","handleAddAccountSubmit","handleAddAccountCancel","handleEditAccountInfo","accountType","accountPwd","accountKey","accountSecret","accountRegion","bankAccountId","account_content_Text","account_content_Paragraph","superOper","react","account_content_Content","account_content_Option","getDailyJobs","putDailyJob","putDailyJobExecutorUser","Step","steps","options","children","ConfigTemplate","","field","errorMessage","日常工作-协助","KvIput","addNewConfig","configCount","configData","splice","configItem","grid_col","addonBefore","handleKeyChange","handleValueChange","MinusCircleOutlined","shape","deleteConfigItem","JobBaseInfo","deptData","deploy_project_content_Content","importantDegree","cascader","buttonStyle","JobConfigInfo","getFormInputContent","input","deploy_project_content_TextArea","deploy_project_content_Option","deploy_project_content_KvIput","configDataForm","jobType","card","headStyle","backgroundColor","fontWeight","es_alert","Deploy_project_content","submitJobForm","baseInfoFormRef","configInfoFormRef","stepStatus","jobTypeStr","form1Data","form2Data","submitLoading","carousel","next","form3Data","prev","_this8","reqData","open_deploy_auto_config","stringify","_this9","SolutionOutlined","HighlightOutlined","dots","effect","adaptiveHeight","deploy_project_content_JobBaseInfo","deploy_project_content_JobConfigInfo","loadConfigDataTemplateSpin","getCurrentUserId","token","jwt_decode","NULL_TIMESTAMP","Jobs_content","handlerChangeExecutorCommit","changeToUserId","jobId","jobChangeId","changeUserId","changeExecutorModalVisible","handlerRefuseJobCommit","refuseId","refuseReason","action","refuseJobModalVisible","queryCreateTime","job_name","job_type","important_degree","creator_user_name","executor_user_name","create_time","accept_time","end_time","approve_id","approve_content","refuse_reason","isExecutorChangable","isGetEnable","isFinishEnable","isDeleteEnable","isRefuseEnable","onDrawerClose","onQueryDateChange","downloadFile","ChangeExecutorSelect","changeRefuseReason","autoCreateJob","jobs_content_Text","tag","getStatusText","showJobDetail","startJob","finishJob","refuseJob","deleteJob","drawerSpinning","opsUsersList","job_file","currentJob","currentJobDetail","ServerBase","encodeURIComponent","setItem","pathname","waitContent","m1","m2","du","duration","humanize","k8sConfigContent","jobs_content_Paragraph","refuseContent","titleContent","jobs_content_Content","stmayle","jobs_content_TextArea","showIcon","task_content","remark","minHeight","Layout","TaskContent","task_content_Content","Switch","Route","component","columnStyle","overFlow","textOverflow","UserModal","userModalVisible","handleAddUserSubmit","handleAddUserCancel","UserManager","username","email","active","count","user_manager_Text","updateUserActiveStatus","current_user","detailDrawerVisible","activeStatus","user_manager_Content","user_manager_UserModal","deleteRole","deleteAuthLink","getRolesList","getRoleResourceList","roleId","resourceType","getPermissionsList","RoleModal","roleActionType","roleModalVisible","handleAddRole","handleEditRole","handleCancelAddRole","UserManagerModal","filterOption","inputValue","option","inGroupData","allGroupData","transferLodding","loadRoleUsersData","getRoleUserList","all","forEach","in","targetKeys","direction","moveKeys","userIdList","hideModal","currentRoleName","userManagerModalVisible","handleConfirmUserManager","handleCancelUserManager","transfer","showSearch","itemUnit","itemsUnit","searchPlaceholder","handleTransferChange","listStyle","operations","ResourceManagerModal","ecsFilterOption","instance_name","ip","rdsFilterOption","db_instance_description","db_instance_id","kvFilterOption","connection_domain","slbFilterOption","load_balance_name","address","otherResFilterOption","handleTabClick","handleConfirmRoleResourceManager","tabSpinning","ecsInGroupData","ecsAllGroupData","rdsInGroupData","rdsAllGroupData","kvInGroupData","kvAllGroupData","slbInGroupData","slbAllGroupData","otherAllGroupData","otherInGroupData","loadRoleEcsData","loadRoleRdsData","loadRoleKvData","loadRoleSlbData","loadRoleOtherResData","ecsTransferLodding","rdsTransferLodding","kvTransferLodding","slbTransferLodding","otherResTransferLodding","res_type","ResType","_this10","ecsIdList","rdsIdList","kvIdList","slbIdList","otherIdList","resourceManagerModalVisible","handleCancelResourceManager","onTabClick","role_manager_TabPane","handleResTransferChange","AuthLinkManagerModal","_this11","url_path","loadRoleAuthLinksData","_this12","getRoleAuthLinks","Id","_this13","authLinkIdList","authLinkManagerModalVisible","handleCancelAuthLinkManager","RolesManager","_this14","managerUser","confirmDeleteRole","okType","managerResource","managerAuthLink","description","createRole","roleEdit","editRoleId","_this15","roleName","_this16","_this17","_this18","role_manager_Content","role_manager_RoleModal","role_manager_UserManagerModal","role_manager_ResourceManagerModal","role_manager_AuthLinkManagerModal","rowClassName","AuthLinkModal","authLinkModalVisible","handleAddAuthLink","handleCancelAddAuthLink","PermissionsManager","confirmDeleteAuthLink","createAuthLink","permission_manager_Content","permission_manager_AuthLinkModal","PasswordManager","compareToFirstPassword","rule","callback","getFieldValue","updatePassword","preventDefault","password","confirm_password","getFieldDecorator","password_manager_Content","onSubmit","hasFeedback","validator","htmlType","SyncAliyunContent","syncAliyunEcs","syncAliyunRds","syncAliyunKv","syncAliyunSlb","syncEcsLoading","syncRdsLoading","syncKvLoading","syncSlbLoading","syncAliyunStatisData","ecsCount","rdsCount","kvCount","slbCount","defineProperty","sync_aliyun_Content","statistic","precision","OtherInfoModal","sitesData","loadCloudAccountData","other_content_Option","actionName","actionType","OtherContent","queryResType","CloudAccountId","Region","RenewStatus","RenewSiteId","BankAccount","handlePostOtherInfoSubmit","handlePostOtherInfoCancel","handleResTypeChange","other_content_Text","other_content_Paragraph","editId","other_info_modal_visible","cloudAccountId","connections","region","bandwidth","putCloudOtherRes","other_content_Content","wrappedComponentRef","extraInfoFormRef","other_content_OtherInfoModal","putSettingsValue","RangePicker","SettingsContent","onChangeAllowRenewConfirm","dateOnChange","handleSetExpireDateSubmit","handleSetExpireDateCancel","expireSettingModalVisible","isOpenRenewConfirm","expireStartDate","expireEndDate","loadAllowRenewConfirmStatus","key_name","dateString","settings_content_Content","banner","es_switch","checked","paddingTop","LogoutContent","removeItem","getUserFeedbackList","UserFeedbackManager","score","feedback_manager_Content","JenkinsJobsContent","jumpJobDetail","jobs","loadJenkinsAllJobs","jobName","jenkins_jobs_Content","Grid","Jenkins_job_detail","startBuildJob","refreshJobInfo","disableJob","enableJob","loadJenkinsJobBuildList","buildInfo","buildConsoleLog","logLoading","jobBuilding","refreshInfoLoading","buildLog","start","progressLoading","nextBuildNumber","buildName","getJenkinsJobBuildList","buildId","showBuildConsoleLog","es_icon","ableBuild","ableContent","jenkins_job_detail_Content","displayName","jenkins_job_detail_Text","whiteSpace","list","header","footer","renderItem","buildTag","timeTag","timestamp","actionContent","fullDisplayName","JenkinsContent","jenkins_Content","getNodeMetrics","getPodMetrics","K8sTemplate","rc","rs","deployment","statefull_rs","daemon_set","config_map","secret_map","RcDetailContent","rcDetail","labels","metadata","selectors","spec","selector","images","containersData","template","containers","rc_detail_Content","namespace","creationTimestamp","replicas","readyReplicas","ServiceDetailContent","serviceDetail","portsList","ports","portContent","service_detail_Content","clusterIP","sessionAffinity","AreaChart","area","Area","isStack","yAxis","formatter","v","unit","PodDetailContent","loadPodLog","handleCancelLogModal","openWebTerminal","memoryChartData","cpuChartData","refreshPodCpuMetrics","refreshPodMemoryMetrics","clusterId","metricName","podName","items","metricPoints","containerName","phase","logModalVisible","containersList","borderBottom","itemLayout","Meta","avatar","Icons_K8sContainerIconSvg","pod_detail_Text","image","pod_detail_Content","pod_detail_TabPane","hostIP","podIP","extra","ReloadOutlined","area_chart","WebTerminalContent","goBack","containerDetail","connectionStatus","send","connectContent","web_terminal_Content","bodyStyle","ContainerLogContent","syncLogs","containerInfo","logContent","scrollToBottom","panel","scrollTop","scrollHeight","container_log_Content","overflow","NodeDetailContent","nodeDetail","refreshNodeCpuMetrics","refreshNodeMemoryMetrics","nodeName","annotations","addresses","addressesData","node_detail_Text","node_detail_Content","node_detail_TabPane","daemonEndpoints","kubeletEndpoint","nodeInfo","containerRuntimeVersion","kubeletVersion","kubeProxyVersion","operatingSystem","architecture","RsDetailContent","rsDetail","matchLabels","rs_detail_Content","DeploymentDetailContent","deployment_detail_Content","IngressDetailContent","ingressDetail","certContent","tls","secretName","domainContent","host","http","paths","pathType","backend","serviceName","servicePort","ingress_detail_Content","Panel","customPanelStyle","borderRadius","border","K8sNamespacesContent","showLoading","refreshDataLoading","getColumnSearchProps","filterDropdown","_ref","setSelectedKeys","selectedKeys","clearFilters","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","onFilter","toLowerCase","includes","onFilterDropdownVisibleChange","select","dist_main_default","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","refreshNamespaceResources","selectChange","yarmCreateK8sResource","selectTemplateChange","handleYamlDetailCancel","handleScaleCancel","handleScaleCommit","onInputNumberChange","handleConfigCancel","nodeColumns","showDetail","conditions","rcColumns","Icons_StatusDoneSvg","Icons_StatusProgressSvg","autoScaleHandler","deleteHandler","showYamlHandler","rsColumns","serviceColumns","ingressColumns","deploymentColumns","podColumns","statusContent","containerStatuses","configDictColumns","showDictValue","deleteDictValue","secretDictColumns","namespaceList","replicationControllerList","deploymentList","replicaSetList","serviceList","ingressList","podList","nodeList","configDictList","secretDictList","dictConfigValue","yamlModalVisible","scaleModalVisible","configModalVisible","yamlDetail","currentNamespace","yamlCode","replicaCount","scaleResType","scaleResData","getK8sNamespaces","getK8sNodes","getNamespaceDeployments","getNamespaceReplicationControllers","getNamespaceReplicaSets","getNamespaceServices","getNamespaceIngress","getNamespacePods","getNamespaceConfigDict","getNamespaceSecretDict","deleteConfigMap","resName","deleteSecret","createModalVisible","trim","yamlContent","deleteResource","modelTitle","alertTitle","rel","configList","react_codemirror2","namespaces_Content","namespaces_Option","onBeforeChange","editor","min","collapse","tabBarStyle","namespaces_TabPane","selectBefore","k8s_cluster_Option","ClusterManageContent","addCluster","handleClusterAddOk","handleClusterAddCancel","loadClusterData","addModelVisible","clusterData","k8sData","k8s_cluster_Content","empty","grid","enterToCluster","confirmDeleteCluster","KubernetesContent","kubernetes_Content","postDmsInstanceData","getDmsDatabaseData","postDmsUserAuth","getUserDmsDatabaseData","InstanceManageContent","loadInstanceData","handleQueryChange","searchValue","handleAddInstanceCancel","addInstanceModalVisible","editInstanseId","handleSubmitAddInstance","onExpand","expanded","expendTableData","expandedRowRender","indent","expendColumns","addInstanceDb","operType","instance_manage_Text","editInstance","deleteInstance","deleteInstanceDb","addInstanceDbModalVisible","addInstanceId","inputDbName","query","instanceData","dbName","instanceAlias","InstanceAlias","port","Host","operUser","OperUser","operPwd","OperPwd","databaseId","DatabaseId","instance_manage_Content","handleAddInstance","handleSubmitAddInstanceDb","handleAddInstanceDbCancel","dbNameChange","expandable","TreeNode","AuthManageContent","getUserAuthData","handleInstanceChange","queryInstanceId","handleEmpIdChange","queryEmpId","handleOperTypeChange","queryOperType","handleUserAuthCancel","addAuthModalVisible","handleSubmitUserAuth","selectedNodeId","selectedNodeType","reqParams","validTime","onLoadData","treeNode","dataRef","instanceChildren","SchemaName","instance_type","isLeaf","treeData","toConsumableArray","renderTreeNodes","iconType","onTreeNodeSelect","selectedNodes","resetSelectedNodeValue","auth_manage_Text","deleteUserAuth","instanceOptions","expandedKeys","autoExpandParent","loadAllUsersData","loadAllInstanceData","empId","authData","users","optionsList","auth_manage_Option","instanceTreeNode","auth_manage_Content","optionFilterProp","handleAddAuth","afterClose","maxHeight","overflowY","tree","loadData","showLine","onSelect","operCount","auth_manage_TextArea","showTime","left_panel","borderRight","right_panel","DataManageContent","loadUserHistoryLog","DatabaseName","data_manage_TreeNode","currentChoose","tabsOnChange","activeKey","sqlInputRef","sqlInput","sqlDescription","sqlExecuting","execResultPanel","sqlResultLog","sqlResultLogColumns","data_manage_Paragraph","data_manage_Text","titleColumns","execStatus","exception","effectResult","execResult","exceptionContent","info","renderSqlQueryResultTable","renderSqlExecResultPanel","data_manage_Content","strong","showCursorWhenSelecting","autofocus","lineWrapping","submitSql","data_manage_TabPane","ContentLayout","ContentLayout_Content","minWidth","exact","server_content","rds_content","kv_content","slb_content","account_content","other_content","instance_manage","auth_manage","data_manage","jenkins","kubernetes","AdminContent","onExit","stepsEnabled","BrowserRouter","layout","sidebar","components_footer","LoginContent","handleEnterKey","nativeEvent","keyCode","handleSubmit","URLSearchParams","search","get","errorInfo","loginPanel","onFinish","onFinishFailed","prefix","onKeyPress","block","LoginLayout_Text","Exception500","backToLogin","es_result","subTitle","Exception404","RouterWrap","App","router_RouterWrap","Boolean","hostname","match","ReactDOM","config_provider","zhCN","layouts_main","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.159f88fa.chunk.js","sourcesContent":["const topMenus = [\n    {\n        menuTitle: \"我的\",\n        icon: \"user\",\n        subMenus: [\n            { title: \"修改密码\", route: \"/admin/permission/password\" },\n            { title: \"退出\", route: \"/admin/logout\" },\n        ],\n    },\n];\n\nconst sideMenus = [\n    {\n        menuTitle: \"云资源\",\n        icon: \"CloudServerOutlined\",\n        subMenus: [\n            { title: \"服务器\", route: \"/admin/cloud_resource/cloud_server\" },\n            { title: \"数据库\", route: \"/admin/cloud_resource/cloud_rds\" },\n            { title: \"KV-Store\", route: \"/admin/cloud_resource/cloud_kv\" },\n            { title: \"负载均衡\", route: \"/admin/cloud_resource/cloud_slb\" },\n            { title: \"其它资源\", route: \"/admin/cloud_resource/cloud_other\" },\n            { title: \"云账号\", route: \"/admin/cloud_resource/cloud_account\" },\n        ],\n    },\n    {\n        menuTitle: \"工作协助\",\n        icon: \"TeamOutlined\",\n        subMenus: [\n            { title: \"提交工单\", route: \"/admin/task/deploy_project\" },\n            { title: \"工单列表\", route: \"/admin/task/jobs\" },\n        ],\n    },\n    {\n        menuTitle: \"DMS操作\",\n        icon: \"DatabaseOutlined\",\n        subMenus: [\n            { title: \"实例管理\", route: \"/admin/dms/instance_manage\" },\n            { title: \"权限管理\", route: \"/admin/dms/auth_manage\" },\n            { title: \"数据操作\", route: \"/admin/dms/data_manage\" },\n        ],\n    },\n    {\n        menuTitle: \"CI & CD\",\n        icon: \"GitlabOutlined\",\n        subMenus: [\n            // {\"title\": \"任务列表\", \"route\": \"/admin/cicd/jobs\"},\n        ],\n    },\n    {\n        menuTitle: \"Kubernetes\",\n        icon: \"ClusterOutlined\",\n        subMenus: [{ title: \"集群管理\", route: \"/admin/k8s_cluster/info\" }],\n    },\n    {\n        menuTitle: \"数据管理\",\n        icon: \"DatabaseOutlined\",\n        subMenus: [{ title: \"阿里云\", route: \"/admin/data/syncAliyun\" }],\n    },\n    {\n        menuTitle: \"权限管理\",\n        icon: \"KeyOutlined\",\n        subMenus: [\n            { title: \"用户管理\", route: \"/admin/permission/users\" },\n            { title: \"角色管理\", route: \"/admin/permission/roles\" },\n            { title: \"权限链接\", route: \"/admin/permission/permissions\" },\n        ],\n    },\n    {\n        menuTitle: \"系统管理\",\n        icon: \"GroupOutlined\",\n        subMenus: [{ title: \"用户反馈\", route: \"/admin/system/user_feedback\" }],\n    },\n];\n\nconst Menus = {\n    topMenus: topMenus,\n    sideMenus: sideMenus,\n    noAuthMenus: [\"/admin/task/deploy_project\", \"/admin/task/jobs\"], // 不参与权限校验的菜单\n};\n\nexport default Menus;\n","import axios from \"axios\";\n\naxios.interceptors.request.use(function(config) {\n    return config;\n});\n\naxios.interceptors.response.use(function(config) {\n    return config;\n});\n\nconst ServerBase = \"http://commonops.com:9999/\";\nconst WSBase = \"ws://commonops.com:9999/\";\n\nexport { ServerBase, WSBase };\n","import axios from 'axios';\nimport {message} from 'antd';\nimport {ServerBase} from \"../config\";\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nlet service = axios.create({\n    baseURL: ServerBase,\n    timeout: 7000,\n    withCredentials: false\n});\n\nfunction getLocalToken() {\n    return localStorage.getItem(\"ops_token\");\n}\nexport { getLocalToken };\n\nfunction getClusterId() {\n    return localStorage.getItem(\"clusterId\");\n}\nexport { getClusterId };\n\n//添加请求拦截器\nservice.interceptors.request.use(function(config){\n    config.headers.Authorization = getLocalToken();\n    config.headers['ClusterId'] = getClusterId();\n    return config\n},function(error){\n    return Promise.reject(error)\n});\n\n//添加响应拦截器\nservice.interceptors.response.use(function(response){\n        return response['data'];\n    }, function(error){\n        const httpStatus = error.response.status;\n        console.log(error);\n        switch (httpStatus) {\n            case 400:\n                message.error(\"[400]客户端请求参数错误\");\n                break;\n            case 401:\n                window.location.href = \"/login?code=401\";\n                break;\n            case 403:\n                window.location.href = \"/login?code=403\";\n                break;\n            case 500:\n                message.error(\"[500]服务异常，请联系运维处理\");\n                this.props.history.push('/exception500');\n                break;\n            default:\n                message.error(\"服务异常，请联系运维处理\");\n                break;\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default{\n    //get请求\n    get(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'get',\n                url,\n                params: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toLocaleString());\n                console.log(err,'异常');\n            })\n\n        })\n    },\n    //post请求\n    post(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'post',\n                url,\n                data: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toString());\n                console.log(err,'异常');\n            })\n        })\n    },\n    //put请求\n    put(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'put',\n                url,\n                data: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toLocaleString());\n                console.log(err,'异常');\n            })\n        })\n    },\n    //delete请求\n    delete(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'delete',\n                url,\n                data: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toLocaleString());\n                console.log(err,'异常');\n            })\n        })\n    }\n}\n","import req from '../utils/axios';\n\n/*\n    用户登录\n */\nconst postUserLogin = (data) => {\n    return req.post('user/login', data)\n};\nexport {postUserLogin}\n\n/*\n    用户创建\n */\nconst postUserCreate = (data) => {\n    return req.post('user/create', data)\n};\nexport {postUserCreate}\n\n/*\n    更新用户状态\n */\nconst putUserCreate = (data) => {\n    return req.put('user/active', data)\n};\nexport {putUserCreate}\n\n/*\n    用户 jwt token 刷新\n */\nconst getUserTokenRefresh = () => {\n    return req.get('user/tokenRefresh')\n};\nexport {getUserTokenRefresh}\n\n/*\n    获取注册用户列表\n */\nconst getUsersList = (page, size) =>{\n    return req.get('user/list', {page, size})\n};\nexport {getUsersList}\n\n/*\n    用户修改密码\n */\nconst postUpdatePassword = (data) => {\n    return req.post('user/updatePassword', data)\n};\nexport {postUpdatePassword}\n\n/*\n    用户提交需求&bug反馈\n */\nconst postUserFeedback = (data) => {\n    return req.post('user/feedback', data)\n};\nexport {postUserFeedback}","import React, { Component } from 'react';\nimport {Layout, Menu, Modal, Form, Input, Rate, message, Popover, Dropdown} from 'antd';\nimport {\n    MenuFoldOutlined,\n    MenuUnfoldOutlined,\n    UserOutlined,\n    MessageOutlined\n  } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Menus from \"../menu\";\nimport {postUserFeedback} from \"../api/user\";\n\nconst { Header } = Layout;\nconst { TextArea } = Input;\n\n\nclass OpsHeader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showFeedbackModal = this.showFeedbackModal.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.formRef = React.createRef();\n        this.state= {\n            feedbackModalVisible: false,\n        }\n    }\n\n    showFeedbackModal() {\n        this.setState({feedbackModalVisible: true})\n    }\n\n    handleOk() {\n        this.formRef.current.validateFields().then((values) => {\n            postUserFeedback(values).then((res)=>{\n                if(res.code===0) {\n                    this.setState({feedbackModalVisible: false});\n                    message.success(\"已经收到您的反馈！\");\n                } else {\n                    message.error(res.msg);\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            })\n        });\n    }\n\n    handleCancel() {\n        this.setState({feedbackModalVisible: false})\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 5},\n            wrapperCol: {span: 17},\n        };\n        let menuContent = (\n            <Menu>\n                {\n                    Menus.topMenus.map((menu) => {\n                        return (\n                            menu.subMenus.map((subMenu) => {\n                                return (\n                                    <Menu.Item key={subMenu.title}>\n                                        {<Link to={subMenu.hasOwnProperty(\"route\")?subMenu.route:\"\"}>{subMenu.title}</Link>}\n                                    </Menu.Item>\n                                )\n                            })\n                        )\n                    })\n                }\n            </Menu>\n        );\n\n        return (\n            <Header style={{ background: \"#fff\", padding: 0 }}>\n                <div style={{ background: \"#001529\" }}>\n                    <span\n                        style={{\n                            color: \"#fff\",\n                            paddingLeft: \"2%\",\n                            fontSize: \"1.4em\",\n                        }}\n                    >\n                        {this.props.menuCollapsed ? (\n                            <MenuUnfoldOutlined\n                                className=\"trigger\"\n                                onClick={this.props.handleSiderMenu}\n                                style={{ cursor: \"pointer\" }}\n                            />\n                        ) : (\n                            <MenuFoldOutlined\n                                className=\"trigger\"\n                                onClick={this.props.handleSiderMenu}\n                                style={{ cursor: \"pointer\" }}\n                            />\n                        )}\n                    </span>\n\n                    <span\n                        style={{\n                            color: \"#fff\",\n                            fontSize: \"1.4em\",\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            width: \"30px\",\n                            textAlign: \"center\",\n                            marginLeft: \"20px\",\n                            marginRight: \"30px\",\n                        }}\n                    >\n                        <Dropdown\n                            overlay={menuContent}\n                            overlayStyle={{ width: \"150px\" }}\n                        >\n                            <UserOutlined />\n                        </Dropdown>\n                    </span>\n\n                    <span\n                        style={{\n                            color: \"#fff\",\n                            fontSize: \"1.4em\",\n                            float: \"right\",\n                            cursor: \"pointer\",\n                            width: \"30px\",\n                            textAlign: \"center\",\n                        }}\n                        onClick={this.showFeedbackModal}\n                    >\n                        <Popover content=\"提交需求反馈\">\n                            <MessageOutlined />\n                        </Popover>\n                    </span>\n\n                    <Modal\n                        title=\"「Bug & 需求」反馈\"\n                        destroyOnClose={true}\n                        visible={this.state.feedbackModalVisible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        width={700}\n                    >\n                        <Form {...formItemLayout} ref={this.formRef}>\n                            <Form.Item\n                                label=\"反馈内容\"\n                                name=\"advice\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"内容不能为空\",\n                                    },\n                                ]}\n                            >\n                                <TextArea rows={4} />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"当前版本满意度\"\n                                name=\"score\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请对当前版本进行打分\",\n                                    },\n                                ]}\n                            >\n                                <Rate\n                                    tooltips={[\n                                        \"难用\",\n                                        \"不好用\",\n                                        \"体验一般\",\n                                        \"体验良好\",\n                                        \"非常棒\",\n                                    ]}\n                                />\n                            </Form.Item>\n                        </Form>\n                    </Modal>\n                </div>\n            </Header>\n        );\n    }\n}\n\nexport default withRouter(OpsHeader);\n","import React, { Component } from \"react\";\nimport { Layout, Menu, message } from \"antd\";\nimport * as Icons from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\nimport Menus from \"../menu\";\nimport { getUserPermissionsList } from \"../api/permission\";\n\nconst { Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass OpsSider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authList: [],\n        };\n    }\n\n    componentWillMount() {\n        getUserPermissionsList()\n            .then((res) => {\n                if (res.code === 0) {\n                    const dataList = res.data;\n                    let permissionUrlList = [];\n                    dataList.map((item) => {\n                        return permissionUrlList.push(item.urlPath);\n                    });\n                    this.setState({\n                        authList: permissionUrlList,\n                    });\n                } else {\n                    message.error(\"获取用户菜单权限异常\");\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    hasSubMenusAllowed(subMenuList) {\n        let result = false;\n        subMenuList.map((item) => {\n            if (\n                this.state.authList.indexOf(item.route) > -1 ||\n                Menus.noAuthMenus.indexOf(item.route) > -1\n            ) {\n                result = true;\n                return result;\n            } else {\n                return null;\n            }\n        });\n        return result;\n    }\n\n    hasMenuAllowed(menuUrlPath) {\n        return (\n            this.state.authList.indexOf(menuUrlPath) > -1 ||\n            Menus.noAuthMenus.indexOf(menuUrlPath) > -1\n        );\n    }\n\n    render() {\n        return (\n            <Sider\n                trigger={null}\n                collapsed={this.props.menuCollapsed}\n                style={{ textAlign: \"center\" }}\n            >\n                <span\n                    className=\"logo\"\n                    style={\n                        this.props.menuCollapsed\n                            ? { backgroundSize: \"80%\" }\n                            : { backgroundSize: \"80%\" }\n                    }\n                />\n                <span\n                    className=\"logo-text\"\n                    style={this.props.menuCollapsed ? { display: \"none\" } : {}}\n                >\n                    运维平台\n                </span>\n                <Menu theme=\"dark\" mode=\"inline\" style={{ textAlign: \"left\" }}>\n                    {Menus.sideMenus.map((menu) => {\n                        if (\n                            menu.subMenus.length &&\n                            this.hasSubMenusAllowed(menu.subMenus)\n                        ) {\n                            const menuIcon = React.createElement(\n                                Icons[menu.icon],\n                            );\n                            return (\n                                <SubMenu\n                                    key={menu.menuTitle}\n                                    title={\n                                        <span>\n                                            {menuIcon}\n                                            <span>{menu.menuTitle}</span>\n                                        </span>\n                                    }\n                                >\n                                    {menu.subMenus.map((subMenu) => {\n                                        if (\n                                            this.hasMenuAllowed(subMenu.route)\n                                        ) {\n                                            return (\n                                                <Menu.Item key={subMenu.title}>\n                                                    <Link to={subMenu.route}>\n                                                        {subMenu.title}\n                                                    </Link>\n                                                </Menu.Item>\n                                            );\n                                        } else {\n                                            return null;\n                                        }\n                                    })}\n                                </SubMenu>\n                            );\n                        } else {\n                            return null;\n                        }\n                    })}\n                </Menu>\n            </Sider>\n        );\n    }\n}\n\nexport default OpsSider;\n","import req from \"../utils/axios\";\n\nconst getUserPermissionsList = () =>{\n    return req.get('user/permissions')\n};\nexport {getUserPermissionsList}\n","import React, { Component } from 'react';\nimport { Layout, Popover, Typography } from 'antd';\nconst { Footer} = Layout;\n\nconst { Text } = Typography;\n\nclass OpsFooter extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentYear: new Date().getFullYear(),\n    };\n  }\n\n  render() {\n    return (\n      <Footer style={{ textAlign: 'center', padding: '15px 50px' }}>\n        ©2019-{this.state.currentYear} Created by &nbsp;\n        <Popover content={<div className=\"wechat\"/>} >\n            <Text underline>KevinYang</Text>\n        </Popover>\n      </Footer>\n    );\n  }\n}\n\nexport default OpsFooter;\n","import React, { Component } from 'react';\nimport {Layout} from \"antd\";\n\nconst { Content } = Layout;\n\nclass WelcomeContent extends Component {\n  render() {\n    return (\n      <Content style={{ height: '100%' }}>\n        <div className=\"welcome-ad\" />\n      </Content>\n    );\n  }\n}\n\nexport default WelcomeContent;\n","import React, { Component } from 'react';\nimport { Breadcrumb } from 'antd';\n\n\nclass OpsBreadcrumbPath extends Component {\n\n    static defaultProps = {\n        pathData: [],\n    };\n\n    render() {\n        return (\n            <Breadcrumb style={{ margin: '5px 0px 10px 0px' }}>\n                {\n                    this.props.pathData.map((path) => {\n                        return (\n                            <Breadcrumb.Item key={path}>{path}</Breadcrumb.Item>\n                        )\n                    })\n                }\n            </Breadcrumb>\n    );\n  }\n}\n\nexport default OpsBreadcrumbPath;\n","import req from \"../utils/axios\";\n\nconst getCloudServers = (params) =>{\n    return req.get('cloud/servers', params)\n};\nexport {getCloudServers}\n\nconst getCloudServerDetail = (id) =>{\n    return req.get('cloud/servers/'+id)\n};\nexport {getCloudServerDetail}\n\nconst getCloudAccouts = (page, size) =>{\n    return req.get('cloud/accounts',{page, size})\n};\nexport {getCloudAccouts}\n\nconst postCloudAccouts = (data) =>{\n    return req.post('cloud/accounts', data)\n};\nexport {postCloudAccouts}\n\nconst putCloudAccouts = (data) =>{\n    return req.put('cloud/accounts', data)\n};\nexport {putCloudAccouts}\n\nconst deleteCloudAccouts = (data) =>{\n    return req.delete('cloud/accounts', data)\n};\nexport {deleteCloudAccouts}\n\nconst getCloudMonitorEcs = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/ecs',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorEcs}\n\nconst getCloudMonitorRds = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/rds',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorRds}\n\nconst getCloudMonitorKv = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/kv',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorKv}\n\nconst getCloudMonitorSlb = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/slb',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorSlb}\n\nconst getCloudRds = (params) =>{\n    return req.get('cloud/rds',params)\n};\nexport {getCloudRds}\n\nconst getCloudKv = (params) =>{\n    return req.get('cloud/kv',params)\n};\nexport {getCloudKv}\n\nconst getCloudSlb = (params) =>{\n    return req.get('cloud/slb',params)\n};\nexport {getCloudSlb}\n\nconst getCloudRdsDetail = (id) =>{\n    return req.get('cloud/rds/'+id)\n};\nexport {getCloudRdsDetail}\n\nconst getCloudKvDetail = (id) =>{\n    return req.get('cloud/kv/'+id)\n};\nexport {getCloudKvDetail}\n\nconst getCloudSlbDetail = (id) =>{\n    return req.get('cloud/slb/'+id)\n};\nexport {getCloudSlbDetail}\n\nconst postCloudServer = (data) =>{\n    return req.post('cloud/servers', data)\n};\nexport {postCloudServer}\n\nconst putCloudServer = (data) =>{\n    return req.put('cloud/servers', data)\n};\nexport {putCloudServer}\n\nconst deleteCloudServer = (id) =>{\n    return req.delete('cloud/servers', {id: id})\n};\nexport {deleteCloudServer}\n\nconst deleteCloudKv = (id) =>{\n    return req.delete('cloud/kv', {id: id})\n};\nexport {deleteCloudKv}\n\nconst postCloudKv = (data) =>{\n    return req.post('cloud/kv', data)\n};\nexport {postCloudKv}\n\nconst putCloudKv = (data) =>{\n    return req.put('cloud/kv', data)\n};\nexport {putCloudKv}\n\nconst putCloudRds = (data) =>{\n    return req.put('cloud/rds', data)\n};\nexport {putCloudRds}\n\nconst postCloudRds = (data) =>{\n    return req.post('cloud/rds', data)\n};\nexport {postCloudRds}\n\nconst deleteCloudRds = (id) =>{\n    return req.delete('cloud/rds', {id: id})\n};\nexport {deleteCloudRds}\n\nconst deleteCloudSlb = (id) =>{\n    return req.delete('cloud/slb', {id: id})\n};\nexport {deleteCloudSlb}\n\nconst getCloudOtherRes = (params) =>{\n    return req.get('cloud/other', params)\n};\nexport {getCloudOtherRes}\n\nconst postCloudOtherRes = (data) =>{\n    return req.post('cloud/other', data)\n};\nexport {postCloudOtherRes}\n\nconst putCloudOtherRes = (data) =>{\n    return req.put('cloud/other', data)\n};\nexport {putCloudOtherRes}\n\nconst deleteCloudOtherRes = (id) =>{\n    return req.delete('cloud/other', {id: id})\n};\nexport {deleteCloudOtherRes}","import React, {Component} from \"react\";\nimport {Form, Input, Modal, Divider, Row, Col, DatePicker} from \"antd\";\nimport moment from 'moment';\nmoment.locale('zh-cn');\n\nconst EcsInfoForm = [\n    {\n        label: \"来源\",\n        key: \"resForm\",\n        type: \"input\",\n        disabled: true,\n    },\n    {\n        label: \"实例Id\",\n        key: \"instanceId\",\n        type: \"input\",\n    },\n    {\n        label: \"实例名称\",\n        key: \"instanceName\",\n        type: \"input\",\n    },\n    {\n        label: \"内网ip\",\n        key: \"innerIpAddress\",\n        type: \"input\",\n    },\n    {\n        label: \"外网ip\",\n        key: \"publicIpAddress\",\n        type: \"input\",\n    },\n    {\n        label: \"私有ip\",\n        key: \"privateIpAddress\",\n        type: \"input\",\n    },\n    {\n        label: \"CPU\",\n        key: \"cpu\",\n        type: \"input\",\n    },\n    {\n        label: \"内存(G)\",\n        key: \"memory\",\n        type: \"input\",\n    },\n    {\n        label: \"过期时间\",\n        key: \"expiredTime\",\n        type: \"date_input\",\n    },\n    {\n        label: \"SSH Port\",\n        key: \"sshPort\",\n        type: \"input\",\n    },\n    {\n        label: \"SSH 用户\",\n        key: \"sshUser\",\n        type: \"input\",\n    },\n    {\n        label: \"SSH 密码\",\n        key: \"sshPwd\",\n        type: \"input\",\n    },\n];\n\nconst RdsInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"dbInstanceDescription\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"内存(G)\",\n        \"key\": \"dbMemory\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"磁盘(G)\",\n        \"key\": \"dbInstanceStorage\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"dbExpiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nconst KvInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"kvInstanceName\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"带宽\",\n        \"key\": \"kvBandwidth\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"容量(G)\",\n        \"key\": \"kvCapacity\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"kvExpiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nclass ExtraInfoModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.switchChange = this.switchChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            usersData: [],\n        }\n    }\n\n    componentDidMount() {\n        this.generateBaseInfoForm();\n    }\n\n    switchChange(value) {\n        this.setState({renewSwitch: value});\n    }\n\n    handleOk() {\n        this.formRef.current.validateFields().then((values) => {\n            if('expiredTime' in values){\n                values.expiredTime = moment(values.expiredTime).format(\"YYYY-MM-DD 00:00:00\");\n            }\n            if('dbExpiredTime' in values){\n                values.dbExpiredTime = moment(values.dbExpiredTime).format(\"YYYY-MM-DD 00:00:00\");\n            }\n            if('kvExpiredTime' in values){\n                values.kvExpiredTime = moment(values.kvExpiredTime).format(\"YYYY-MM-DD 00:00:00\");\n            }\n            this.props.handleOk(values);\n        });\n    }\n\n    handleCancel() {\n        this.formRef.current.resetFields();\n        this.props.handleCancel();\n    }\n\n    getInputItem(item, disableInput) {\n        let res = <Input />;\n        switch (item.type) {\n            case 'input':\n                res = <Input disabled={item.disabled || disableInput}/>;\n                break;\n            case 'date_input':\n                res = <DatePicker format=\"YYYY-MM-DD\" disabled={item.disabled || disableInput}/>;\n                break;\n            default:\n                break;\n        }\n        return res;\n    }\n\n    generateBaseInfoForm() {\n        if(this.props.updateMode!=='single'){\n            return \"\"\n        }\n        let disableInput = false;\n        let resType = this.props.resType;\n        let formContent;\n        let result = [];\n        const twoItemFormLayout = {\n            labelCol: {span: 7},\n            wrapperCol: {span: 17},\n        };\n        let data = [];\n        switch (resType) {\n            case 'ecs':\n                data = EcsInfoForm;\n                break;\n            case 'rds':\n                data = RdsInfoForm;\n                break;\n            case 'kv':\n                data = KvInfoForm;\n                break;\n            default:\n                break;\n        }\n        let formItem = data.map((item, index) => {\n            let offsetNum = index % 2 === 0 ? 0 : 1;\n            return (\n                <Col span={11} offset={offsetNum} key={item.key}>\n                    <Form.Item {...twoItemFormLayout} label={item.label} name={item.key} rules={[\n                        {required: item.required, message: '该值为必填项！'}\n                    ]}>\n                        {this.getInputItem(item, disableInput)}\n                    </Form.Item>\n                </Col>\n            )\n        });\n        result.push(formItem);\n        formContent = (\n            <div>\n                <Divider orientation=\"left\" style={{ marginTop: '0px', color: 'rgb(255, 80, 23)'}}>基本信息</Divider>\n                <Row gutter={12}>{result}</Row>\n            </div>\n        );\n        return formContent;\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 7},\n            wrapperCol: {span: 14},\n        };\n        return (\n            <Modal\n                visible={this.props.visible}\n                destroyOnClose={true}\n                title=\"完善资源信息\"\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                centered={true}\n                width={700}\n            >\n                <Form ref={this.formRef} {...formItemLayout} initialValues={this.props.editData}>\n                    {this.generateBaseInfoForm()}\n                </Form>\n            </Modal>\n        )\n    }\n\n}\n\nexport default ExtraInfoModal;","import React, { Component } from \"react\";\nimport { Line } from \"@antv/g2plot\";\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.id = this.uuid();\n    }\n\n    uuid() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n            c,\n        ) {\n            var r = (Math.random() * 16) | 0,\n                v = c === \"x\" ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n\n    componentDidMount() {\n        let id = this.id;\n        let data = this.props.data;\n        let xField = this.props.xField ? this.props.xField : \"date\";\n        let yField = this.props.yField ? this.props.yField : \"value\";\n        setTimeout(() => {\n            this.line = new Line(id, {\n                data,\n                width: this.props.width,\n                height: this.props.height,\n                padding: \"auto\",\n                xField: xField,\n                yField: yField,\n                meta: {\n                    yField: {},\n                },\n            });\n            this.line.render();\n        }, 300);\n    }\n\n    componentDidUpdate() {\n        setTimeout(() => this.line.changeData(this.props.data), 400);\n    }\n\n    render() {\n        return (\n            <div\n                id={this.id}\n                style={{ height: this.props.height, width: this.props.width }}\n            ></div>\n        );\n    }\n}\n\nexport default LineChart;\n","import React from \"react\";\nimport { createFromIconfontCN } from \"@ant-design/icons\";\n\nconst WindowsSvg = () => (\n    <svg\n        width=\"15px\"\n        height=\"15px\"\n        t=\"1562667653974\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"2507\"\n    >\n        <path\n            d=\"M486.4 134.4L960 64v422.4H486.4V134.4z\"\n            fill=\"#90C300\"\n            p-id=\"2508\"\n        ></path>\n        <path\n            d=\"M64 198.4l358.4-51.2v345.6H64V198.4z\"\n            fill=\"#F8672C\"\n            p-id=\"2509\"\n        ></path>\n        <path\n            d=\"M486.4 889.6L960 960V550.4H486.4v339.2z\"\n            fill=\"#FFC400\"\n            p-id=\"2510\"\n        ></path>\n        <path\n            d=\"M64 825.6l358.4 51.2V550.4H64v275.2z\"\n            fill=\"#00B4F2\"\n            p-id=\"2511\"\n        ></path>\n    </svg>\n);\n\nconst LinuxSvg = () => (\n    <svg\n        t=\"1562667694279\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"3672\"\n        width=\"15px\"\n        height=\"15px\"\n    >\n        <path\n            d=\"M839.73005 769.44c9.3-20 13.6-48 13.6-86.78 0-138.52-63.82-218.44-115.08-282.66-31.04-38.9-55.58-69.62-55.58-101.34v-10c0.32-58.88 1.02-181.48-64-246.94C591.05005 14 555.19005 0 511.99005 0c-89.62 0-149.32 43.54-149.32 256 0 58.48-24.62 106.38-50.66 157.08-11.4 22.24-23.22 45.24-33.12 69.54C259.19005 531.08 213.33005 649.68 213.33005 704a21.4 21.4 0 0 0 2.44 10l151 288a21.4 21.4 0 0 0 16.38 11.1 21.4 21.4 0 0 0 18.64-7.06c9.48-10.56 72.32-24.56 110.2-24.56h144.74a21.4 21.4 0 0 0 14.88-6l175.26-170.68a21.34 21.34 0 0 0-7.14-35.18z\"\n            fill=\"#1A1A1A\"\n            p-id=\"3673\"\n        ></path>\n        <path\n            d=\"M688.19005 717.3c-0.52-103.88-14.64-220.72-96.72-388.52C550.85005 356.26 476.29005 378 467.33005 378c-16.16 0-51.42-11.54-77.34-34.4-10.64 31.42-25.38 60.52-40 89-11 21.4-22.36 43.54-31.54 66.12C292.65005 562 263.19005 645.46 257.33005 689.78c18 12 30.64 38 44.54 67.14 14.4 30.12 30.7 64.26 51.72 78.92 38.48 26.78 58.42 64.98 63.64 99.68 14.64 1.46 33.1 2.72 54 2.72 52 0 122.6-10.56 174.82-42.24 2.9-56.44 12.82-146.96 42.14-178.7z\"\n            fill=\"#FFFFFF\"\n            p-id=\"3674\"\n        ></path>\n        <path\n            d=\"M892.85005 813.84c-8.84-5.8-18-11.8-24.44-18.26-3.76-3.76-2-21.2-1.12-30.58 1.76-18 3.6-36.58-8.5-50-4.56-5.04-12.94-11.06-26.8-11.06-11.4 0-19.74 9.04-20.24 20.44 0 0.3 0.12 0.58 0.12 0.9H725.33005A21.32 21.32 0 0 0 703.99005 704c-63.26 0-64 232.32-64.24 237.4-1.2 12.72-4 42.58 15.12 63.54 11.52 12.64 28 19.06 49.12 19.06 55.38 0 82.24-28.54 108.2-56.12 4.36-4.68 8.84-9.42 13.56-14.12 10.8-10.82 32-18.54 50.62-25.34 30.62-11.2 62.3-22.76 62.3-53.76s-25.34-47.44-45.82-60.82zM353.51005 835.84c-21.02-14.66-37.32-48.8-51.72-78.92-19.04-39.84-35.5-74.26-67.12-74.26-40 0-48.66 35.88-53.32 55.16-1.3 5.3-3.24 13.3-3.44 14.24-3.16 2-15.08 4.32-22.96 5.88C128.91005 763.1 85.33005 771.72 85.33005 810.66a162.48 162.48 0 0 0 3.54 30.98C92.17005 859.4 95.33005 876.14 86.01005 912a20.8 20.8 0 0 0-0.68 5.34c0 51.28 79.66 58 127.28 61.88 8 0.68 14.5 1.18 18.72 1.84 6.56 1.04 20.32 7.38 33.6 13.5C293.33005 1007.68 328.77005 1024 362.67005 1024c24.36 0 43.86-15.76 52.16-42.12 12.9-41.1-4.18-106.28-61.32-146.04z\"\n            fill=\"#FDB515\"\n            p-id=\"3675\"\n        ></path>\n        <path\n            d=\"M831.99005 661.34a20.64 20.64 0 0 0-10.92 3.44l-142.46-233.1a1140 1140 0 0 0-62.32-142.78 21.32 21.32 0 1 0-38 19.54c96.32 187.16 104.3 304 104.34 415.7-0.26 4.48-1.78 44.44 21.2 68.76a57.3 57.3 0 0 0 42.76 17.76h14.78c21.7 0 45.16-1.66 63.5-19.86 19.72-19.36 28.46-52.8 28.46-108.14a21.32 21.32 0 0 0-21.34-21.32z\"\n            fill=\"#1A1A1A\"\n            p-id=\"3676\"\n        ></path>\n        <path\n            d=\"M554.67005 129.78c-24.74 0-42.68 26.54-42.68 63.12s18 63.1 42.68 63.1S597.33005 229.46 597.33005 192.9s-18-63.12-42.66-63.12z\"\n            fill=\"#FFFFFF\"\n            p-id=\"3677\"\n        ></path>\n        <path\n            d=\"M535.31005 208.56a37.9 19.36 90 1 0 38.72 0 37.9 19.36 90 1 0-38.72 0Z\"\n            p-id=\"3678\"\n        ></path>\n        <path\n            d=\"M426.67005 129.78c-24.74 0-42.68 26.54-42.68 63.12s18 63.1 42.68 63.1S469.33005 229.46 469.33005 192.9s-18-63.12-42.66-63.12z\"\n            fill=\"#FFFFFF\"\n            p-id=\"3679\"\n        ></path>\n        <path\n            d=\"M407.71005 207.82a37.14 18.96 90 1 0 37.92 0 37.14 18.96 90 1 0-37.92 0Z\"\n            p-id=\"3680\"\n        ></path>\n        <path\n            d=\"M494.85005 213.76a21.16 21.16 0 0 0-4.18-0.42c-45.88 0-128 43.02-128 85.32 0 40 80.68 85.34 106.66 85.34 12.6 0 149.34-47.48 149.34-85.34 0-55.8-94.78-79.1-123.82-84.9z\"\n            fill=\"#FDB515\"\n            p-id=\"3681\"\n        ></path>\n    </svg>\n);\n\nconst StatusDoneSvg = () => (\n    <svg\n        t=\"1570523496603\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1158\"\n        width=\"20\"\n        height=\"20\"\n    >\n        <path\n            d=\"M512 34.133333a486.4 486.4 0 1 0 486.4 486.4A486.4 486.4 0 0 0 512 34.133333z m288.580267 332.552534l-324.266667 347.426133a45.866667 45.866667 0 0 1-64.9216 2.6112 20.334933 20.334933 0 0 1-1.518933-1.518933l-185.258667-185.233067a46.344533 46.344533 0 0 1 65.3568-65.3568l152.541867 151.3472 290.423466-312.2432a46.293333 46.293333 0 1 1 71.68 58.632533 37.0944 37.0944 0 0 1-4.0192 4.343467z m0 0\"\n            p-id=\"1159\"\n            fill=\"#1296db\"\n        ></path>\n    </svg>\n);\n\nconst StatusProgressSvg = () => (\n    <svg\n        t=\"1570523553927\"\n        className=\"icon\"\n        viewBox=\"0 0 1160 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1721\"\n        width=\"20\"\n        height=\"20\"\n    >\n        <path\n            d=\"M610.84444476 70.65600031a454.39999969 454.39999969 0 1 1-0.70400062 908.79999938c-140.60800031-3.19999969-261.76000031-62.91199969-361.59999938-177.66399938a31.99999969 31.99999969 0 0 1 48.25599938-41.98400062c88.32 101.50399969 192.64000031 152.89600031 314.04800062 155.64800062a390.40000031 390.40000031 0 1 0-388.992-423.80800031l73.344-73.27999969a31.99999969 31.99999969 0 0 1 48.89599969 40.83199969l-3.648 4.48000031L231.83644476 572.16000031a31.99999969 31.99999969 0 0 1-40.83200062 3.71199938l-4.47999938-3.71199938-108.60800062-108.60800062a31.99999969 31.99999969 0 0 1 40.83200062-48.96l4.47999938 3.71200031 38.33600062 38.4A454.52800031 454.52800031 0 0 1 610.84444476 70.65600031z m0 224.19199969a31.99999969 31.99999969 0 0 1 31.99999969 31.99999969v178.81600031l162.36799969 156.35200031a31.99999969 31.99999969 0 0 1-44.41599938 46.08l-172.16000062-165.76000031a31.99999969 31.99999969 0 0 1-9.792-23.04V326.78400031a31.99999969 31.99999969 0 0 1 32.00000062-32.00000062z\"\n            fill=\"#d81e06\"\n            p-id=\"1722\"\n        ></path>\n    </svg>\n);\n\nconst FeedbackIconSvg = () => (\n    <svg\n        t=\"1563505298187\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"1259\"\n        width=\"30\"\n        height=\"30\"\n    >\n        <path\n            d=\"M891.948987 415.265842c-1.179872-10.754948-10.288321-19.125593-21.357424-19.125593-11.06808 0-20.176528 8.370645-21.355377 19.125593l-0.138146 0 0 373.048321c0 34.241872-27.854395 62.09422-62.09422 62.09422l-551.684838 0c-34.237779 0-62.09422-27.852348-62.09422-62.09422L173.224762 232.148267c0-34.238802 27.856441-62.09422 62.09422-62.09422l370.370329 0 0-0.030699c11.596106-0.314155 20.907169-9.790994 20.907169-21.463848 0-11.672854-9.311063-21.149693-20.907169-21.463848l0-0.030699L235.318982 127.064954c-57.942667 0-105.08229 47.139623-105.08229 105.08229l0 556.165896c0 57.942667 47.139623 105.081267 105.08229 105.081267l551.684838 0c57.942667 0 105.081267-47.1386 105.081267-105.081267L892.085086 415.265842 891.948987 415.265842z\"\n            p-id=\"1260\"\n            fill=\"#e6e6e6\"\n        ></path>\n        <path\n            d=\"M338.386382 640.382972l-0.098237 0.401136c-1.759063 7.462972-3.27458 21.424962 6.352685 31.04711 5.969968 5.980201 13.610996 7.66354 20.327978 7.66354 4.100388 0 7.860015-0.629333 10.686387-1.292436l117.404943-31.000038 374.183168-374.183168c13.081946-13.080923 20.286022-30.473035 20.286022-48.972365s-7.204076-35.892465-20.286022-48.972365l-25.894763-25.895787c-27.006074-27.003004-70.942749-27.009144-97.948823-0.001023L369.180735 523.397584 338.386382 640.382972zM403.702993 558.714951l54.066383 54.061266-72.705905 18.640546L403.702993 558.714951zM429.577291 523.793604l292.435329-292.433282 63.047941 63.047941L492.627279 586.842569 429.577291 523.793604zM810.950208 179.574888l25.895787 25.895787c10.243295 10.243295 10.243295 26.90886 0 37.153178l-21.389146 21.388123-63.044872-63.047941 21.386076-21.388123C784.043395 169.328523 800.711006 169.335686 810.950208 179.574888z\"\n            p-id=\"1261\"\n            fill=\"#e6e6e6\"\n        ></path>\n    </svg>\n);\n\nconst K8sContainerIconSvg = () => (\n    <svg\n        t=\"1569723850164\"\n        className=\"icon\"\n        viewBox=\"0 0 1024 1024\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        p-id=\"657\"\n        width=\"30\"\n        height=\"30\"\n    >\n        <path\n            d=\"M205.653333 737.066667c-29.184 0-55.637333-23.893333-55.637333-52.906667s23.893333-53.034667 55.68-53.034667c31.914667 0 55.893333 23.893333 55.893333 52.992s-26.538667 52.906667-55.68 52.906667z m683.178667-288.554667c-5.76-42.325333-32-76.8-66.56-103.253333l-13.44-10.666667-10.837333 13.226667c-21.077333 23.893333-29.44 66.261333-26.88 97.92 2.56 23.978667 10.24 47.786667 23.637333 66.304-10.837333 5.546667-24.234667 10.666667-34.56 16.085333a225.706667 225.706667 0 0 1-71.68 10.666667H4.138667l-2.56 15.786666a297.813333 297.813333 0 0 0 23.978666 151.04l10.410667 18.56v2.56c64 105.941333 177.92 153.6 301.994667 153.6 238.677333 0 434.432-103.253333 527.232-325.674666 60.8 2.645333 122.197333-13.226667 151.04-71.509334l7.68-13.226666-12.8-7.978667c-34.56-21.077333-81.92-23.893333-121.6-13.226667l-0.768 0.085334z m-341.674667-42.325333h-103.594666v103.253333h103.68V406.101333l-0.085334 0.128z m0-129.834667h-103.594666v103.253333h103.68V276.48l-0.085334-0.128z m0-132.437333h-103.594666v103.253333h103.68v-103.253333h-0.085334z m126.72 262.272H570.88v103.253333h103.253333V406.101333l-0.298666 0.128z m-383.914666 0H187.008v103.253333h103.338667V406.101333l-0.426667 0.128z m129.28 0h-102.4v103.253333H419.84V406.101333l-0.64 0.128z m-257.28 0H59.733333v103.253333h103.594667V406.101333l-1.28 0.128z m257.28-129.834667h-102.4v103.253333H419.84V276.48l-0.64-0.128z m-129.92 0H187.178667v103.253333H290.133333V276.48l-0.682666-0.128z\"\n            fill=\"#1296db\"\n            p-id=\"658\"\n        ></path>\n    </svg>\n);\n\nconst OpsIcon = createFromIconfontCN({\n    scriptUrl: \"//at.alicdn.com/t/font_1740765_flmkngup1r.js\",\n});\n\nexport {\n    WindowsSvg,\n    LinuxSvg,\n    StatusDoneSvg,\n    StatusProgressSvg,\n    FeedbackIconSvg,\n    K8sContainerIconSvg,\n    OpsIcon,\n};\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    DatePicker,\n    Descriptions,\n    Divider,\n    Drawer,\n    Form,\n    Typography,\n    Input,\n    InputNumber,\n    Layout,\n    message,\n    Modal,\n    Radio,\n    Row,\n    Select,\n    Spin,\n    Table,\n    Tabs,\n    Popconfirm,\n    Badge,\n    Tooltip,\n} from \"antd\";\nimport {\n    SearchOutlined,\n    PlusCircleOutlined,\n    EyeInvisibleOutlined,\n    EyeTwoTone,\n} from \"@ant-design/icons\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport moment from \"moment\";\nimport \"../../assets/css/main.css\";\nimport {\n    deleteCloudServer,\n    getCloudAccouts,\n    getCloudMonitorEcs,\n    getCloudServerDetail,\n    getCloudServers,\n    postCloudServer,\n    putCloudServer,\n} from \"../../api/cloud\";\nimport \"moment/locale/zh-cn\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport LineChart from \"./common/line_chart\";\nimport { LinuxSvg, WindowsSvg } from \"../../assets/Icons\";\nimport { Terminal } from \"xterm\";\nimport { AttachAddon } from \"xterm-addon-attach\";\nimport \"../../../node_modules/xterm/css/xterm.css\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { WSBase } from \"../../config\";\nmoment.locale(\"zh-cn\");\n\nconst TabPane = Tabs.TabPane;\nconst { Text, Paragraph } = Typography;\nconst Option = Select.Option;\nconst { Content } = Layout;\n\nclass ServerInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n\n        return (\n            <Modal\n                title=\"服务器信息\"\n                destroyOnClose={true}\n                visible={this.props.server_info_modal_visible}\n                onOk={this.props.handlePostServerInfoSubmit}\n                onCancel={this.props.handlePostServerInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={600}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ osType: \"linux\" }}\n                >\n                    <Form.Item\n                        label=\"云账号\"\n                        {...formItemLayout}\n                        name=\"cloudAccountId\"\n                        rules={[\n                            { required: true, message: \"云账号不能为空！\" },\n                        ]}\n                    >\n                        <Select>{accountOptions}</Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"主机名\"\n                        {...formItemLayout}\n                        name=\"hostName\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例Id\"\n                        {...formItemLayout}\n                        name=\"instanceId\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例名称\"\n                        {...formItemLayout}\n                        name=\"instanceName\"\n                        rules={[\n                            { required: true, message: \"实例名称不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例描述\"\n                        {...formItemLayout}\n                        name=\"description\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"内网IP\"\n                        {...formItemLayout}\n                        name=\"innerIpAddress\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"外网IP\"\n                        {...formItemLayout}\n                        name=\"publicIpAddress\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"系统类型\"\n                        {...formItemLayout}\n                        name=\"osType\"\n                        rules={[\n                            { required: true, message: \"系统类型不能为空！\" },\n                        ]}\n                    >\n                        <Select>\n                            <Option value=\"linux\">Linux</Option>\n                            <Option value=\"windows\">Windows</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"CPU核数(个)\"\n                        {...formItemLayout}\n                        name=\"cpu\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"内存(G)\"\n                        {...formItemLayout}\n                        name=\"memory\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"磁盘(G)\"\n                        {...formItemLayout}\n                        name=\"disk\"\n                        rules={[{ type: \"integer\" }]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"创建时间\"\n                        {...formItemLayout}\n                        name=\"createTime\"\n                        rules={[\n                            { required: true, message: \"创建时间不能为空！\" },\n                        ]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"过期时间\"\n                        {...formItemLayout}\n                        name=\"expiredTime\"\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"SSH登录端口\"\n                        {...formItemLayout}\n                        name=\"sshPort\"\n                        rules={[{ type: \"integer\" }]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"SSH登录用户\"\n                        {...formItemLayout}\n                        name=\"sshUser\"\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"SSH登录密码\"\n                        {...formItemLayout}\n                        name=\"sshPwd\"\n                    >\n                        <Input.Password\n                            iconRender={(visible) =>\n                                visible ? (\n                                    <EyeTwoTone />\n                                ) : (\n                                    <EyeInvisibleOutlined />\n                                )\n                            }\n                        />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass ServerContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePostServerInfoSubmit = this.handlePostServerInfoSubmit.bind(\n            this,\n        );\n        this.handlePostServerInfoCancel = this.handlePostServerInfoCancel.bind(\n            this,\n        );\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 220 : 100;\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"InstanceId\",\n                    key: \"InstanceId\",\n                    width: 200,\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    width: 200,\n                    textWrap: \"word-break\",\n                    render: (value) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text\n                                    ellipsis={true}\n                                    style={{ width: \"200px\" }}\n                                >\n                                    {value}\n                                </Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"ip\",\n                    dataIndex: \"ip\",\n                    key: \"ip\",\n                    width: 200,\n                    render: (value, record) => {\n                        let innerContent = \"\";\n                        let privateContent = \"\";\n                        let publicContent = \"\";\n                        if (record.InnerIpAddress) {\n                            innerContent = (\n                                <div>\n                                    <Paragraph\n                                        style={{\n                                            marginBottom: 0,\n                                            display: \"inline\",\n                                        }}\n                                        copyable={record.InnerIpAddress !== \"\"}\n                                    >\n                                        {record.InnerIpAddress}\n                                    </Paragraph>\n                                    (内网)\n                                </div>\n                            );\n                        }\n                        if (record.PrivateIpAddress) {\n                            privateContent = (\n                                <div>\n                                    <Paragraph\n                                        style={{\n                                            marginBottom: 0,\n                                            display: \"inline\",\n                                        }}\n                                        copyable={\n                                            record.PrivateIpAddress !== \"\"\n                                        }\n                                    >\n                                        {record.PrivateIpAddress}\n                                    </Paragraph>\n                                    (私有)\n                                </div>\n                            );\n                        }\n                        if (record.PublicIpAddress) {\n                            publicContent = (\n                                <div>\n                                    <Paragraph\n                                        style={{\n                                            marginBottom: 0,\n                                            display: \"inline\",\n                                        }}\n                                        copyable={record.PublicIpAddress !== \"\"}\n                                    >\n                                        {record.PublicIpAddress}\n                                    </Paragraph>\n                                    (外网)\n                                </div>\n                            );\n                        }\n                        return (\n                            <div className=\"ip_column\">\n                                {innerContent}\n                                {privateContent}\n                                {publicContent}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"配置\",\n                    dataIndex: \"配置\",\n                    key: \"配置\",\n                    width: 100,\n                    render: (value, record) => {\n                        let cpuContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                {record.Cpu}核\n                            </Paragraph>\n                        );\n                        let memoryContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                {record.Memory}G\n                            </Paragraph>\n                        );\n                        let trafficType = \"\";\n                        if (record.InternetChargeType === \"PayByTraffic\") {\n                            trafficType = \"流量\";\n                        }\n                        if (record.InternetChargeType === \"PayByBandwidth\") {\n                            trafficType = \"带宽\";\n                        }\n                        let trafficOutContent = (\n                            <div>\n                                <Paragraph\n                                    style={{\n                                        marginBottom: 0,\n                                        display: \"inline\",\n                                    }}\n                                >\n                                    {record.InternetMaxBandwidthOut}Mbps(\n                                    {trafficType})\n                                </Paragraph>\n                            </div>\n                        );\n                        return (\n                            <div className=\"ip_column\">\n                                {cpuContent} &nbsp;\n                                {memoryContent}\n                                {trafficOutContent}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"系统类型\",\n                    dataIndex: \"OSType\",\n                    key: \"OSType\",\n                    align: \"center\",\n                    width: 80,\n                    render: (value, record) => {\n                        let status = \"error\";\n                        if (record.Status === \"Running\") {\n                            status = \"processing\";\n                        }\n                        if (value === \"windows\") {\n                            return (\n                                <div>\n                                    <WindowsSvg />\n                                    <Badge\n                                        status={status}\n                                        style={{\n                                            marginLeft: \"5px\",\n                                            position: \"relative\",\n                                            top: \"-10px\",\n                                        }}\n                                    />\n                                </div>\n                            );\n                        } else if (value === \"linux\") {\n                            return (\n                                <div>\n                                    <LinuxSvg />\n                                    <Badge\n                                        status={status}\n                                        style={{\n                                            marginLeft: \"5px\",\n                                            position: \"relative\",\n                                            top: \"-10px\",\n                                        }}\n                                    />\n                                </div>\n                            );\n                        } else {\n                            return <Text ellipsis={true}>{value}</Text>;\n                        }\n                    },\n                },\n                {\n                    title: \"区域\",\n                    dataIndex: \"ZoneId\",\n                    key: \"ZoneId\",\n                    width: 120,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ExpiredTime\",\n                    key: \"ExpiredTime\",\n                    width: 120,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: { operWidth },\n                    align: \"center\",\n\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.openMonitorDrawer.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    监控\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.serverEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.serverDelete.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            webSocketReady: false,\n            chartData: [],\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            drawerVisible: false,\n            drawerPlacement: \"left\",\n            instanceId: \"\",\n            timeTagValue: \"1h\",\n            metricTagValue: \"CPUUtilization\",\n            chartFormat: \"%\",\n            currentServerDetail: {},\n            msgContent: \"\",\n            server_info_modal_visible: false,\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n            extraInfoData: {},\n        };\n        // -----------------------\n        this.timer = null;\n        this.terminal = null;\n        this.rws = null;\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    componentWillUnmount() {\n        if (this.rws !== null) {\n            this.rws.close();\n        }\n        if (this.terminal !== null) {\n            this.terminal.dispose();\n        }\n    }\n\n    initWsConnection() {\n        this.rws.addEventListener(\"open\", () => {\n            console.log(\"connect success\");\n        });\n\n        this.rws.addEventListener(\"close\", () => {\n            console.log(\"close\");\n        });\n\n        this.rws.addEventListener(\"message\", (e) => {\n            console.log(\"message: \", e);\n        });\n\n        this.rws.addEventListener(\"error\", () => {\n            console.log(\"error\");\n        });\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    serverEdit(data) {\n        getCloudServerDetail(data.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                } else {\n                    let extraInfoData = {\n                        instanceId: res.data[\"InstanceId\"],\n                        innerIpAddress: res.data[\"InnerIpAddress\"],\n                        publicIpAddress: res.data[\"PublicIpAddress\"],\n                        privateIpAddress: res.data[\"PrivateIpAddress\"],\n                        instanceName: res.data[\"InstanceName\"],\n                        cpu: res.data[\"Cpu\"],\n                        memory: (res.data[\"Memory\"] / 1024).toString(),\n                        expiredTime:\n                            res.data[\"ExpiredTime\"] !== \"\"\n                                ? moment(res.data[\"ExpiredTime\"])\n                                : \"\",\n                        resForm:\n                            res.data[\"DataStatus\"] === 1\n                                ? \"阿里云\"\n                                : \"手动添加\",\n                        sshPort: res.data[\"SshPort\"] + \"\",\n                        sshUser: res.data[\"SshUser\"],\n                        sshPwd: res.data[\"SshPwd\"],\n                    };\n                    this.setState({\n                        extraInfoModalVisible: true,\n                        ecsId: data.ID,\n                        updateMode: \"single\",\n                        resFrom:\n                            data[\"DataStatus\"] === 1 ? \"阿里云\" : \"手动添加\",\n                        extraInfoData: extraInfoData,\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.ecsId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudServer({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                    message.success(\"修改成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    serverDelete(data) {\n        deleteCloudServer(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            queryKeyword: this.state.queryKeyword,\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudServers(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination: { ...pagination },\n                });\n                let data = res[\"data\"][\"servers\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        Memory: data[i][\"Memory\"] / 1024,\n                        Cpu: data[i][\"Cpu\"],\n                        HostName: data[i][\"HostName\"],\n                        InstanceId: data[i][\"InstanceId\"],\n                        InnerIpAddress: data[i][\"InnerIpAddress\"],\n                        PublicIpAddress: data[i][\"PublicIpAddress\"],\n                        PrivateIpAddress: data[i][\"PrivateIpAddress\"],\n                        InternetMaxBandwidthIn:\n                            data[i][\"InternetMaxBandwidthIn\"],\n                        InternetMaxBandwidthOut:\n                            data[i][\"InternetMaxBandwidthOut\"],\n                        InternetChargeType: data[i][\"InternetChargeType\"],\n                        InstanceName: data[i][\"InstanceName\"],\n                        OSType: data[i][\"OSType\"],\n                        ZoneId: data[i][\"ZoneId\"],\n                        OSName: data[i][\"OSName\"],\n                        ExpiredTime: moment(data[i][\"ExpiredTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        Status: data[i][\"Status\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        DataStatus: data[i][\"DataStatus\"],\n                        SshPort: data[i][\"SshPort\"] + \"\",\n                        SshUser: data[i][\"SshUser\"],\n                        SshPwd: data[i][\"SshPwd\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                message.error(err);\n            });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState(\n            {\n                drawerVisible: true,\n                instanceId: data.InstanceId,\n                currentServerDetail: data,\n            },\n            () => {\n                this.refreshMonitorData(\n                    data.InstanceId,\n                    this.state.timeTagValue,\n                    this.state.metricTagValue,\n                );\n                this.refreshSeverDetail();\n            },\n        );\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({ chartLoading: true });\n        getCloudMonitorEcs(instanceId, timeTagValue, metricTagValue)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                if (res[\"data\"][\"Datapoints\"] === \"\") {\n                    message.warn(\n                        \"未获取到监控数据，可能是非阿里云机器或其它原因！\",\n                    );\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                let dataPoints = JSON.parse(res[\"data\"][\"Datapoints\"]);\n                let chartData = [];\n                for (let i = 0; i < dataPoints.length; i++) {\n                    chartData.push({\n                        date: moment(dataPoints[i][\"timestamp\"]).format(\n                            \"DD日HH:mm\",\n                        ),\n                        value: dataPoints[i][\"Average\"],\n                    });\n                }\n                this.setState({ chartLoading: false, chartData: chartData });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({ serverDetailLoading: true });\n        getCloudServerDetail(this.state.currentServerDetail.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                }\n                this.setState({ currentServerDetail: res[\"data\"] }, () => {\n                    this.setState({ serverDetailLoading: false });\n                });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false });\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(\n            this.state.instanceId,\n            e.target.value,\n            this.state.metricTagValue,\n        );\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"CPUUtilization\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"memory_usedutilization\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"diskusage_utilization\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"cpu_total\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            default:\n                this.setState({ chartFormat: \"\" });\n                break;\n        }\n        this.refreshMonitorData(\n            this.state.instanceId,\n            this.state.timeTagValue,\n            e.target.value,\n        );\n    };\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({ queryKeyword: e.target.value });\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({ queryCloudAccount });\n    };\n\n    handleUserDefineGroupChange = (queryDefineGroup) => {\n        this.setState({ queryDefineGroup });\n    };\n\n    handleManageUserChange = (queryManageUser) => {\n        this.setState({ queryManageUser });\n    };\n\n    // 新增自定义机器信息\n    handleAdd = () => {\n        this.setState({ server_info_modal_visible: true, ecsId: 0 });\n    };\n\n    handlePostServerInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudServer({\n                ...values,\n                createTime: values.createTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n                expiredTime:\n                    values.expiredTime === undefined\n                        ? undefined\n                        : values.expiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\n                            \"添加成功，请到权限管理中增加访问权限！\",\n                        );\n                        this.setState({ server_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostServerInfoCancel() {\n        this.setState({ server_info_modal_visible: false });\n    }\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onSelectChange = (selectedRowKeys) => {\n        this.setState({ selectedRowKeys });\n    };\n\n    initTerminal = () => {\n        let dom = document.getElementById(\"server_terminal\");\n        if (dom) {\n            this.rws = new ReconnectingWebSocket(\n                WSBase +\n                    \"ws/cloud/ssh?serverId=\" +\n                    this.state.currentServerDetail.ID +\n                    \"&token=\" +\n                    localStorage.getItem(\"ops_token\"),\n            );\n            this.terminal = new Terminal({\n                rows: 36,\n                fontSize: 14,\n                cursorBlink: true,\n                cursorStyle: \"block\",\n                bellStyle: \"sound\",\n                theme: \"Console\",\n            });\n            this.terminal.prompt = () => {\n                this.terminal.write(\"\\r\\n$ \");\n            };\n            const attachAddon = new AttachAddon(this.rws);\n            this.terminal.loadAddon(attachAddon);\n            this.terminal.open(document.getElementById(\"server_terminal\"));\n            this.terminal.writeln(\"Welcome to use Web Terminal.\");\n            this.terminal.prompt();\n            this.initWsConnection();\n            this.terminal.focus();\n            if (!this.timer) {\n                clearTimeout(this.timer);\n            }\n        } else {\n            this.timer = setTimeout(this.initTerminal, 0);\n        }\n    };\n\n    detailTabChange(key) {\n        if (key === \"3\") {\n            this.initTerminal();\n        }\n    }\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"云服务器\", \"服务器列表\"]}\n                />\n\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={3} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            defaultValue={this.state.queryExpiredTime}\n                            placeholder=\"到期截止时间\"\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id\\ip\\实例名称查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            <Option value=\"0\">所有云账号</Option>\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                <ServerInfoModal\n                    formRef={this.formRef}\n                    server_info_modal_visible={\n                        this.state.server_info_modal_visible\n                    }\n                    handlePostServerInfoSubmit={this.handlePostServerInfoSubmit}\n                    handlePostServerInfoCancel={this.handlePostServerInfoCancel}\n                />\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    editData={this.state.extraInfoData}\n                    resType=\"ecs\"\n                    updateMode={this.state.updateMode}\n                    resFrom={this.state.resFrom}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                {/*云服务器列表*/}\n                <Drawer\n                    title=\"服务器详情及监控数据\"\n                    placement={this.state.drawerPlacement}\n                    closable={true}\n                    destroyOnClose={true}\n                    onClose={this.onCloseDrawer}\n                    visible={this.state.drawerVisible}\n                    width={950}\n                >\n                    <Tabs\n                        defaultActiveKey=\"1\"\n                        tabPosition=\"left\"\n                        style={{ marginLeft: -30 }}\n                        onChange={this.detailTabChange.bind(this)}\n                    >\n                        <TabPane tab=\"监控详情\" key=\"1\">\n                            <Spin\n                                tip=\"图表生成中...\"\n                                spinning={this.state.chartLoading}\n                            >\n                                <Row style={{ marginBottom: \"10px\" }}>\n                                    <Col\n                                        span={3}\n                                        style={{ lineHeight: \"30px\" }}\n                                    >\n                                        时间维度：\n                                    </Col>\n                                    <Col span={15}>\n                                        <Radio.Group\n                                            value={this.state.timeTagValue}\n                                            onChange={this.handleTimeTagChange}\n                                        >\n                                            <Radio.Button value=\"1h\">\n                                                1小时\n                                            </Radio.Button>\n                                            <Radio.Button value=\"6h\">\n                                                6小时\n                                            </Radio.Button>\n                                            <Radio.Button value=\"12h\">\n                                                12小时\n                                            </Radio.Button>\n                                            <Radio.Button value=\"1d\">\n                                                1 天\n                                            </Radio.Button>\n                                            <Radio.Button value=\"3d\">\n                                                3 天\n                                            </Radio.Button>\n                                            <Radio.Button value=\"7d\">\n                                                7 天\n                                            </Radio.Button>\n                                            <Radio.Button value=\"14d\">\n                                                14 天\n                                            </Radio.Button>\n                                        </Radio.Group>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col\n                                        span={3}\n                                        style={{ lineHeight: \"30px\" }}\n                                    >\n                                        监控维度：\n                                    </Col>\n                                    <Col span={16}>\n                                        <Radio.Group\n                                            value={this.state.metricTagValue}\n                                            onChange={\n                                                this.handleMetricTagChange\n                                            }\n                                        >\n                                            <Radio.Button value=\"CPUUtilization\">\n                                                cpu使用率\n                                            </Radio.Button>\n                                            <Radio.Button value=\"memory_usedutilization\">\n                                                内存使用率\n                                            </Radio.Button>\n                                            <Radio.Button value=\"diskusage_utilization\">\n                                                磁盘使用率\n                                            </Radio.Button>\n                                            <Radio.Button value=\"cpu_total\">\n                                                平均负载\n                                            </Radio.Button>\n                                        </Radio.Group>\n                                    </Col>\n                                </Row>\n                                <Row style={{ marginTop: 20 }}>\n                                    <Col>\n                                        <LineChart\n                                            width={800}\n                                            height={400}\n                                            data={this.state.chartData}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"信息详情\" key=\"2\">\n                            <Spin\n                                tip=\"数据获取中...\"\n                                spinning={this.state.serverDetailLoading}\n                            >\n                                <Descriptions\n                                    title=\"基本信息\"\n                                    bordered\n                                    size=\"small\"\n                                    column={2}\n                                >\n                                    <Descriptions.Item label=\"主机名\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .HostName\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"机器描述\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .Description\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"实例ID\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceId\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"内网IP\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InnerIpAddress\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"外网IP\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .PublicIpAddress\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"私有IP\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .PrivateIpAddress\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"Cpu\">\n                                        {this.state.currentServerDetail.Cpu}核\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"内存\">\n                                        {this.state.currentServerDetail.Memory /\n                                            1024}\n                                        G\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"公网入带宽\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InternetMaxBandwidthIn\n                                        }\n                                        Mbps\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"公网出带宽\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InternetMaxBandwidthOut\n                                        }\n                                        Mbps\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"网络计费\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InternetChargeType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"创建时间\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .CreationTime\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"过期时间\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .ExpiredTime\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"镜像ID\">\n                                        {this.state.currentServerDetail.ImageId}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"付费类型\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceChargeType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"网络类型\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceNetworkType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"实例类型\">\n                                        {\n                                            this.state.currentServerDetail\n                                                .InstanceType\n                                        }\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"系统名称\">\n                                        {this.state.currentServerDetail.OSName}\n                                    </Descriptions.Item>\n                                </Descriptions>\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"终端\" key=\"3\">\n                            <div id=\"server_terminal\" />\n                        </TabPane>\n                    </Tabs>\n                </Drawer>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default ServerContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    DatePicker,\n    Input,\n    Descriptions,\n    Modal,\n    Form,\n    Select,\n    InputNumber,\n    Typography,\n    Popconfirm,\n    Badge,\n    Tooltip,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudRds,\n    getCloudAccouts,\n    getCloudMonitorRds,\n    getCloudRds,\n    getCloudRdsDetail,\n    postCloudRds,\n    putCloudRds,\n} from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport \"../../assets/css/main.css\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport LineChart from \"./common/line_chart\";\n\nconst { Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst TabPane = Tabs.TabPane;\n\nclass RdsInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n\n        return (\n            <Modal\n                title=\"数据库信息\"\n                destroyOnClose={true}\n                visible={this.props.rds_info_modal_visible}\n                onOk={this.props.handlePostRdsInfoSubmit}\n                onCancel={this.props.handlePostRdsInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                width={600}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ engine: \"Mysql\" }}\n                >\n                    <Form.Item\n                        label=\"云账号\"\n                        {...formItemLayout}\n                        name=\"cloudAccountId\"\n                        rules={[\n                            { required: true, message: \"云账号不能为空！\" },\n                        ]}\n                    >\n                        <Select>{accountOptions}</Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例Id\"\n                        {...formItemLayout}\n                        name=\"dbInstanceId\"\n                        rules={[\n                            { required: true, message: \"实例Id不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例描述\"\n                        {...formItemLayout}\n                        name=\"dbInstanceDescription\"\n                        rules={[\n                            { required: true, message: \"实例描述不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"数据库类型\"\n                        {...formItemLayout}\n                        name=\"engine\"\n                        rules={[\n                            { required: true, message: \"数据库类型不能为空！\" },\n                        ]}\n                    >\n                        <Select>\n                            <Option value=\"Mysql\">Mysql</Option>\n                            <Option value=\"SqlServer\">SqlServer</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"连接串\"\n                        {...formItemLayout}\n                        name=\"connectionString\"\n                        rules={[{ required: true, message: \"请输入连接串！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"端口\"\n                        {...formItemLayout}\n                        name=\"port\"\n                        rules={[{ required: true, message: \"请输入端口！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"内存(G)\"\n                        {...formItemLayout}\n                        name=\"dbInstanceMemory\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"磁盘(G)\"\n                        {...formItemLayout}\n                        name=\"dbInstanceStorage\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"创建时间\"\n                        {...formItemLayout}\n                        name=\"createTime\"\n                        rules={[\n                            { required: true, message: \"创建时间不能为空！\" },\n                        ]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"过期时间\"\n                        {...formItemLayout}\n                        name=\"expireTime\"\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass RdsContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePostRdsInfoSubmit = this.handlePostRdsInfoSubmit.bind(this);\n        this.handlePostRdsInfoCancel = this.handlePostRdsInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 200 : 100;\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"DBInstanceId\",\n                    key: \"DBInstanceId\",\n                    width: 200,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例描述\",\n                    dataIndex: \"DBInstanceDescription\",\n                    key: \"DBInstanceDescription\",\n                    width: 250,\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text\n                                    ellipsis={true}\n                                    style={{ width: \"200px\" }}\n                                >\n                                    {value}\n                                </Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"云账号\",\n                    dataIndex: \"CloudAccountName\",\n                    key: \"CloudAccountName\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"数据库类型\",\n                    dataIndex: \"Engine\",\n                    key: \"Engine\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例类型\",\n                    dataIndex: \"DBInstanceType\",\n                    key: \"DBInstanceType\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"连接串\",\n                    dataIndex: \"ConnectionString\",\n                    key: \"ConnectionString\",\n                    width: 400,\n                    render: (value) => {\n                        return (\n                            <Paragraph\n                                style={{ marginBottom: 0, fontSize: 13 }}\n                                copyable\n                            >\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"端口\",\n                    dataIndex: \"Port\",\n                    key: \"Port\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"配置\",\n                    dataIndex: \"配置\",\n                    key: \"配置\",\n                    width: 150,\n                    render: (value, record) => {\n                        let memoryContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                内存: {record.DBInstanceMemory / 1024}G,{\" \"}\n                            </Paragraph>\n                        );\n                        let diskContent = (\n                            <Paragraph\n                                style={{ marginBottom: 0, display: \"inline\" }}\n                            >\n                                磁盘: {record.DBInstanceStorage}G\n                            </Paragraph>\n                        );\n                        return (\n                            <div className=\"ip_column\">\n                                {memoryContent}\n                                {diskContent}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ExpireTime\",\n                    key: \"ExpireTime\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例状态\",\n                    dataIndex: \"DBInstanceStatus\",\n                    key: \"DBInstanceStatus\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        if (value === \"Running\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: { operWidth },\n                    align: \"center\",\n\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.openMonitorDrawer.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    监控\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.rdsEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.rdsDelete.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            extraInfoModalVisible: false,\n            tableLoading: false,\n            tableData: [],\n            chartData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            drawerVisible: false,\n            drawerPlacement: \"left\",\n            instanceId: \"\",\n            timeTagValue: \"1h\",\n            metricTagValue: \"CpuUsage\",\n            chartFormat: \"%\",\n            currentServerDetail: {},\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n            extraInfoData: {},\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    rdsEdit(data) {\n        getCloudRdsDetail(data.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                } else {\n                    this.setState({\n                        extraInfoModalVisible: true,\n                        rdsId: data.ID,\n                        updateMode: \"single\",\n                        resFrom:\n                            data[\"DataStatus\"] === 1 ? \"阿里云\" : \"手动添加\",\n                        extraInfoData: {\n                            dbInstanceDescription:\n                                res.data[\"DBInstanceDescription\"],\n                            dbMemory: (\n                                res.data[\"DBInstanceMemory\"] / 1024\n                            ).toString(),\n                            dbInstanceStorage: res.data[\n                                \"DBInstanceStorage\"\n                            ].toString(),\n                            dbExpiredTime:\n                                res.data[\"ExpireTime\"] !== \"\"\n                                    ? moment(res.data[\"ExpireTime\"])\n                                    : \"\",\n                            resForm:\n                                res.data[\"DataStatus\"] === 1\n                                    ? \"阿里云\"\n                                    : \"手动添加\",\n                        },\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.rdsId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudRds({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"修改成功\");\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    rdsDelete(data) {\n        deleteCloudRds(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            queryKeyword: this.state.queryKeyword,\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudRds(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"rds\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        DBInstanceId: data[i][\"DBInstanceId\"],\n                        DBInstanceDescription: data[i][\"DBInstanceDescription\"],\n                        DBInstanceType: data[i][\"DBInstanceType\"],\n                        Engine: data[i][\"Engine\"],\n                        ExpireTime: moment(data[i][\"ExpireTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        DBInstanceStatus: data[i][\"DBInstanceStatus\"],\n                        ConnectionString: data[i][\"ConnectionString\"],\n                        Port: data[i][\"Port\"],\n                        DBInstanceMemory: data[i][\"DBInstanceMemory\"],\n                        DBInstanceStorage: data[i][\"DBInstanceStorage\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        DataStatus: data[i][\"DataStatus\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState(\n            {\n                drawerVisible: true,\n                instanceId: data.DBInstanceId,\n                currentServerDetail: data,\n            },\n            () => {\n                this.refreshMonitorData(\n                    data.DBInstanceId,\n                    this.state.timeTagValue,\n                    this.state.metricTagValue,\n                );\n                this.refreshSeverDetail();\n            },\n        );\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({ chartLoading: true });\n        getCloudMonitorRds(instanceId, timeTagValue, metricTagValue)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                if (res[\"data\"][\"Datapoints\"] === \"\") {\n                    message.warn(\n                        \"未获取到监控数据，可能是非阿里云机器或其它原因！\",\n                    );\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                let dataPoints = JSON.parse(res[\"data\"][\"Datapoints\"]);\n                let chartData = [];\n                for (let i = 0; i < dataPoints.length; i++) {\n                    chartData.push({\n                        date: moment(dataPoints[i][\"timestamp\"]).format(\n                            \"DD日HH:mm\",\n                        ),\n                        value: dataPoints[i][\"Average\"],\n                    });\n                }\n                this.setState({ chartLoading: false, chartData: chartData });\n            })\n            .catch((err) => {\n                console.log(err.toLocaleString());\n            });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({ serverDetailLoading: true });\n        getCloudRdsDetail(this.state.currentServerDetail.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                }\n                this.setState({ currentServerDetail: res[\"data\"] }, () => {\n                    this.setState({ serverDetailLoading: false });\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({ queryKeyword: e.target.value });\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({ queryCloudAccount });\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false });\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(\n            this.state.instanceId,\n            e.target.value,\n            this.state.metricTagValue,\n        );\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"CpuUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"MemoryUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"ConnectionUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"DiskUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"IOPSUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"DataDelay\":\n                this.setState({ chartFormat: \"Count\" });\n                break;\n            default:\n                this.setState({ chartFormat: \"秒\" });\n                break;\n        }\n        this.refreshMonitorData(\n            this.state.instanceId,\n            this.state.timeTagValue,\n            e.target.value,\n        );\n    };\n\n    // 新增自定义rds信息\n    handleAdd = () => {\n        this.setState({ rds_info_modal_visible: true, rdsId: 0 });\n    };\n\n    handlePostRdsInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudRds({\n                ...values,\n                createTime: values.createTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n                expireTime:\n                    values.expireTime === undefined\n                        ? undefined\n                        : values.expireTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\n                            \"添加成功，请到权限管理中增加访问权限！\",\n                        );\n                        this.setState({ rds_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostRdsInfoCancel() {\n        this.setState({ rds_info_modal_visible: false });\n    }\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if (idList.length === 0) {\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({\n            extraInfoModalVisible: true,\n            updateMode: \"batch\",\n            idsList: idList,\n        });\n    };\n\n    onSelectChange = (selectedRowKeys) => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"云数据库\", \"数据库列表\"]}\n                />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={3} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            placeholder=\"到期截止时间\"\n                            defaultValue={this.state.queryExpiredTime}\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id\\描述\\连接串查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            <Option value=\"0\">所有云账号</Option>\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                <RdsInfoModal\n                    formRef={this.formRef}\n                    rds_info_modal_visible={this.state.rds_info_modal_visible}\n                    handlePostRdsInfoSubmit={this.handlePostRdsInfoSubmit}\n                    handlePostRdsInfoCancel={this.handlePostRdsInfoCancel}\n                />\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    editData={this.state.extraInfoData}\n                    resType=\"rds\"\n                    updateMode={this.state.updateMode}\n                    resFrom={this.state.resFrom}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <div>\n                    <Drawer\n                        title=\"数据库详情及监控数据\"\n                        placement={this.state.drawerPlacement}\n                        closable={true}\n                        destroyOnClose={true}\n                        onClose={this.onCloseDrawer}\n                        visible={this.state.drawerVisible}\n                        width={950}\n                    >\n                        <Tabs\n                            defaultActiveKey=\"1\"\n                            tabPosition=\"left\"\n                            style={{ marginLeft: -30 }}\n                        >\n                            <TabPane tab=\"监控详情\" key=\"1\">\n                                <Spin\n                                    tip=\"图表生成中...\"\n                                    spinning={this.state.chartLoading}\n                                >\n                                    <Row style={{ marginBottom: \"10px\" }}>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            时间维度：\n                                        </Col>\n                                        <Col span={15}>\n                                            <Radio.Group\n                                                value={this.state.timeTagValue}\n                                                onChange={\n                                                    this.handleTimeTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"1h\">\n                                                    1小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"6h\">\n                                                    6小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"12h\">\n                                                    12小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"1d\">\n                                                    1 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"3d\">\n                                                    3 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"7d\">\n                                                    7 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"14d\">\n                                                    14 天\n                                                </Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            监控维度：\n                                        </Col>\n                                        <Col span={16}>\n                                            <Radio.Group\n                                                value={\n                                                    this.state.metricTagValue\n                                                }\n                                                onChange={\n                                                    this.handleMetricTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"CpuUsage\">\n                                                    cpu使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"MemoryUsage\">\n                                                    内存使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"ConnectionUsage\">\n                                                    连接数使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"DiskUsage\">\n                                                    磁盘使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"IOPSUsage\">\n                                                    IOPS使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"DataDelay\">\n                                                    只读实例延迟\n                                                </Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{ marginTop: 20 }}>\n                                        <Col>\n                                            <LineChart\n                                                width={800}\n                                                height={400}\n                                                data={this.state.chartData}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Spin>\n                            </TabPane>\n                            <TabPane tab=\"信息详情\" key=\"2\">\n                                <Spin\n                                    tip=\"数据获取中...\"\n                                    spinning={this.state.serverDetailLoading}\n                                >\n                                    <Descriptions\n                                        title=\"基本信息\"\n                                        bordered\n                                        size=\"small\"\n                                        column={2}\n                                    >\n                                        <Descriptions.Item label=\"实例ID\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceId\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例描述\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceDescription\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例状态\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceStatus\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"创建时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .CreateTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"过期时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ExpireTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"连接串\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ConnectionString\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"端口\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Port\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"数据库类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Engine\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"内存\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceMemory\n                                            }{\" \"}\n                                            M\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"磁盘\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceStorage\n                                            }{\" \"}\n                                            G\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .DBInstanceType\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"数据库版本\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .EngineVersion\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例系列\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Category\n                                            }\n                                        </Descriptions.Item>\n                                    </Descriptions>\n                                </Spin>\n                            </TabPane>\n                        </Tabs>\n                    </Drawer>\n                    <Table\n                        columns={this.state.columns}\n                        dataSource={this.state.tableData}\n                        scroll={{ x: \"max-content\" }}\n                        pagination={this.state.pagination}\n                        loading={this.state.tableLoading}\n                        bordered\n                        size=\"small\"\n                    />\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default RdsContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    DatePicker,\n    Input,\n    Descriptions,\n    Modal,\n    Form,\n    Select,\n    InputNumber,\n    Typography,\n    Popconfirm,\n    Badge,\n    Tooltip,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudKv,\n    getCloudAccouts,\n    getCloudKv,\n    getCloudKvDetail,\n    getCloudMonitorKv,\n    postCloudKv,\n    putCloudKv,\n} from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport LineChart from \"./common/line_chart\";\n\nconst { Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst TabPane = Tabs.TabPane;\n\nclass KvInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Modal\n                title=\"Redis信息\"\n                destroyOnClose={true}\n                visible={this.props.kv_info_modal_visible}\n                onOk={this.props.handlePostKvInfoSubmit}\n                onCancel={this.props.handlePostKvInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                width={600}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ instanceType: \"Redis\" }}\n                >\n                    <Form.Item\n                        label=\"云账号\"\n                        {...formItemLayout}\n                        name=\"cloudAccountId\"\n                        rules={[\n                            { required: true, message: \"云账号不能为空！\" },\n                        ]}\n                    >\n                        <Select>{accountOptions}</Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例Id\"\n                        {...formItemLayout}\n                        name=\"instanceId\"\n                        rules={[\n                            { required: true, message: \"实例Id不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例名称\"\n                        {...formItemLayout}\n                        name=\"instanceName\"\n                        rules={[\n                            { required: true, message: \"实例名称不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"实例类型\"\n                        {...formItemLayout}\n                        name=\"instanceType\"\n                        rules={[\n                            { required: true, message: \"数据库类型不能为空！\" },\n                        ]}\n                    >\n                        <Select>\n                            <Option value=\"Redis\">Redis</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        label=\"连接串\"\n                        {...formItemLayout}\n                        name=\"connectionString\"\n                        rules={[{ required: true, message: \"请输入连接串！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"端口\"\n                        {...formItemLayout}\n                        name=\"port\"\n                        rules={[{ required: true, message: \"请输入端口！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"容量(G)\"\n                        {...formItemLayout}\n                        name=\"capacity\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"带宽(M)\"\n                        {...formItemLayout}\n                        name=\"bandwidth\"\n                        rules={[\n                            {\n                                type: \"integer\",\n                                required: true,\n                                message: \"请输入数值型数据！\",\n                            },\n                        ]}\n                    >\n                        <InputNumber />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"创建时间\"\n                        {...formItemLayout}\n                        name=\"createTime\"\n                        rules={[\n                            { required: true, message: \"创建时间不能为空！\" },\n                        ]}\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"过期时间\"\n                        {...formItemLayout}\n                        name=\"endTime\"\n                    >\n                        <DatePicker format=\"YYYY-MM-DD\" />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass KvContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handlePostKvInfoSubmit = this.handlePostKvInfoSubmit.bind(this);\n        this.handlePostKvInfoCancel = this.handlePostKvInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 220 : 100;\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"InstanceId\",\n                    key: \"InstanceId\",\n                    width: 200,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    width: 250,\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                    {value}\n                                </Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"云账号\",\n                    dataIndex: \"CloudAccountName\",\n                    key: \"CloudAccountName\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例类型\",\n                    dataIndex: \"InstanceType\",\n                    key: \"InstanceType\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"连接串\",\n                    dataIndex: \"ConnectionDomain\",\n                    key: \"ConnectionDomain\",\n                    width: 400,\n                    render: (value) => {\n                        return (\n                            <Paragraph\n                                style={{ marginBottom: 0, fontSize: 13 }}\n                                copyable\n                            >\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"带宽\",\n                    dataIndex: \"Bandwidth\",\n                    key: \"Bandwidth\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}MB/s</Text>;\n                    },\n                },\n                {\n                    title: \"连接数\",\n                    dataIndex: \"Connections\",\n                    key: \"Connections\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"容量\",\n                    dataIndex: \"Capacity\",\n                    key: \"Capacity\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value / 1024}G</Text>;\n                    },\n                },\n                {\n                    title: \"QPS\",\n                    dataIndex: \"QPS\",\n                    key: \"QPS\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"EndTime\",\n                    key: \"EndTime\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例状态\",\n                    dataIndex: \"InstanceStatus\",\n                    key: \"InstanceStatus\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        if (value === \"Normal\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: { operWidth },\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.openMonitorDrawer.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    监控\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.kvEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.kvDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            extraInfoModalVisible: false,\n            tableLoading: false,\n            tableData: [],\n            chartData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            drawerVisible: false,\n            drawerPlacement: \"left\",\n            instanceId: \"\",\n            timeTagValue: \"1h\",\n            metricTagValue: \"StandardConnectionUsage\",\n            chartFormat: \"%\",\n            currentServerDetail: {},\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            kv_info_modal_visible: false,\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n            extraInfoData: {},\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    kvEdit(data) {\n        getCloudKvDetail(data.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                } else {\n                    let renewStatus = false;\n                    if (res.data[\"RenewStatus\"] === 1) {\n                        renewStatus = true;\n                    }\n                    let extraInfoData = {\n                        renewStatus: renewStatus,\n                        renewSiteId: parseInt(res.data[\"RenewSiteId\"])\n                            ? parseInt(res.data[\"RenewSiteId\"])\n                            : null,\n                        bankAccount: parseInt(res.data[\"BankAccount\"])\n                            ? parseInt(res.data[\"BankAccount\"])\n                            : null,\n                        manageUser: parseInt(res.data[\"ManageUser\"])\n                            ? parseInt(res.data[\"ManageUser\"])\n                            : null,\n                        cost: res.data[\"Cost\"] ? res.data[\"Cost\"] : \"0\",\n                        costType: res.data[\"CostType\"]\n                            ? res.data[\"CostType\"]\n                            : \"元/月\",\n\n                        kvInstanceName: res.data[\"InstanceName\"],\n                        kvBandwidth: res.data[\"Bandwidth\"].toString(),\n                        kvCapacity: (res.data[\"Capacity\"] / 1024).toString(),\n                        kvExpiredTime:\n                            res.data[\"EndTime\"] !== \"\"\n                                ? moment(res.data[\"EndTime\"])\n                                : \"\",\n                        resForm:\n                            res.data[\"DataStatus\"] === 1\n                                ? \"阿里云\"\n                                : \"手动添加\",\n                    };\n                    this.setState({\n                        extraInfoModalVisible: true,\n                        kvId: data.ID,\n                        updateMode: \"single\",\n                        resFrom:\n                            data[\"DataStatus\"] === 1 ? \"阿里云\" : \"手动添加\",\n                        extraInfoData: extraInfoData,\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.kvId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudKv({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"修改成功\");\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    kvDelete(data) {\n        deleteCloudKv(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-YY-DD HH:mm:ss\"),\n            queryKeyword: this.state.queryKeyword,\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudKv(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"kv\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        InstanceId: data[i][\"InstanceId\"],\n                        InstanceName: data[i][\"InstanceName\"],\n                        InstanceType: data[i][\"InstanceType\"],\n                        ConnectionDomain: data[i][\"ConnectionDomain\"],\n                        EndTime: moment(data[i][\"EndTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        InstanceStatus: data[i][\"InstanceStatus\"],\n                        Capacity: data[i][\"Capacity\"],\n                        QPS: data[i][\"QPS\"],\n                        Bandwidth: data[i][\"Bandwidth\"],\n                        Connections: data[i][\"Connections\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        DataStatus: data[i][\"DataStatus\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState(\n            {\n                drawerVisible: true,\n                instanceId: data.InstanceId,\n                currentServerDetail: data,\n            },\n            () => {\n                this.refreshMonitorData(\n                    data.InstanceId,\n                    this.state.timeTagValue,\n                    this.state.metricTagValue,\n                );\n                this.refreshSeverDetail();\n            },\n        );\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({ chartLoading: true });\n        getCloudMonitorKv(instanceId, timeTagValue, metricTagValue)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                if (res[\"data\"][\"Datapoints\"] === \"\") {\n                    message.warn(\n                        \"未获取到监控数据，可能是非阿里云机器或其它原因！\",\n                    );\n                    this.setState({ chartLoading: false });\n                    return;\n                }\n                let dataPoints = JSON.parse(res[\"data\"][\"Datapoints\"]);\n                let chartData = [];\n                for (let i = 0; i < dataPoints.length; i++) {\n                    chartData.push({\n                        date: moment(dataPoints[i][\"timestamp\"]).format(\n                            \"DD日HH:mm\",\n                        ),\n                        value: dataPoints[i][\"Average\"],\n                    });\n                }\n                this.setState({ chartLoading: false, chartData: chartData });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({ serverDetailLoading: true });\n        getCloudKvDetail(this.state.currentServerDetail.ID)\n            .then((res) => {\n                if (res[\"code\"] !== 0) {\n                    message.error(res[\"msg\"]);\n                }\n                this.setState({ currentServerDetail: res[\"data\"] }, () => {\n                    this.setState({ serverDetailLoading: false });\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({ queryKeyword: e.target.value });\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({ queryCloudAccount });\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                console.log(this.state.pagination.page);\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false });\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(\n            this.state.instanceId,\n            e.target.value,\n            this.state.metricTagValue,\n        );\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"StandardConnectionUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"StandardCpuUsage\":\n                this.setState({ chartFormat: \"%\" });\n                break;\n            case \"StandardAvgRt\":\n                this.setState({ chartFormat: \"us\" });\n                break;\n            case \"Standardappend\":\n                this.setState({ chartFormat: \"Count/Second\" });\n                break;\n            default:\n                this.setState({ chartFormat: \"\" });\n                break;\n        }\n        this.refreshMonitorData(\n            this.state.instanceId,\n            this.state.timeTagValue,\n            e.target.value,\n        );\n    };\n\n    // 新增自定义redis信息\n    handleAdd = () => {\n        this.setState({ kv_info_modal_visible: true, kvId: 0 });\n    };\n\n    handlePostKvInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudKv({\n                ...values,\n                createTime: values.createTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n                endTime:\n                    values.endTime === undefined\n                        ? undefined\n                        : values.endTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\n                            \"添加成功，请到权限管理中增加访问权限！\",\n                        );\n                        this.setState({ kv_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostKvInfoCancel() {\n        this.setState({ kv_info_modal_visible: false });\n    }\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if (idList.length === 0) {\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({\n            extraInfoModalVisible: true,\n            updateMode: \"batch\",\n            idsList: idList,\n        });\n    };\n\n    onSelectChange = (selectedRowKeys) => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"云资源\", \"KV存储\", \"KV列表\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={3} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            placeholder=\"到期截止时间\"\n                            defaultValue={this.state.queryExpiredTime}\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id\\名称\\连接串查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryCloudAccount}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleCloudAccountChange}\n                        >\n                            <Option value=\"0\">所有云账号</Option>\n                            {accountOptions}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                <KvInfoModal\n                    formRef={this.formRef}\n                    kv_info_modal_visible={this.state.kv_info_modal_visible}\n                    handlePostKvInfoSubmit={this.handlePostKvInfoSubmit}\n                    handlePostKvInfoCancel={this.handlePostKvInfoCancel}\n                />\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    editData={this.state.extraInfoData}\n                    resType=\"kv\"\n                    updateMode={this.state.updateMode}\n                    resFrom={this.state.resFrom}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <div>\n                    <Drawer\n                        title=\"实例详情及监控数据\"\n                        placement={this.state.drawerPlacement}\n                        closable={true}\n                        destroyOnClose={true}\n                        onClose={this.onCloseDrawer}\n                        visible={this.state.drawerVisible}\n                        width={950}\n                    >\n                        <Tabs\n                            defaultActiveKey=\"1\"\n                            tabPosition=\"left\"\n                            style={{ marginLeft: -30 }}\n                        >\n                            <TabPane tab=\"监控详情\" key=\"1\">\n                                <Spin\n                                    tip=\"图表生成中...\"\n                                    spinning={this.state.chartLoading}\n                                >\n                                    <Row style={{ marginBottom: \"10px\" }}>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            时间维度：\n                                        </Col>\n                                        <Col span={15}>\n                                            <Radio.Group\n                                                value={this.state.timeTagValue}\n                                                onChange={\n                                                    this.handleTimeTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"1h\">\n                                                    1小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"6h\">\n                                                    6小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"12h\">\n                                                    12小时\n                                                </Radio.Button>\n                                                <Radio.Button value=\"1d\">\n                                                    1 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"3d\">\n                                                    3 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"7d\">\n                                                    7 天\n                                                </Radio.Button>\n                                                <Radio.Button value=\"14d\">\n                                                    14 天\n                                                </Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row>\n                                        <Col\n                                            span={3}\n                                            style={{ lineHeight: \"30px\" }}\n                                        >\n                                            监控维度：\n                                        </Col>\n                                        <Col span={16}>\n                                            <Radio.Group\n                                                value={\n                                                    this.state.metricTagValue\n                                                }\n                                                onChange={\n                                                    this.handleMetricTagChange\n                                                }\n                                            >\n                                                <Radio.Button value=\"StandardConnectionUsage\">\n                                                    连接数使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"StandardCpuUsage\">\n                                                    CPU 使用率\n                                                </Radio.Button>\n                                                <Radio.Button value=\"StandardAvgRt\">\n                                                    平均响应时间\n                                                </Radio.Button>\n                                                <Radio.Button value=\"Standardappend\">\n                                                    append 命令的执行频率\n                                                </Radio.Button>\n                                            </Radio.Group>\n                                        </Col>\n                                    </Row>\n                                    <Row style={{ marginTop: 20 }}>\n                                        <Col>\n                                            <LineChart\n                                                width={800}\n                                                height={400}\n                                                data={this.state.chartData}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Spin>\n                            </TabPane>\n                            <TabPane tab=\"信息详情\" key=\"2\">\n                                <Spin\n                                    tip=\"数据获取中...\"\n                                    spinning={this.state.serverDetailLoading}\n                                >\n                                    <Descriptions\n                                        title=\"基本信息\"\n                                        bordered\n                                        size=\"small\"\n                                        column={2}\n                                    >\n                                        <Descriptions.Item label=\"实例ID\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .InstanceId\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例名称\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .InstanceName\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .InstanceType\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"架构类型\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ArchitectureType\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例带宽\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Bandwidth\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"实例容量\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Capacity\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"带宽\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Bandwidth\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"连接地址\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .ConnectionDomain\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"端口\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Port\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"私有IP\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .PrivateIp\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"连接数限制\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .Connections\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"创建时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .CreateTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"过期时间\">\n                                            {\n                                                this.state.currentServerDetail\n                                                    .EndTime\n                                            }\n                                        </Descriptions.Item>\n                                        <Descriptions.Item label=\"QPS\">\n                                            {this.state.currentServerDetail.QPS}\n                                        </Descriptions.Item>\n                                    </Descriptions>\n                                </Spin>\n                            </TabPane>\n                        </Tabs>\n                    </Drawer>\n                    <Table\n                        columns={this.state.columns}\n                        dataSource={this.state.tableData}\n                        scroll={{ x: \"max-content\" }}\n                        pagination={this.state.pagination}\n                        loading={this.state.tableLoading}\n                        bordered\n                        size=\"small\"\n                    />\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default KvContent;\n","import React, { Component } from 'react';\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    Input, Descriptions, Typography, Popconfirm, Select, Badge, Tooltip\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getCloudSlbDetail,\n    getCloudSlb,\n    getCloudMonitorSlb,\n    deleteCloudSlb,\n    getCloudAccouts,\n} from \"../../api/cloud\";\nimport LineChart from \"./common/line_chart\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst TabPane = Tabs.TabPane;\n\nclass SlbContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.changePage = this.changePage.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 200 : 100;\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', dataIndex: 'LoadBalancerId', key: 'LoadBalancerId',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例名称', dataIndex: 'LoadBalancerName', key: 'LoadBalancerName',\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: '100%' }}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: '云账号', dataIndex: 'CloudAccountName', key: 'CloudAccountName', \n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '服务地址', dataIndex: 'Address', key: 'Address', width: 200,\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '计费方式', dataIndex: 'InternetChargeType', key: 'InternetChargeType',\n                    render: value => {\n                        if(value===\"4\"){\n                            value = \"按流量计费\"\n                        } else {\n                            value = \"按带宽计费\"\n                        }\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '创建时间', dataIndex: 'CreateTime', key: 'CreateTime',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例状态', dataIndex: 'LoadBalancerStatus', key: 'LoadBalancerStatus', align: \"center\",\n                    render: value => {\n                        if(value===\"active\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    align: 'center',\n                    width: {operWidth},\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.openMonitorDrawer.bind(this, record)}>监控</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.slbDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            chartData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: (current, size) => this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            extraInfoModalVisible: false,\n            drawerVisible: false,\n            drawerPlacement: 'left',\n            cloudAccountList: [],\n            slbId: 0,\n            instanceId: \"\",\n            timeTagValue: '1h',\n            metricTagValue: 'ActiveConnection',\n            chartFormat: 'Count',\n            currentServerDetail: {},\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n          ...this.state.pagination,\n          page: 1,\n          current: 1,\n          pageSize: size,\n        };\n        this.setState(\n          {\n            pagination: pagination,\n          },\n          () => {\n            this.refreshTableData();\n          }\n        );\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    };\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    // 用户自定义内容修改\n    userDefineEdit(data) {\n        this.userDefineInfoFormRef.props.form.setFieldsValue({\n            \"userRemark\": data.UserRemark,\n            \"userDefineGroup\": data.UserDefineGroup,\n        });\n        this.setState({\n            slbId: data.ID,\n            userDefineInfoModalVisible: true,\n        });\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudSlb(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['slb'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    LoadBalancerId: data[i]['LoadBalancerId'],\n                    LoadBalancerName: data[i]['LoadBalancerName'],\n                    Address: data[i]['Address'],\n                    InternetChargeType: data[i]['InternetChargeType'],\n                    CreateTime: moment(data[i]['CreateTime']).format(\"YYYY-MM-DD\"),\n                    LoadBalancerStatus: data[i]['LoadBalancerStatus'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            message.error(err)\n        });\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState({ drawerVisible: true, instanceId: data.LoadBalancerId, currentServerDetail: data }, ()=>{\n            this.refreshMonitorData(data.LoadBalancerId, this.state.timeTagValue, this.state.metricTagValue);\n            this.refreshSeverDetail();\n        });\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({chartLoading: true});\n        getCloudMonitorSlb(instanceId, timeTagValue, metricTagValue).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n                this.setState({chartLoading: false});\n                return;\n            }\n            if(res['data']['Datapoints']===\"\"){\n                message.warn(\"未获取到监控数据，可能是非阿里云机器或其它原因！\");\n                this.setState({chartLoading: false});\n                return;\n            }\n            let dataPoints = JSON.parse(res['data']['Datapoints']);\n            let chartData = [];\n            for(let i=0; i<dataPoints.length; i++){\n                chartData.push({\n                    \"date\": moment(dataPoints[i][\"timestamp\"]).format(\"DD日HH:mm\"),\n                    \"value\": dataPoints[i][\"Average\"],\n                });\n            }\n            this.setState({chartLoading: false, chartData: chartData});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({serverDetailLoading: true});\n        getCloudSlbDetail(this.state.currentServerDetail.ID).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n            }\n            this.setState({currentServerDetail: res['data']}, ()=> {\n                this.setState({serverDetailLoading: false});\n            });\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n          {\n            pagination: {\n              ...this.state.pagination,\n              page: page,\n              current: page,\n              pageSize: pageSize,\n            },\n          },\n          () => {\n            this.refreshTableData();\n          }\n        );\n    };\n\n    slbDelete(data) {\n        deleteCloudSlb(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    keywordOnChange = (e) => {\n        this.setState({queryKeyword: e.target.value});\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({queryCloudAccount});\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false })\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(this.state.instanceId, e.target.value, this.state.metricTagValue);\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"ActiveConnection\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"MaxConnection\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"HeathyServerCount\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"UnhealthyServerCount\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            default:\n                this.setState({chartFormat: \"\"});\n                break;\n        }\n        this.refreshMonitorData(this.state.instanceId, this.state.timeTagValue, e.target.value);\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        return (\n          <Content style={{\n              background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\",\n          }}>\n              <OpsBreadcrumbPath pathData={[\"云资源\", \"负载均衡\", \"负载均衡列表\"]} />\n              <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                  <Col span={6} className=\"col-span\">\n                      <Input style={{ width: \"100%\" }} placeholder=\"输入实例id\\名称\\服务地址查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange} />\n                  </Col>\n                  <Col span={4} className=\"col-span\">\n                      <Select defaultValue={this.state.queryCloudAccount} style={{ width: \"100%\" }} onChange={this.handleCloudAccountChange}>\n                          <Option value=\"0\">所有云账号</Option>\n                          {accountOptions}\n                      </Select>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} type=\"primary\" icon={<SearchOutlined />} onClick={this.handleQuery}>查 询</Button>\n                  </Col>\n              </Row>\n\n              <div>\n                  <Drawer\n                      title=\"实例详情及监控数据\"\n                      placement={this.state.drawerPlacement}\n                      closable={true}\n                      destroyOnClose={true}\n                      onClose={this.onCloseDrawer}\n                      visible={this.state.drawerVisible}\n                      width={950}\n                  >\n                      <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ marginLeft: -30 }}>\n                          <TabPane tab=\"监控详情\" key=\"1\">\n                              <Spin tip=\"图表生成中...\" spinning={this.state.chartLoading}>\n                                  <Row style={{ marginBottom: \"10px\" }}>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>时间维度：</Col>\n                                      <Col span={15}>\n                                          <Radio.Group value={this.state.timeTagValue} onChange={this.handleTimeTagChange}>\n                                              <Radio.Button value=\"1h\">1小时</Radio.Button>\n                                              <Radio.Button value=\"6h\">6小时</Radio.Button>\n                                              <Radio.Button value=\"12h\">12小时</Radio.Button>\n                                              <Radio.Button value=\"1d\">1 天</Radio.Button>\n                                              <Radio.Button value=\"3d\">3 天</Radio.Button>\n                                              <Radio.Button value=\"7d\">7 天</Radio.Button>\n                                              <Radio.Button value=\"14d\">14 天</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>监控维度：</Col>\n                                      <Col span={16}>\n                                          <Radio.Group value={this.state.metricTagValue} onChange={this.handleMetricTagChange}>\n                                              <Radio.Button value=\"ActiveConnection\">端口当前活跃连接数</Radio.Button>\n                                              <Radio.Button value=\"MaxConnection\">端口当前并发连接数</Radio.Button>\n                                              <Radio.Button value=\"HeathyServerCount\">后端健康ECS实例个数</Radio.Button>\n                                              <Radio.Button value=\"UnhealthyServerCount\">后端异常ECS实例个数</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row style={{marginTop: 20}}>\n                                    <Col>\n                                        <LineChart width={800} height={400} data={this.state.chartData}/>\n                                    </Col>\n                                  </Row>\n                              </Spin>\n                          </TabPane>\n                          <TabPane tab=\"信息详情\" key=\"2\">\n                              <Spin tip=\"数据获取中...\" spinning={this.state.serverDetailLoading}>\n                                  <Descriptions title=\"基本信息\" bordered size=\"small\" column={2}>\n                                      <Descriptions.Item label=\"实例ID\">{this.state.currentServerDetail.LoadBalancerId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例名称\">{this.state.currentServerDetail.LoadBalancerName}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例状态\">{this.state.currentServerDetail.LoadBalancerStatus}</Descriptions.Item>\n                                      <Descriptions.Item label=\"服务地址\">{this.state.currentServerDetail.Address}</Descriptions.Item>\n                                      <Descriptions.Item label=\"计费方式\">{this.state.currentServerDetail.InternetChargeType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"付费类型\">{this.state.currentServerDetail.PayType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"IP版本\">{this.state.currentServerDetail.AddressIPVersion}</Descriptions.Item>\n                                      <Descriptions.Item label=\"创建时间\">{this.state.currentServerDetail.CreateTime}</Descriptions.Item>\n                                  </Descriptions>\n                              </Spin>\n                          </TabPane>\n                      </Tabs>\n                  </Drawer>\n                  <Table\n                      columns={this.state.columns}\n                      dataSource={this.state.tableData}\n                      scroll={{ x: 'max-content' }}\n                      pagination={this.state.pagination}\n                      loading={this.state.tableLoading}\n                      bordered\n                      size=\"small\"\n                  />\n              </div>\n          </Content>\n      );\n  }\n}\n\nexport default SlbContent;\n","import React, { Component, Fragment } from \"react\";\nimport {\n    Button,\n    Layout,\n    Table,\n    Modal,\n    Form,\n    Input,\n    Select,\n    Popconfirm,\n    Divider,\n    Typography,\n} from \"antd\";\nimport { message } from \"antd\";\nimport {\n    deleteCloudAccouts,\n    getCloudAccouts,\n    postCloudAccouts,\n    putCloudAccouts,\n} from \"../../api/cloud\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\n\nclass CloudContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"云类型\",\n                    dataIndex: \"accountType\",\n                    key: \"accountType\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"账号名称\",\n                    dataIndex: \"accountName\",\n                    key: \"accountName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"账号密码\",\n                    dataIndex: \"accountPwd\",\n                    key: \"accountPwd\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"访问key\",\n                    dataIndex: \"accountKey\",\n                    key: \"accountKey\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Paragraph style={{ marginBottom: 0 }} copyable>\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"访问secret\",\n                    dataIndex: \"accountSecret\",\n                    key: \"accountSecret\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Paragraph style={{ marginBottom: 0 }} copyable>\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"所属区域\",\n                    dataIndex: \"accountRegion\",\n                    key: \"accountRegion\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 160,\n                    align: \"center\",\n                    className: \"small_font\",\n                    render: (text, record) => {\n                        let superOper;\n                        if (this.props.isSuperAdmin) {\n                            superOper = (\n                                <Fragment>\n                                    <Button\n                                        type=\"primary\"\n                                        size=\"small\"\n                                        onClick={this.handleEditAccountInfo.bind(\n                                            this,\n                                            record,\n                                        )}\n                                    >\n                                        编辑\n                                    </Button>\n                                    <Divider type=\"vertical\" />\n                                    <Popconfirm\n                                        title=\"确定删除该项内容?\"\n                                        onConfirm={this.confirm.bind(\n                                            this,\n                                            record,\n                                        )}\n                                        okText=\"确认\"\n                                        cancelText=\"取消\"\n                                    >\n                                        <Button type=\"danger\" size=\"small\">\n                                            删除\n                                        </Button>\n                                    </Popconfirm>\n                                </Fragment>\n                            );\n                        } else {\n                            superOper = <span>无操作权限</span>;\n                        }\n                        return <div>{superOper}</div>;\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            add_new_account_visible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    confirm = (e) => {\n        this.handleDeleteAccountInfo(e);\n    };\n\n    showAddAccountModal = () => {\n        this.setState({\n            current_data_id: null,\n            add_new_account_visible: true,\n        });\n    };\n\n    handleAddAccountSubmit = (e) => {\n        this.formRef.current.validateFields().then((values) => {\n            if (this.state.current_data_id != null) {\n                values[\"id\"] = this.state.current_data_id;\n                putCloudAccouts(values)\n                    .then((res) => {\n                        if (res.code === 0) {\n                            this.setState({\n                                add_new_account_visible: false,\n                            });\n                            message.success(\"更新成功！\");\n                        }\n                        this.refreshTableData();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            } else {\n                postCloudAccouts(values)\n                    .then((res) => {\n                        if (res.code === 0) {\n                            this.setState({\n                                add_new_account_visible: false,\n                            });\n                            message.success(\"新增成功！\");\n                        }\n                        this.refreshTableData();\n                    })\n                    .catch((err) => {\n                        console.log(err);\n                    });\n            }\n        });\n    };\n\n    handleAddAccountCancel = (e) => {\n        this.setState({\n            add_new_account_visible: false,\n        });\n    };\n\n    handleEditAccountInfo = (e) => {\n        setTimeout(() => {\n            this.formRef.current.setFieldsValue({\n                id: e.id,\n                accountType: e.accountType,\n                accountName: e.accountName,\n                accountPwd: e.accountPwd,\n                accountKey: e.accountKey,\n                accountSecret: e.accountSecret,\n                accountRegion: e.accountRegion,\n                bankAccount: e.bankAccountId,\n            });\n        }, 300);\n\n        this.setState({\n            current_data_id: e.id,\n            add_new_account_visible: true,\n        });\n    };\n\n    handleDeleteAccountInfo = (e) => {\n        deleteCloudAccouts({ id: e.id })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功！\");\n                }\n                this.refreshTableData();\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getCloudAccouts(\n            this.state.pagination.page,\n            this.state.pagination.pageSize,\n        )\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"accounts\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        id: data[i][\"id\"],\n                        key: data[i][\"id\"],\n                        accountType: data[i][\"accountType\"],\n                        accountName: data[i][\"accountName\"],\n                        accountPwd: data[i][\"accountPwd\"],\n                        accountKey: data[i][\"accountKey\"],\n                        accountSecret: data[i][\"accountSecret\"],\n                        accountRegion: data[i][\"accountRegion\"],\n                        bankAccountId: data[i][\"bankAccountId\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"云账号\", \"账号列表\"]}\n                />\n                {this.props.isSuperAdmin ? (\n                    <div style={{ marginBottom: 10 }}>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.showAddAccountModal}\n                        >\n                            新增账号\n                        </Button>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n                <Modal\n                    title=\"云账号信息详情\"\n                    visible={this.state.add_new_account_visible}\n                    onOk={this.handleAddAccountSubmit}\n                    onCancel={this.handleAddAccountCancel}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form\n                        ref={this.formRef}\n                        initialValues={{ accountType: \"私有云\" }}\n                    >\n                        <Form.Item\n                            label=\"云账号类型\"\n                            {...formItemLayout}\n                            name=\"accountType\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"账号类型不能为空！\",\n                                },\n                            ]}\n                        >\n                            <Select size=\"default\">\n                                <Option value=\"私有云\">私有云</Option>\n                                <Option value=\"阿里云\">阿里云</Option>\n                            </Select>\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号名称\"\n                            {...formItemLayout}\n                            name=\"accountName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"账号名称不能为空！\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号密码\"\n                            {...formItemLayout}\n                            name=\"accountPwd\"\n                            rules={[\n                                // {\n                                //     required: true,\n                                //     message: \"账号密码不能为空！\",\n                                // },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号key\"\n                            {...formItemLayout}\n                            name=\"accountKey\"\n                            rules={[\n                                // {\n                                //     required: true,\n                                //     message: \"账号key不能为空！\",\n                                // },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"云账号secret\"\n                            {...formItemLayout}\n                            name=\"accountSecret\"\n                            rules={[\n                                // {\n                                //     required: true,\n                                //     message: \"账号secret不能为空！\",\n                                // },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"所属区域\"\n                            {...formItemLayout}\n                            name=\"accountRegion\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"所属区域不能为空！\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default CloudContent;\n","import req from \"../utils/axios\";\n\nconst postAddDailyJob = (data) =>{\n    return req.post('daily_job/', data)\n};\nexport {postAddDailyJob}\n\nconst getDailyJobs = (params) =>{\n    return req.get('daily_job/',params)\n};\nexport {getDailyJobs}\n\nconst getDailyJobDetail = (id) =>{\n    return req.get('daily_job/info/'+id)\n};\nexport {getDailyJobDetail}\n\nconst putDailyJob = (data) =>{\n    return req.put('daily_job/', data)\n};\nexport {putDailyJob}\n\nconst putDailyJobExecutorUser = (data) =>{\n    return req.put('daily_job/executorUser', data)\n};\nexport {putDailyJobExecutorUser}","import React, { Component, Fragment } from \"react\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    Steps,\n    Button,\n    message,\n    Input,\n    Carousel,\n    Form,\n    Cascader,\n    Radio,\n    Tooltip,\n    Card,\n    Alert,\n    Row,\n    Select,\n    Layout,\n} from \"antd\";\nimport \"../../assets/css/job.css\";\nimport Col from \"antd/es/grid/col\";\nimport {\n    SolutionOutlined,\n    HighlightOutlined,\n    PlusCircleOutlined,\n    MinusCircleOutlined,\n} from \"@ant-design/icons\";\nimport { postAddDailyJob } from \"../../api/daily_task\";\n\nconst Step = Steps.Step;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst options = [\n    {\n        value: \"日常工作\",\n        label: \"日常工作\",\n        children: [\n            {\n                value: \"协助\",\n                label: \"协助\",\n            },\n        ],\n    },\n];\n\nconst ConfigTemplate = {\n    \"\": [\n        {\n            field: \"task_content\",\n            text: \"问题描述\",\n            type: \"text\",\n            errorMessage: \"请输入具体问题描述\",\n            required: true,\n        },\n    ],\n    \"日常工作-协助\": [\n        {\n            field: \"task_content\",\n            text: \"工作内容\",\n            type: \"text\",\n            errorMessage: \"请输入具体工作内容\",\n        },\n        {\n            field: \"open_deploy_auto_config\",\n            text: \"自定义项\",\n            type: \"kvinput\",\n        },\n    ],\n};\n\nclass KvIput extends Component {\n    constructor(props) {\n        super(props);\n        this.addNewConfig = this.addNewConfig.bind(this);\n        this.state = {\n            configCount: 0,\n            configData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.onChange = this.props.onChange;\n    }\n\n    deleteConfigItem(data) {\n        let index = data.index;\n        let configData = this.state.configData;\n        configData.splice(index, 1);\n        this.setState({ configData });\n        this.onChange(this.state.configData);\n    }\n\n    addNewConfig() {\n        let configData = this.state.configData;\n        configData.push({\n            key: \"\",\n            value: \"\",\n        });\n        this.setState(configData);\n    }\n\n    handleKeyChange(data, e) {\n        let index = data[\"index\"];\n        let configData = this.state.configData;\n        configData[index][\"key\"] = e.target.value;\n        this.setState(configData);\n        this.onChange(this.state.configData);\n    }\n\n    handleValueChange(data, e) {\n        let index = data[\"index\"];\n        let configData = this.state.configData;\n        configData[index][\"value\"] = e.target.value;\n        this.setState(configData);\n        this.onChange(this.state.configData);\n    }\n\n    render() {\n        let configItem = this.state.configData.map((item, index) => {\n            return (\n                <Row>\n                    <Col span={10} style={{ marginRight: 10 }}>\n                        <Input\n                            key=\"k{index}\"\n                            addonBefore=\"键\"\n                            value={item.key}\n                            onChange={this.handleKeyChange.bind(this, {\n                                index,\n                            })}\n                        />\n                    </Col>\n                    <Col span={10} style={{ marginRight: 10 }}>\n                        <Input\n                            key=\"v{index}\"\n                            addonBefore=\"值\"\n                            value={item.value}\n                            onChange={this.handleValueChange.bind(this, {\n                                index,\n                            })}\n                        />\n                    </Col>\n                    <Col span={2}>\n                        <Button\n                            type=\"sdanger\"\n                            icon={<MinusCircleOutlined />}\n                            shape=\"circle\"\n                            onClick={this.deleteConfigItem.bind(this, {\n                                index,\n                            })}\n                        />\n                    </Col>\n                </Row>\n            );\n        });\n        return (\n            <Fragment>\n                {configItem}\n                <Row>\n                    <Col span={5}>\n                        <Button\n                            type=\"primary\"\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.addNewConfig}\n                        >\n                            添加新项\n                        </Button>\n                    </Col>\n                </Row>\n            </Fragment>\n        );\n    }\n}\n\nclass JobBaseInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            deptData: [],\n        };\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 10 },\n        };\n        return (\n            <Content\n                style={{\n                    height: \"100%\",\n                }}\n            >\n                <Form\n                    ref={this.props.formRef}\n                    initialValues={{ importantDegree: \"普通\" }}\n                >\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"工单名称\"\n                        name=\"jobName\"\n                        rules={[\n                            { required: true, message: \"请输入工单任务名称\" },\n                        ]}\n                    >\n                        <Input placeholder=\"请输入工单任务名称\" />\n                    </Form.Item>\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"工单类型\"\n                        name=\"jobType\"\n                        rules={[{ required: true, message: \"请选择工单类型\" }]}\n                    >\n                        <Cascader\n                            placeholder=\"请选择工单类型\"\n                            options={options}\n                        />\n                    </Form.Item>\n\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"该任务紧急程度\"\n                        style={{ textAlign: \"left\" }}\n                        name=\"importantDegree\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"请选择任务紧急程度\",\n                            },\n                        ]}\n                    >\n                        <Radio.Group buttonStyle=\"solid\">\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title=\"等待相关人员根据自身任务项安排时间处理\"\n                            >\n                                <Radio.Button value=\"普通\">普通</Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title=\"需要在半小时内处理完成\"\n                            >\n                                <Radio.Button value=\"紧急\">紧急</Radio.Button>\n                            </Tooltip>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title=\"需要立即安排人员处理\"\n                            >\n                                <Radio.Button value=\"非常紧急\">\n                                    非常紧急\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n}\n\nclass JobConfigInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.getFormInputContent = this.getFormInputContent.bind(this);\n        this.state = {};\n    }\n\n    getFormInputContent(input) {\n        let res;\n        switch (input.type) {\n            case \"char\":\n                res = <Input />;\n                break;\n            case \"text\":\n                res = <TextArea rows={4} />;\n                break;\n            case \"select\":\n                res = (\n                    <Select style={{ width: 120 }}>\n                        {input.options.map((item, index) => {\n                            return (\n                                <Option key={index} value={item}>\n                                    {item}\n                                </Option>\n                            );\n                        })}\n                    </Select>\n                );\n                break;\n            case \"kvinput\":\n                res = (\n                    // <KvIput setFieldsValue={this.props.form.setFieldsValue} />\n                    <KvIput />\n                );\n                break;\n            default:\n                res = <Input />;\n                break;\n        }\n        return res;\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 4 },\n            wrapperCol: { span: 18 },\n        };\n        let configData = ConfigTemplate[this.props.jobType];\n        if (configData === undefined) {\n            configData = ConfigTemplate[\"\"];\n        }\n        let configDataForm;\n        configDataForm = configData.map((item, index) => {\n            return (\n                <Form.Item\n                    key={index}\n                    {...formItemLayout}\n                    label={item.text}\n                    style={{ textAlign: \"left\" }}\n                    name={item.field}\n                    rules={[\n                        {\n                            required: item.required,\n                            message: item.errorMessage,\n                        },\n                    ]}\n                >\n                    {this.getFormInputContent(item)}\n                </Form.Item>\n            );\n        });\n        return (\n            <Content\n                style={{\n                    height: \"100%\",\n                }}\n            >\n                <Form ref={this.props.formRef}>\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"关健信息\"\n                        required={true}\n                    >\n                        <Card\n                            span={20}\n                            size=\"small\"\n                            title=\"填写完善和准确可以提高工单处理效率哦\"\n                            headStyle={{\n                                backgroundColor: \"#e6f7ff\",\n                                fontWeight: \"350\",\n                            }}\n                        >\n                            {configDataForm}\n                        </Card>\n                    </Form.Item>\n                    <Row style={{ marginBottom: 10 }}>\n                        <Col span={4} />\n                        <Col span={18}>\n                            <Alert\n                                message=\"你可以在备注信息中填写注意事项，可以避免执行过程中出错哦\"\n                                type=\"info\"\n                                closable\n                            />\n                        </Col>\n                    </Row>\n                    <Form.Item\n                        {...formItemLayout}\n                        label=\"备注信息\"\n                        name=\"remark\"\n                    >\n                        <TextArea rows={4} />\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n}\n\nclass Deploy_project_content extends Component {\n    constructor(props) {\n        super(props);\n        this.submitJobForm = this.submitJobForm.bind(this);\n        this.baseInfoFormRef = React.createRef();\n        this.configInfoFormRef = React.createRef();\n        this.state = {\n            current: 0,\n            stepStatus: \"wait\",\n            jobTypeStr: \"\",\n            form1Data: null,\n            form2Data: null,\n            submitLoading: false,\n        };\n    }\n\n    componentDidMount() {}\n\n    next() {\n        if (this.state.current === 0) {\n            // 工单基本信息\n            this.baseInfoFormRef.current\n                .validateFields()\n                .then((values) => {\n                    const current = this.state.current + 1;\n                    let form1Data = Object.assign(\n                        {},\n                        this.state.form1Data,\n                        values,\n                    );\n                    this.setState({\n                        current,\n                        stepStatus: \"process\",\n                        jobTypeStr: values.jobType.join(\"-\"),\n                        form1Data: form1Data,\n                    });\n                    this.carousel.next();\n                })\n                .catch((err) => {\n                    this.setState({ stepStatus: \"error\" });\n                });\n        }\n    }\n\n    prev() {\n        switch (this.state.current) {\n            case 2:\n                this.setState({ form3Data: null });\n                break;\n            case 1:\n                this.setState({ form2Data: null });\n                break;\n            default:\n                break;\n        }\n        const current = this.state.current - 1;\n        this.setState({ current });\n        this.carousel.prev();\n    }\n\n    submitJobForm() {\n        this.configInfoFormRef.current\n            .validateFields()\n            .then((values) => {\n                let form2Data = Object.assign({}, this.state.form2Data, values);\n                this.setState(\n                    {\n                        stepStatus: \"finish\",\n                        form2Data: form2Data,\n                    },\n                    () => {\n                        this.setState({ submitLoading: true });\n                        let reqData = {\n                            ...this.state.form1Data,\n                            ...this.state.form2Data,\n                            jobType: this.state.form1Data[\"jobType\"].join(\"-\"),\n                            open_deploy_auto_config: JSON.stringify(\n                                this.state.form2Data.open_deploy_auto_config,\n                            ),\n                        };\n                        postAddDailyJob(reqData)\n                            .then((res) => {\n                                if (res.code === 0) {\n                                    this.setState({ submitLoading: false });\n                                    message.success(res.msg);\n                                    this.props.history.push(\"/admin/task/jobs\");\n                                } else {\n                                    this.setState({ submitLoading: false });\n                                    message.error(res.msg);\n                                }\n                            })\n                            .catch((err) => {\n                                this.setState({ submitLoading: false });\n                                message.error(err.toLocaleString());\n                            });\n                    },\n                );\n            })\n            .catch((err) => {\n                this.setState({ stepStatus: \"error\" });\n            });\n    }\n\n    render() {\n        const { current } = this.state;\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"工作协助\", \"日常工单\"]} />\n                <Steps\n                    current={current}\n                    size=\"small\"\n                    style={{ marginTop: 20 }}\n                    status={this.state.stepStatus}\n                >\n                    <Step title=\"任务基本信息\" icon={<SolutionOutlined />} />\n                    <Step title=\"任务详情\" icon={<HighlightOutlined />} />\n                </Steps>\n                <div\n                    className=\"steps-content\"\n                    style={{ textAlign: \"center\", padding: 20 }}\n                >\n                    <Carousel\n                        ref={(carousel) => {\n                            this.carousel = carousel;\n                        }}\n                        dots={false}\n                        effect=\"fade\"\n                        adaptiveHeight={true}\n                        style={{ textAlign: \"center\" }}\n                    >\n                        <Fragment key={1}>\n                            <JobBaseInfo formRef={this.baseInfoFormRef} />\n                        </Fragment>\n                        <Fragment key={2}>\n                            <JobConfigInfo\n                                formRef={this.configInfoFormRef}\n                                jobType={this.state.jobTypeStr}\n                                loadConfigDataTemplateSpin={\n                                    this.state.loadConfigDataTemplateSpin\n                                }\n                            />\n                        </Fragment>\n                    </Carousel>\n                </div>\n                <div\n                    className=\"steps-action\"\n                    style={{ textAlign: \"center\", marginTop: 20 }}\n                >\n                    {current < 1 && (\n                        <Button type=\"primary\" onClick={() => this.next()}>\n                            下一步\n                        </Button>\n                    )}\n                    {current === 1 && (\n                        <Button\n                            type=\"primary\"\n                            loading={this.state.submitLoading}\n                            onClick={this.submitJobForm}\n                        >\n                            提 交\n                        </Button>\n                    )}\n                    {current > 0 && (\n                        <Button\n                            style={{ marginLeft: 8 }}\n                            onClick={() => this.prev()}\n                        >\n                            上一步\n                        </Button>\n                    )}\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default Deploy_project_content;\n","import jwt_decode from \"jwt-decode\";\n\nfunction getCurrentUserId() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['userId'];\n}\n\nfunction isSuperAdmin() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['isSuperAdmin'];\n}\n\nfunction isShowIntroPage() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['show_intro'];\n}\n\nexport { getCurrentUserId, isSuperAdmin, isShowIntroPage }\n","import React, { Component, Fragment } from \"react\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    Button,\n    Col,\n    Divider,\n    Input,\n    Layout,\n    Row,\n    Table,\n    Tag,\n    message,\n    Drawer,\n    Spin,\n    Descriptions,\n    Alert,\n    Card,\n    Typography,\n    Modal,\n    DatePicker,\n} from \"antd\";\nimport {\n    getDailyJobDetail,\n    getDailyJobs,\n    putDailyJob,\n    putDailyJobExecutorUser,\n} from \"../../api/daily_task\";\nimport moment from \"moment\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport \"moment/locale/zh-cn\";\nimport { getCurrentUserId } from \"../../services/common\";\nimport { ServerBase } from \"../../config\";\nmoment.locale(\"zh-cn\");\n\nconst { TextArea } = Input;\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nconst NULL_TIMESTAMP = \"0001-01-01 00:00:00\";\n\nclass Jobs_content extends Component {\n    constructor(props) {\n        super(props);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.ChangeExecutorSelect = this.ChangeExecutorSelect.bind(this);\n        this.changeRefuseReason = this.changeRefuseReason.bind(this);\n        this.autoCreateJob = this.autoCreateJob.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"id\",\n                    key: \"id\",\n                    width: 50,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"紧急度\",\n                    dataIndex: \"important_degree\",\n                    key: \"important_degree\",\n                    width: 70,\n                    render: (value) => {\n                        let content;\n                        switch (value) {\n                            case \"非常紧急\":\n                                content = <Tag color=\"#f50\">{value}</Tag>;\n                                break;\n                            case \"紧急\":\n                                content = (\n                                    <Tag color=\"rgb(255, 147, 137)\">\n                                        {value}\n                                    </Tag>\n                                );\n                                break;\n                            default:\n                                content = <Tag color=\"#108ee9\">{value}</Tag>;\n                                break;\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"状态\",\n                    dataIndex: \"status\",\n                    key: \"status\",\n                    width: 50,\n                    render: (value) => {\n                        const content = this.getStatusText(value);\n                        return <Text ellipsis={true}>{content}</Text>;\n                    },\n                },\n                {\n                    title: \"任务名\",\n                    dataIndex: \"job_name\",\n                    key: \"job_name\",\n                    width: 200,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"任务类型\",\n                    dataIndex: \"job_type\",\n                    key: \"job_type\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"创建人\",\n                    dataIndex: \"creator_user_name\",\n                    key: \"creator_user_name\",\n                    width: 70,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"create_time\",\n                    key: \"create_time\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true}>\n                                {moment(value).format(\"MM月DD日HH:mm\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"执行人\",\n                    dataIndex: \"executor_user_name\",\n                    key: \"executor_user_name\",\n                    width: 70,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"响应时间\",\n                    dataIndex: \"accept_time\",\n                    key: \"accept_time\",\n                    width: 150,\n                    render: (value) => {\n                        if (value === NULL_TIMESTAMP) {\n                            return <Text ellipsis={true}>-</Text>;\n                        }\n                        return (\n                            <Text ellipsis={true}>\n                                {moment(value).format(\"MM月DD日HH:mm\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"结束时间\",\n                    dataIndex: \"end_time\",\n                    key: \"end_time\",\n                    width: 150,\n                    render: (value) => {\n                        if (value === NULL_TIMESTAMP) {\n                            return <Text ellipsis={true}>-</Text>;\n                        }\n                        return (\n                            <Text ellipsis={true}>\n                                {moment(value).format(\"MM月DD日HH:mm\")}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <Fragment>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    onClick={this.showJobDetail.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    详情\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    disabled={!record.isGetEnable}\n                                    onClick={this.startJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    领取\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    disabled={!record.isFinishEnable}\n                                    onClick={this.finishJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    完成\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    disabled={!record.isRefuseEnable}\n                                    onClick={this.refuseJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    拒绝\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    disabled={!record.isDeleteEnable}\n                                    onClick={this.deleteJob.bind(\n                                        this,\n                                        record.id,\n                                    )}\n                                >\n                                    删除\n                                </Button>\n                            </Fragment>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            drawerSpinning: false,\n            drawerVisible: false,\n            opsUsersList: [],\n            changeExecutorModalVisible: false,\n            refuseJobModalVisible: false,\n            refuseId: 0,\n            refuseReason: \"\",\n            changeToUserId: 0,\n            jobChangeId: 0,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            job_file: \"\",\n            queryKeyword: \"\",\n            currentJob: \"\",\n            currentJobDetail: \"\",\n            isGetEnable: true,\n            isFinishEnable: true,\n            isDeleteEnable: true,\n            queryCreateTime: null,\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    showJobDetail(data) {\n        this.setState({\n            drawerVisible: true,\n            drawerSpinning: true,\n            currentJob: data,\n        });\n        getDailyJobDetail(data.id)\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState(\n                        {\n                            ...res.data,\n                            currentJobDetail: res.data,\n                        },\n                        () => {\n                            // console.log(this.state);\n                        },\n                    );\n                } else {\n                    message.error(res.msg);\n                }\n                this.setState({ drawerSpinning: false });\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    startJob(id) {\n        putDailyJob({\n            id: id,\n            action: \"getJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    let currentJob = Object.assign({}, this.state.currentJob, {\n                        isGetEnable: false,\n                    });\n                    message.success(\"领取成功\");\n                    this.setState({\n                        currentJob: currentJob,\n                    });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    changeExecutor(id) {\n        this.setState({\n            changeExecutorModalVisible: true,\n            jobChangeId: id,\n        });\n    }\n\n    handlerChangeExecutorCommit = () => {\n        if (this.state.changeToUserId === 0) {\n            message.error(\"请选择任务执行人\");\n            return;\n        }\n        let data = {\n            jobId: this.state.jobChangeId,\n            changeUserId: this.state.changeToUserId,\n        };\n        putDailyJobExecutorUser(data)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(res.msg);\n                    this.setState({ changeExecutorModalVisible: false });\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    ChangeExecutorSelect(data) {\n        this.setState({ changeToUserId: data });\n    }\n\n    changeRefuseReason(e) {\n        this.setState({ refuseReason: e.target.value });\n    }\n\n    finishJob(id) {\n        putDailyJob({\n            id: id,\n            action: \"finishJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"成功完成，继续努力\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refuseJob(id) {\n        this.setState({\n            refuseJobModalVisible: true,\n            refuseId: id,\n        });\n    }\n\n    deleteJob(id) {\n        putDailyJob({\n            id: id,\n            action: \"deleteJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handlerRefuseJobCommit = () => {\n        if (this.state.refuseId === 0) {\n            message.error(\"未选择拒绝工单\");\n            return;\n        }\n        if (this.state.refuseReason === \"\") {\n            message.error(\"必须填写拒绝原因\");\n            return;\n        }\n        putDailyJob({\n            id: this.state.refuseId,\n            refuseReason: this.state.refuseReason,\n            action: \"refuseJob\",\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ refuseJobModalVisible: false });\n                    message.success(\"操作成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    downloadFile() {\n        window.open(\n            ServerBase +\n                \"fileDownload?objectName=\" +\n                encodeURIComponent(this.state.job_file),\n            \"_blank\",\n        );\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryKeyword: this.state.queryKeyword,\n            queryCreateTime: this.state.queryCreateTime,\n        };\n        getDailyJobs(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"jobs\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"id\"],\n                        id: data[i][\"id\"],\n                        job_name: data[i][\"job_name\"],\n                        job_type: data[i][\"job_type\"],\n                        important_degree: data[i][\"important_degree\"],\n                        creator_user_name: data[i][\"creator_user_name\"],\n                        executor_user_name: data[i][\"executor_user_name\"],\n                        status: data[i][\"status\"],\n                        create_time: data[i][\"create_time\"],\n                        accept_time: data[i][\"accept_time\"],\n                        end_time: data[i][\"end_time\"],\n                        approve_id: data[i][\"approve_id\"],\n                        approve_content: data[i][\"approve_content\"],\n                        refuse_reason: data[i][\"refuse_reason\"],\n                        isExecutorChangable:\n                            data[i][\"status\"] === 2 &&\n                            data[i][\"executor_user_id\"] === getCurrentUserId(),\n                        isGetEnable: data[i][\"status\"] === 1,\n                        isFinishEnable:\n                            data[i][\"status\"] === 2 &&\n                            data[i][\"executor_user_id\"] === getCurrentUserId(),\n                        isDeleteEnable:\n                            data[i][\"creator_user_id\"] === getCurrentUserId() &&\n                            data[i][\"status\"] < 2,\n                        isRefuseEnable: data[i][\"status\"] === 1,\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({\n            queryKeyword: e.target.value,\n        });\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    onDrawerClose = () => {\n        this.setState({\n            drawerVisible: false,\n        });\n    };\n\n    autoCreateJob() {\n        localStorage.setItem(\n            \"job_template\",\n            JSON.stringify(this.state.currentJobDetail),\n        );\n        this.props.history.push({ pathname: \"/admin/task/deploy_project\" });\n    }\n\n    onQueryDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryCreateTime: null });\n        } else {\n            this.setState({ queryCreateTime: moment.format(\"YYYY-MM-DD\") });\n        }\n    };\n\n    getStatusText(status) {\n        let content;\n        switch (status) {\n            case 1:\n                content = <Tag color=\"volcano\">待领取</Tag>;\n                break;\n            case 2:\n                content = <Tag color=\"geekblue\">处理中</Tag>;\n                break;\n            case 3:\n                content = <Tag color=\"green\">已完成</Tag>;\n                break;\n            case 0:\n                content = <Tag color=\"magenta\">已拒绝</Tag>;\n                break;\n            default:\n                content = <Tag color=\"lime\">已删除</Tag>;\n                break;\n        }\n        return content;\n    }\n\n    render() {\n        let waitContent;\n        if (this.state.status > 0 && this.state.status < 3) {\n            const m1 = moment(this.state.create_time);\n            const m2 = moment(moment().format(\"YYYY-MM-DD HH:mm:ss\"));\n            let du = moment.duration(m2 - m1, \"ms\");\n            waitContent =\n                this.state.creator_user_name + \" 已等待 \" + du.humanize();\n        } else {\n            const m1 = moment(this.state.create_time);\n            const m2 = moment(this.state.end_time);\n            let du = moment.duration(m2 - m1, \"ms\");\n            waitContent = \"工单用时: \" + du.humanize();\n        }\n        let k8sConfigContent = (\n            <Descriptions.Item label=\"无配置\">用户未设置</Descriptions.Item>\n        );\n        if (\n            this.state.open_deploy_auto_config !== undefined &&\n            this.state.open_deploy_auto_config !== \"\"\n        ) {\n            let ConfigList = JSON.parse(this.state.open_deploy_auto_config);\n            k8sConfigContent = ConfigList.map((item, index) => {\n                return (\n                    <Descriptions.Item key={index} label={item.key}>\n                        <Paragraph\n                            style={{ marginBottom: 0, width: \"300px\" }}\n                            ellipsis={true}\n                            copyable={item.value !== \"\"}\n                        >\n                            {item.value}\n                        </Paragraph>\n                    </Descriptions.Item>\n                );\n            });\n        }\n        let refuseContent = \"\";\n        if (this.state.status === 0) {\n            refuseContent = (\n                <Alert\n                    style={{ marginTop: 10 }}\n                    message={\n                        <Fragment>\n                            拒绝原因：{this.state.refuse_reason}\n                        </Fragment>\n                    }\n                    type=\"error\"\n                />\n            );\n        }\n        let titleContent = (\n            <div>\n                <span style={{ marginRight: \"20px\" }}>工单详情</span>\n            </div>\n        );\n        return (\n            <Content\n                stmayle={{\n                    background: \"#fff\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"工作协助\", \"工单列表\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Row>\n                        <Col span={8} className=\"col-span\">\n                            <Input\n                                placeholder=\"输入工单名称、创建人、执行人查询\"\n                                value={this.state.queryKeyword}\n                                onChange={this.keywordOnChange}\n                            />\n                        </Col>\n                        <Col span={3} className=\"col-span\">\n                            <DatePicker\n                                style={{ width: \"100%\" }}\n                                defaultValue={this.state.queryCreateTime}\n                                placeholder=\"创建时间\"\n                                onChange={this.onQueryDateChange}\n                            />\n                        </Col>\n                        <Col span={3}>\n                            <Button\n                                type=\"primary\"\n                                icon={<SearchOutlined />}\n                                onClick={this.handleQuery}\n                            >\n                                查 询\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n\n                <Modal\n                    title=\"你正在拒绝他人工单，请谨慎操作！\"\n                    visible={this.state.refuseJobModalVisible}\n                    onOk={this.handlerRefuseJobCommit}\n                    onCancel={() => {\n                        this.setState({ refuseJobModalVisible: false });\n                    }}\n                    style={{ textAlign: \"center\" }}\n                >\n                    <Alert\n                        type=\"warning\"\n                        message=\"请详细填写你的拒绝理由，将反馈给工单创建者并留存！\"\n                        style={{ marginBottom: 10 }}\n                    />\n                    <TextArea\n                        rows={4}\n                        placeholder=\"填写详细拒绝原因，以便对方后续完善\"\n                        onChange={this.changeRefuseReason}\n                    />\n                </Modal>\n\n                <Drawer\n                    title={titleContent}\n                    placement=\"left\"\n                    closable={true}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.drawerVisible}\n                    width={800}\n                >\n                    <Spin\n                        tip=\"数据加载中...\"\n                        spinning={this.state.drawerSpinning}\n                    >\n                        <Row style={{ marginBottom: 10 }}>\n                            <Col span={24} style={{ fontSize: 15 }}>\n                                <Alert\n                                    message={\n                                        <Fragment>\n                                            {this.getStatusText(\n                                                this.state.status,\n                                            )}\n                                            {this.state.job_name}\n                                        </Fragment>\n                                    }\n                                    type=\"info\"\n                                />\n                                {refuseContent}\n                            </Col>\n                        </Row>\n                        <Row style={{ marginBottom: 10 }}>\n                            <Col span={24}>\n                                <Alert\n                                    message={waitContent}\n                                    type=\"warning\"\n                                    showIcon\n                                />\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: \"10px\" }}>\n                            <Card\n                                size=\"small\"\n                                title=\"工单基本信息\"\n                                style={{ marginBottom: 10, width: \"100%\" }}\n                            >\n                                <Descriptions bordered size=\"small\" column={2}>\n                                    <Descriptions.Item label=\"任务类型\">\n                                        {this.state.job_type}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"紧急度\">\n                                        {this.state.important_degree}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"发起时间\">\n                                        {this.state.create_time}\n                                    </Descriptions.Item>\n                                </Descriptions>\n                            </Card>\n                        </Row>\n                        <Row style={{ marginTop: \"10px\" }}>\n                            <Card\n                                size=\"small\"\n                                title=\"工作内容\"\n                                style={{ marginBottom: 10, width: \"100%\" }}\n                            >\n                                <Paragraph\n                                    style={{ marginBottom: 0 }}\n                                    ellipsis={true}\n                                    copyable={this.state.task_content !== \"\"}\n                                >\n                                    {this.state.task_content}\n                                </Paragraph>\n                            </Card>\n                            <Card\n                                size=\"small\"\n                                title=\"自定义项\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <Descriptions\n                                    bordered\n                                    size=\"small\"\n                                    column={1}\n                                    style={{ marginTop: \"10px\" }}\n                                >\n                                    {k8sConfigContent}\n                                </Descriptions>\n                            </Card>\n                            <Card\n                                size=\"small\"\n                                title=\"用户备注\"\n                                style={{ width: \"100%\" }}\n                            >\n                                <Paragraph\n                                    style={{ marginBottom: 0 }}\n                                    ellipsis={true}\n                                    copyable={this.state.remark !== \"\"}\n                                >\n                                    {this.state.remark}\n                                </Paragraph>\n                            </Card>\n                        </Row>\n                        <Row style={{ textAlign: \"center\", marginTop: 20 }}>\n                            <Col span={7} />\n                            <Col span={4}>\n                                <Button\n                                    type=\"primary\"\n                                    disabled={\n                                        !this.state.currentJob.isGetEnable\n                                    }\n                                    onClick={this.startJob.bind(\n                                        this,\n                                        this.state.currentJob.id,\n                                    )}\n                                >\n                                    一键领取\n                                </Button>\n                            </Col>\n                            <Col offset={1} />\n                            <Col span={4}>\n                                <Button\n                                    type=\"danger\"\n                                    disabled={\n                                        !this.state.currentJob.isFinishEnable\n                                    }\n                                    onClick={this.finishJob.bind(\n                                        this,\n                                        this.state.currentJob.id,\n                                    )}\n                                >\n                                    我已完成\n                                </Button>\n                            </Col>\n                            <Col span={7} />\n                        </Row>\n                        <Row style={{ minHeight: 30 }} />\n                    </Spin>\n                </Drawer>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default Jobs_content;\n","import React, { Component } from \"react\";\nimport { Button, Card, Icon, Layout, Alert } from \"antd\";\nimport { Terminal } from \"xterm\";\nimport { AttachAddon } from \"xterm-addon-attach\";\nimport \"xterm/css/xterm.css\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport { WSBase } from \"../../config\";\n\nconst { Content } = Layout;\nlet attachAddon;\n\nclass WebTerminalContent extends Component {\n    constructor(props) {\n        super(props);\n        this.goBack = this.goBack.bind(this);\n        this.rws = new ReconnectingWebSocket(\n            WSBase + \"ws/kubernetes/container_terminal\",\n        );\n        this.terminal = new Terminal({\n            rows: 36,\n            fontSize: 14,\n            cursorBlink: true,\n            cursorStyle: \"block\",\n            bellStyle: \"sound\",\n            theme: \"Console\",\n        });\n        this.terminal.prompt = () => {\n            this.terminal.write(\"\\r\\n$ \");\n        };\n        this.state = {\n            containerDetail: this.props.location.state,\n            connectionStatus: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.terminal.open(document.getElementById(\"terminal\"));\n        this.terminal.writeln(\"Welcome to use Web Terminal.\");\n        this.terminal.prompt();\n        this.initWsConnection();\n        attachAddon = new AttachAddon(this.rws);\n        this.terminal.loadAddon(attachAddon);\n        this.terminal.focus();\n    }\n\n    componentWillUnmount() {\n        this.rws.send(\n            JSON.stringify({\n                action: \"connection_close\",\n                clusterId: localStorage.getItem(\"clusterId\"),\n                namespace: this.state.containerDetail.namespace,\n                podName: this.state.containerDetail.podName,\n                containerName: this.state.containerDetail.containerName,\n            }),\n        );\n        this.rws.close();\n        this.terminal.dispose();\n    }\n\n    initWsConnection() {\n        let that = this;\n        this.rws.addEventListener(\"open\", () => {\n            that.rws.send(\n                JSON.stringify({\n                    action: \"init_connection\",\n                    clusterId: localStorage.getItem(\"clusterId\"),\n                    namespace: that.state.containerDetail.namespace,\n                    podName: that.state.containerDetail.podName,\n                    containerName: that.state.containerDetail.containerName,\n                }),\n            );\n            that.setState({ connectionStatus: 1 });\n        });\n\n        this.rws.addEventListener(\"close\", () => {\n            that.setState({ connectionStatus: 0 });\n        });\n\n        this.rws.addEventListener(\"error\", () => {\n            that.setState({ connectionStatus: 0 });\n        });\n    }\n\n    goBack() {\n        this.rws.send(\n            JSON.stringify({\n                action: \"connection_close\",\n                clusterId: localStorage.getItem(\"clusterId\"),\n                namespace: this.state.containerDetail.namespace,\n                podName: this.state.containerDetail.podName,\n                containerName: this.state.containerDetail.containerName,\n            }),\n        );\n        this.rws.close();\n        this.props.history.goBack();\n    }\n\n    render() {\n        let connectContent = (\n            <Alert message=\"远程连接未建立\" type=\"error\" showIcon />\n        );\n        if (this.state.connectionStatus === 1) {\n            connectContent = (\n                <Alert message=\"远程连接成功\" type=\"success\" showIcon />\n            );\n        }\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Button type=\"link\" onClick={this.goBack}>\n                    <Icon type=\"left\" />\n                    返回上级\n                </Button>\n                {connectContent}\n                <Card\n                    size=\"small\"\n                    title=\"终端\"\n                    style={{ width: \"100%\" }}\n                    bodyStyle={{ padding: 0 }}\n                >\n                    <div id=\"terminal\" style={{ width: \"100%\" }} />\n                </Card>\n            </Content>\n        );\n    }\n}\n\nexport default WebTerminalContent;\n","import React, { Component } from \"react\";\nimport { Layout } from \"antd/lib/index\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Deploy_project_content from \"./deploy_project_content\";\nimport Jobs_content from \"./jobs_content\";\n\nconst { Content } = Layout;\n\nclass TaskContent extends Component {\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Switch>\n                    <Route\n                        path=\"/admin/task/deploy_project\"\n                        component={Deploy_project_content}\n                    />\n                    <Route path=\"/admin/task/jobs\" component={Jobs_content} />\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default TaskContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Table,\n    Form,\n    message,\n    Button,\n    Tag,\n    Typography,\n    Row,\n    Col,\n    Divider,\n    Modal,\n    Input,\n} from \"antd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\nimport { getUsersList, postUserCreate, putUserCreate } from \"../../api/user\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\nconst { Text } = Typography;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass UserModal extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Modal\n                title=\"新增用户\"\n                destroyOnClose={true}\n                visible={this.props.userModalVisible}\n                onOk={this.props.handleAddUserSubmit}\n                onCancel={this.props.handleAddUserCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={600}\n            >\n                <Form ref={this.props.formRef}>\n                    <Form.Item\n                        label=\"邮箱\"\n                        {...formItemLayout}\n                        name=\"email\"\n                        rules={[\n                            { required: true, message: \"注册邮箱不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"用户名\"\n                        {...formItemLayout}\n                        name=\"username\"\n                        rules={[\n                            { required: true, message: \"用户名不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"初始密码\"\n                        {...formItemLayout}\n                        name=\"password\"\n                        rules={[\n                            { required: true, message: \"用户名不能为空！\" },\n                        ]}\n                    >\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"职位\"\n                        {...formItemLayout}\n                        name=\"position\"\n                        rules={[{ required: true, message: \"职位不能为空！\" }]}\n                    >\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass UserManager extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this);\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 60,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"用户名\",\n                    dataIndex: \"username\",\n                    key: \"username\",\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"邮箱\",\n                    dataIndex: \"email\",\n                    key: \"email\",\n                    className: { columnStyle },\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"职位\",\n                    dataIndex: \"position\",\n                    key: \"position\",\n                    className: { columnStyle },\n                    width: 100,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"状态\",\n                    dataIndex: \"active\",\n                    key: \"active\",\n                    className: { columnStyle },\n                    width: 100,\n                    render: (value) => {\n                        return value === true ? (\n                            <Text ellipsis={true}>\n                                <Tag color=\"geekblue\">正常</Tag>\n                            </Text>\n                        ) : (\n                            <Text ellipsis={true}>\n                                <Tag color=\"red\">禁用</Tag>\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 140,\n                    align: \"center\",\n                    render: (text, record) => {\n                        let disabled = false;\n                        if (record.count === 1 && record.email === \"admin@ops.com\") {\n                            disabled = true;\n                        }\n                        return (\n                            <div>\n                                <Button\n                                    type=\"primary\"\n                                    size=\"small\"\n                                    disabled={disabled}\n                                    onClick={this.updateUserActiveStatus.bind(\n                                        this,\n                                        record.email,\n                                        true,\n                                    )}\n                                >\n                                    启用\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    disabled={disabled}\n                                    onClick={this.updateUserActiveStatus.bind(\n                                        this,\n                                        record.email,\n                                        false,\n                                    )}\n                                >\n                                    禁用\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            add_new_account_visible: false,\n            current_data_id: null,\n            current_user: {},\n            detailDrawerVisible: false,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            userModalVisible: false,\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getUsersList(this.state.pagination.page, this.state.pagination.pageSize)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"users\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        ID: data[i][\"ID\"],\n                        username: data[i][\"username\"],\n                        email: data[i][\"email\"],\n                        position: data[i][\"position\"],\n                        active: data[i][\"active\"],\n                        count: data.length,\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    handleAdd() {\n        this.setState({ userModalVisible: true });\n    }\n\n    handleAddUserSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postUserCreate({\n                ...values,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        this.setState({ userModalVisible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleAddUserCancel() {\n        this.setState({ userModalVisible: false });\n    }\n\n    updateUserActiveStatus(email, activeStatus) {\n        putUserCreate({\n            email: email,\n            active: activeStatus,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"操作成功！\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"权限管理\", \"用户管理\", \"用户列表\"]}\n                />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n                <UserModal\n                    formRef={this.formRef}\n                    userModalVisible={this.state.userModalVisible}\n                    handleAddUserSubmit={this.handleAddUserSubmit}\n                    handleAddUserCancel={this.handleAddUserCancel}\n                />\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default UserManager;\n","import req from '../utils/axios';\n\n/*\n    权限管理 - 新建角色\n */\nconst postAddRole = (data) => {\n    return req.post('roles/addRole', data)\n};\nexport {postAddRole}\n\n/*\n    权限管理 - 更新角色\n */\nconst putUpdateRole = (data) => {\n    return req.put('roles/updateRole', data)\n};\nexport {putUpdateRole}\n\n/*\n    权限管理 - 删除角色\n */\nconst deleteRole = (data) => {\n    return req.delete('roles/deleteRole', data)\n};\nexport {deleteRole}\n\n/*\n    权限管理 - 获取角色的权限链接\n */\nconst getRoleAuthLinks = (roleId) => {\n    return req.get('roles/authLink', {roleId})\n};\nexport {getRoleAuthLinks}\n\n/*\n    权限管理 - 新增权限链接\n */\nconst postAddAuthLink = (data) => {\n    return req.post('roles/authLink', data)\n};\nexport {postAddAuthLink}\n\n/*\n    权限管理 - 新建角色的权限链接\n */\nconst postRoleAuthLinks = (data) => {\n    return req.post('roles/authLinks', data)\n};\nexport {postRoleAuthLinks}\n\n/*\n    权限管理 - 删除权限链接\n */\nconst deleteAuthLink = (data) => {\n    return req.delete('roles/authLink', data)\n};\nexport {deleteAuthLink}\n\n/*\n    权限管理 - 获取角色列表\n */\nconst getRolesList = (page, size) =>{\n    return req.get('roles/list', {page, size})\n};\nexport {getRolesList}\n\n/*\n    权限管理 - 获取角色对应的用户列表\n */\nconst getRoleUserList = (roleId) =>{\n    return req.get('roles/users', {roleId})\n};\nexport {getRoleUserList}\n\n/*\n    权限管理 - 新增角色对应的用户\n */\nconst postRoleUserList = (data) =>{\n    return req.post('roles/users', data)\n};\nexport {postRoleUserList}\n\n/*\n    权限管理 - 获取角色下的服务器资源列表\n */\nconst getRoleResourceList = (roleId, resourceType) =>{\n    return req.get('roles/resources', {roleId, resourceType})\n};\nexport {getRoleResourceList}\n\n/*\n    权限管理 - 新增角色下的服务器资源\n */\nconst postRoleResourcesList = (data) =>{\n    return req.post('roles/resources', data)\n};\nexport {postRoleResourcesList}\n\n/*\n    权限管理 - 获取所有的权限链接\n */\nconst getPermissionsList = (page, size) =>{\n    return req.get('permissions/list', {page, size})\n};\nexport {getPermissionsList}","import React, { Component, Fragment } from \"react\";\nimport {\n    Button,\n    Layout,\n    Table,\n    Modal,\n    Form,\n    Input,\n    Divider,\n    Transfer,\n} from \"antd\";\nimport { message, Row, Col, Spin, Tabs } from \"antd\";\nimport {\n    deleteRole,\n    getRoleAuthLinks,\n    getRoleResourceList,\n    getRolesList,\n    getRoleUserList,\n    postAddRole,\n    postRoleAuthLinks,\n    postRoleResourcesList,\n    postRoleUserList,\n    putUpdateRole,\n} from \"../../api/role\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\nconst confirm = Modal.confirm;\nconst { TabPane } = Tabs;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass RoleModal extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        const { roleActionType } = this.props;\n        let title = \"新建角色\";\n        if (roleActionType === \"add\") {\n            title = \"新建角色\";\n        } else {\n            title = \"编辑角色\";\n        }\n        return (\n            <Fragment>\n                <Modal\n                    title={title}\n                    visible={this.props.roleModalVisible}\n                    closable={true}\n                    onOk={\n                        roleActionType === \"add\"\n                            ? this.props.handleAddRole\n                            : this.props.handleEditRole\n                    }\n                    onCancel={this.props.handleCancelAddRole}\n                    centered={true}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form ref={this.props.formRef}>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"角色名称\"\n                            name=\"roleName\"\n                            rules={[\n                                { required: true, message: \"请输入角色名称\" },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入角色名称\" />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"角色描述\"\n                            name=\"description\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入角色描述\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入角色描述\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nclass UserManagerModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roleId: 0,\n            inGroupData: [],\n            allGroupData: [],\n            transferLodding: false,\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.loadRoleUsersData(roleId);\n    }\n\n    loadRoleUsersData(roleId) {\n        this.setState({\n            roleId: roleId,\n            transferLodding: true,\n        });\n        getRoleUserList(roleId)\n            .then((res) => {\n                if (res.code === 0) {\n                    let inGroupData = [];\n                    let allGroupData = [];\n                    res.data.all.forEach(function(item) {\n                        allGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            username: item.username,\n                            position: item.position,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        inGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        inGroupData: inGroupData,\n                        allGroupData: allGroupData,\n                        transferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    filterOption = (inputValue, option) =>\n        option.username.indexOf(inputValue) > -1;\n\n    handleTransferChange(targetKeys, direction, moveKeys) {\n        this.setState({\n            inGroupData: targetKeys,\n        });\n    }\n\n    handleConfirmUserManager() {\n        this.setState({ transferLodding: true });\n        postRoleUserList({\n            roleId: parseInt(this.state.roleId),\n            userIdList: this.state.inGroupData,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ transferLodding: false });\n                    this.props.hideModal();\n                    message.success(\"操作成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理用户角色 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.userManagerModalVisible}\n                onOk={this.handleConfirmUserManager.bind(this)}\n                onCancel={this.props.handleCancelUserManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={680}\n                style={{ textAlign: \"center\" }}\n            >\n                <Spin spinning={this.state.transferLodding}>\n                    <Transfer\n                        dataSource={this.state.allGroupData}\n                        showSearch\n                        locale={{\n                            itemUnit: \"人\",\n                            itemsUnit: \"人\",\n                            searchPlaceholder: \"使用姓名搜索\",\n                        }}\n                        filterOption={this.filterOption}\n                        targetKeys={this.state.inGroupData}\n                        onChange={this.handleTransferChange.bind(this)}\n                        render={(item) => item.username + \"-\" + item.position}\n                        listStyle={{\n                            width: 250,\n                            height: \"60vh\",\n                            textAlign: \"left\",\n                        }}\n                        operations={[\"加入角色组\", \"移出角色组\"]}\n                    />\n                </Spin>\n            </Modal>\n        );\n    }\n}\n\nclass ResourceManagerModal extends Component {\n    constructor(props) {\n        super(props);\n        this.handleConfirmRoleResourceManager = this.handleConfirmRoleResourceManager.bind(\n            this,\n        );\n        this.state = {\n            roleId: 0,\n            tabSpinning: false,\n            ecsInGroupData: [],\n            ecsAllGroupData: [],\n            rdsInGroupData: [],\n            rdsAllGroupData: [],\n            kvInGroupData: [],\n            kvAllGroupData: [],\n            slbInGroupData: [],\n            slbAllGroupData: [],\n            otherAllGroupData: [],\n            otherInGroupData: [],\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.setState({ roleId });\n        this.loadRoleEcsData(roleId);\n        this.loadRoleRdsData(roleId);\n        this.loadRoleKvData(roleId);\n        this.loadRoleSlbData(roleId);\n        this.loadRoleOtherResData(roleId);\n    }\n\n    loadRoleEcsData(roleId) {\n        this.setState({\n            ecsTransferLodding: true,\n        });\n        let ecsAllGroupData = [];\n        let ecsInGroupData = [];\n        getRoleResourceList(roleId, \"ecs\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        ecsAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            instance_name: item.InstanceName,\n                            ip:\n                                item.InnerIpAddress +\n                                \" \" +\n                                item.PublicIpAddress,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        ecsInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        ecsAllGroupData: ecsAllGroupData,\n                        ecsInGroupData: ecsInGroupData,\n                        ecsTransferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadRoleRdsData(roleId) {\n        this.setState({\n            rdsTransferLodding: true,\n        });\n        let rdsAllGroupData = [];\n        let rdsInGroupData = [];\n        getRoleResourceList(roleId, \"rds\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        rdsAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            db_instance_description: item.DBInstanceDescription,\n                            db_instance_id: item.DBInstanceId,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        rdsInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        rdsAllGroupData: rdsAllGroupData,\n                        rdsInGroupData: rdsInGroupData,\n                        rdsTransferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadRoleKvData(roleId) {\n        this.setState({\n            kvTransferLodding: true,\n        });\n        let kvAllGroupData = [];\n        let kvInGroupData = [];\n        getRoleResourceList(roleId, \"kv\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        kvAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            instance_name: item.InstanceName,\n                            connection_domain: item.ConnectionDomain,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        kvInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        kvAllGroupData,\n                        kvInGroupData,\n                        kvTransferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadRoleSlbData(roleId) {\n        this.setState({\n            slbTransferLodding: true,\n        });\n        let slbAllGroupData = [];\n        let slbInGroupData = [];\n        getRoleResourceList(roleId, \"slb\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        slbAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            load_balance_name: item.LoadBalancerName,\n                            address: item.Address,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        slbInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        slbAllGroupData,\n                        slbInGroupData,\n                        slbTransferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadRoleOtherResData(roleId) {\n        this.setState({\n            otherResTransferLodding: true,\n        });\n        let otherAllGroupData = [];\n        let otherInGroupData = [];\n        getRoleResourceList(roleId, \"other\")\n            .then((res) => {\n                if (res.code === 0) {\n                    res.data.all.forEach(function(item) {\n                        otherAllGroupData.push({\n                            key: String(item.ID),\n                            id: String(item.ID),\n                            instance_name: item.InstanceName,\n                            res_type: item.ResType,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        otherInGroupData.push(String(item.ID));\n                    });\n                    this.setState({\n                        otherAllGroupData: otherAllGroupData,\n                        otherInGroupData: otherInGroupData,\n                        otherResTransferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    ecsFilterOption = (inputValue, option) =>\n        option.instance_name.indexOf(inputValue) > -1 ||\n        option.ip.indexOf(inputValue) > -1;\n\n    rdsFilterOption = (inputValue, option) =>\n        option.db_instance_description.indexOf(inputValue) > -1 ||\n        option.db_instance_id.indexOf(inputValue) > -1;\n\n    kvFilterOption = (inputValue, option) =>\n        option.instance_name.indexOf(inputValue) > -1 ||\n        option.connection_domain.indexOf(inputValue) > -1;\n\n    slbFilterOption = (inputValue, option) =>\n        option.load_balance_name.indexOf(inputValue) > -1 ||\n        option.address.indexOf(inputValue) > -1;\n\n    otherResFilterOption = (inputValue, option) =>\n        option.instance_name.indexOf(inputValue) > -1 ||\n        option.address.indexOf(inputValue) > -1;\n\n    handleResTransferChange(resType, targetKeys) {\n        switch (resType) {\n            case \"ecs\":\n                this.setState({\n                    ecsInGroupData: targetKeys,\n                });\n                break;\n            case \"rds\":\n                this.setState({\n                    rdsInGroupData: targetKeys,\n                });\n                break;\n            case \"kv\":\n                this.setState({\n                    kvInGroupData: targetKeys,\n                });\n                break;\n            case \"slb\":\n                this.setState({\n                    slbInGroupData: targetKeys,\n                });\n                break;\n            case \"other\":\n                this.setState({\n                    otherInGroupData: targetKeys,\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    handleTabClick = (e) => {\n        // if(e===\"ecs\"){\n        //     this.loadRoleEcsData()\n        // } else if(e===\"rds\") {\n        //     this.loadRoleRdsData()\n        // } else if(e===\"kv\") {\n        //     this.loadRoleKvData()\n        // } else {\n        //     this.loadRoleSlbData()\n        // }\n    };\n\n    handleConfirmRoleResourceManager() {\n        this.setState({ tabSpinning: true });\n        postRoleResourcesList({\n            roleId: parseInt(this.state.roleId),\n            ecsIdList: this.state.ecsInGroupData,\n            rdsIdList: this.state.rdsInGroupData,\n            kvIdList: this.state.kvInGroupData,\n            slbIdList: this.state.slbInGroupData,\n            otherIdList: this.state.otherInGroupData,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ tabSpinning: false });\n                    this.props.hideModal();\n                    message.success(\"操作成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理角色组关联资源 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.resourceManagerModalVisible}\n                onOk={this.handleConfirmRoleResourceManager}\n                onCancel={this.props.handleCancelResourceManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={1000}\n                style={{ textAlign: \"center\" }}\n            >\n                <Spin spinning={this.state.tabSpinning} tip=\"请求处理中...\">\n                    <Tabs\n                        defaultActiveKey=\"ecs\"\n                        tabPosition=\"left\"\n                        onTabClick={this.handleTabClick.bind(this)}\n                    >\n                        <TabPane tab=\"云服务器\" key=\"ecs\">\n                            <Spin spinning={this.state.ecsTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"台\",\n                                        itemsUnit: \"台\",\n                                        searchPlaceholder:\n                                            \"使用ip或机器名称搜索\",\n                                    }}\n                                    filterOption={this.ecsFilterOption}\n                                    dataSource={this.state.ecsAllGroupData}\n                                    targetKeys={this.state.ecsInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"ecs\",\n                                    )}\n                                    render={(item) =>\n                                        item.ip + \" \" + item.instance_name\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"云数据库\" key=\"rds\">\n                            <Spin spinning={this.state.rdsTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"台\",\n                                        itemsUnit: \"台\",\n                                        searchPlaceholder:\n                                            \"使用连接串或名称搜索\",\n                                    }}\n                                    filterOption={this.rdsFilterOption}\n                                    dataSource={this.state.rdsAllGroupData}\n                                    targetKeys={this.state.rdsInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"rds\",\n                                    )}\n                                    render={(item) =>\n                                        item.db_instance_description +\n                                        \" \" +\n                                        item.db_instance_id\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"KVStore\" key=\"kv\">\n                            <Spin spinning={this.state.kvTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"台\",\n                                        itemsUnit: \"台\",\n                                        searchPlaceholder:\n                                            \"使用连接串或名称搜索\",\n                                    }}\n                                    filterOption={this.kvFilterOption}\n                                    dataSource={this.state.kvAllGroupData}\n                                    targetKeys={this.state.kvInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"kv\",\n                                    )}\n                                    render={(item) =>\n                                        item.instance_name +\n                                        \" \" +\n                                        item.connection_domain\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"SLB\" key=\"slb\">\n                            <Spin spinning={this.state.slbTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"个\",\n                                        itemsUnit: \"个\",\n                                        searchPlaceholder: \"使用ip或名称搜索\",\n                                    }}\n                                    filterOption={this.slbFilterOption}\n                                    dataSource={this.state.slbAllGroupData}\n                                    targetKeys={this.state.slbInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"slb\",\n                                    )}\n                                    render={(item) =>\n                                        item.load_balance_name +\n                                        \" \" +\n                                        item.address\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                        <TabPane tab=\"其它资源\" key=\"other\">\n                            <Spin spinning={this.state.otherResTransferLodding}>\n                                <Transfer\n                                    showSearch\n                                    locale={{\n                                        itemUnit: \"个\",\n                                        itemsUnit: \"个\",\n                                        searchPlaceholder: \"使用实例名称搜索\",\n                                    }}\n                                    filterOption={this.otherResFilterOption}\n                                    dataSource={this.state.otherAllGroupData}\n                                    targetKeys={this.state.otherInGroupData}\n                                    onChange={this.handleResTransferChange.bind(\n                                        this,\n                                        \"other\",\n                                    )}\n                                    render={(item) =>\n                                        item.res_type + \" \" + item.instance_name\n                                    }\n                                    listStyle={{\n                                        width: 350,\n                                        height: \"60vh\",\n                                        textAlign: \"left\",\n                                    }}\n                                    operations={[\"加入角色组\", \"移出角色组\"]}\n                                />\n                            </Spin>\n                        </TabPane>\n                    </Tabs>\n                </Spin>\n            </Modal>\n        );\n    }\n}\n\nclass AuthLinkManagerModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            roleId: 0,\n            inGroupData: [],\n            allGroupData: [],\n            transferLodding: false,\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.loadRoleAuthLinksData(roleId);\n    }\n\n    loadRoleAuthLinksData(roleId) {\n        this.setState({\n            roleId: roleId,\n            transferLodding: true,\n        });\n        getRoleAuthLinks(roleId)\n            .then((res) => {\n                if (res.code === 0) {\n                    let inGroupData = [];\n                    let allGroupData = [];\n                    res.data.all.forEach(function(item) {\n                        allGroupData.push({\n                            key: String(item.Id),\n                            id: String(item.Id),\n                            name: item.name,\n                            url_path: item.urlPath,\n                        });\n                    });\n                    res.data.in.forEach(function(item) {\n                        inGroupData.push(String(item.Id));\n                    });\n                    this.setState({\n                        inGroupData: inGroupData,\n                        allGroupData: allGroupData,\n                        transferLodding: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    filterOption = (inputValue, option) =>\n        option.name.indexOf(inputValue) > -1 ||\n        option.url_path.indexOf(inputValue) > -1;\n\n    handleTransferChange(targetKeys, direction, moveKeys) {\n        this.setState({\n            inGroupData: targetKeys,\n        });\n    }\n\n    handleConfirmUserManager() {\n        this.setState({ transferLodding: true });\n        postRoleAuthLinks({\n            roleId: parseInt(this.state.roleId),\n            authLinkIdList: this.state.inGroupData,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ transferLodding: false });\n                    this.props.hideModal();\n                    message.success(\"操作成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理角色对应权限 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.authLinkManagerModalVisible}\n                onOk={this.handleConfirmUserManager.bind(this)}\n                onCancel={this.props.handleCancelAuthLinkManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={680}\n                style={{ textAlign: \"center\" }}\n            >\n                <Spin spinning={this.state.transferLodding}>\n                    <Transfer\n                        dataSource={this.state.allGroupData}\n                        showSearch\n                        locale={{\n                            itemUnit: \"条\",\n                            itemsUnit: \"条\",\n                            searchPlaceholder: \"使用名称或路径搜索\",\n                        }}\n                        filterOption={this.filterOption}\n                        targetKeys={this.state.inGroupData}\n                        onChange={this.handleTransferChange.bind(this)}\n                        render={(item) => item.name + \" \" + item.url_path}\n                        listStyle={{\n                            width: 250,\n                            height: \"60vh\",\n                            textAlign: \"left\",\n                        }}\n                        operations={[\"加入角色组\", \"移出角色组\"]}\n                    />\n                </Spin>\n            </Modal>\n        );\n    }\n}\n\nclass RolesManager extends Component {\n    constructor(props) {\n        super(props);\n        this.handleAddRole = this.handleAddRole.bind(this);\n        this.handleEditRole = this.handleEditRole.bind(this);\n        this.handleCancelAddRole = this.handleCancelAddRole.bind(this);\n        this.createRole = this.createRole.bind(this);\n        this.roleEdit = this.roleEdit.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"Id\",\n                    key: \"Id\",\n                    width: 60,\n                },\n                {\n                    title: \"角色名\",\n                    dataIndex: \"name\",\n                    key: \"name\",\n                    width: 160,\n                },\n                {\n                    title: \"角色描述\",\n                    dataIndex: \"description\",\n                    key: \"description\",\n                    className: { columnStyle },\n                    width: 160,\n                },\n                {},\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 430,\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    size=\"small\"\n                                    onClick={this.managerUser.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    管理用户\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    size=\"small\"\n                                    onClick={this.managerAuthLink.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    管理权限\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    size=\"small\"\n                                    onClick={this.managerResource.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    管理资源\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.roleEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"danger\"\n                                    size=\"small\"\n                                    onClick={this.confirmDeleteRole.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    删除\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            roleModalVisible: false,\n            roleActionType: \"add\",\n            editRoleId: 0,\n            userManagerModalVisible: false,\n            resourceManagerModalVisible: false,\n            authLinkManagerModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    managerUser = (record) => {\n        this.setState({\n            roleId: record.Id,\n            userManagerModalVisible: true,\n            currentRoleName: record.name,\n        });\n    };\n\n    confirmDeleteRole = (record) => {\n        let that = this;\n        confirm({\n            title: \"危险操作提示\",\n            content:\n                \"删除该角色组时该角色组和与之绑定的所有用户的关系、所有资源的关系和权限链接的关系也会被删除，请谨慎操作！\",\n            okText: \"确认删除\",\n            okType: \"danger\",\n            cancelText: \"取消\",\n            onOk() {\n                deleteRole({\n                    id: record[\"Id\"],\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            that.refreshTableData();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            },\n            onCancel() {},\n        });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    managerResource = (record) => {\n        this.setState(() => ({\n            roleId: record.Id,\n            resourceManagerModalVisible: true,\n            currentRoleName: record.name,\n        }));\n    };\n\n    managerAuthLink = (record) => {\n        this.setState(() => ({\n            roleId: record.Id,\n            authLinkManagerModalVisible: true,\n            currentRoleName: record.name,\n        }));\n    };\n\n    createRole() {\n        this.setState(() => ({\n            roleActionType: \"add\",\n            roleModalVisible: true,\n        }));\n    }\n\n    roleEdit(record) {\n        this.formRef.current.setFieldsValue({\n            roleName: record.name,\n            description: record.description,\n        });\n        this.setState(() => ({\n            roleActionType: \"update\",\n            roleModalVisible: true,\n            editRoleId: record.Id,\n        }));\n    }\n\n    handleAddRole() {\n        this.formRef.current.validateFields().then((values) => {\n            postAddRole(values)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"创建成功\");\n                        this.setState({\n                            roleModalVisible: false,\n                        });\n                        this.formRef.current.resetFields();\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleEditRole() {\n        this.formRef.current.validateFields().then((values) => {\n            putUpdateRole({\n                ...values,\n                id: this.state.editRoleId,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"修改成功\");\n                        this.setState({\n                            roleModalVisible: false,\n                        });\n                        this.formRef.current.resetFields();\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleCancelAddRole() {\n        this.setState(() => ({\n            roleModalVisible: false,\n            userManagerModalVisible: false,\n            resourceManagerModalVisible: false,\n            authLinkManagerModalVisible: false,\n        }));\n    }\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getRolesList(this.state.pagination.page, this.state.pagination.pageSize)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"roles\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"Id\"],\n                        Id: data[i][\"Id\"],\n                        name: data[i][\"name\"],\n                        description: data[i][\"description\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"权限管理\", \"角色管理\", \"角色列表\"]}\n                />\n                <div style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\" onClick={this.createRole}>\n                                新建角色\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n                <RoleModal\n                    formRef={this.formRef}\n                    roleModalVisible={this.state.roleModalVisible}\n                    roleActionType={this.state.roleActionType}\n                    handleAddRole={this.handleAddRole}\n                    handleEditRole={this.handleEditRole}\n                    handleCancelAddRole={this.handleCancelAddRole}\n                />\n                {this.state.userManagerModalVisible ? (\n                    <UserManagerModal\n                        roleId={this.state.roleId}\n                        userManagerModalVisible={\n                            this.state.userManagerModalVisible\n                        }\n                        currentRoleName={this.state.currentRoleName}\n                        hideModal={() => {\n                            this.setState({ userManagerModalVisible: false });\n                        }}\n                        handleCancelUserManager={this.handleCancelAddRole.bind(\n                            this,\n                        )}\n                    />\n                ) : (\n                    \"\"\n                )}\n                {this.state.resourceManagerModalVisible ? (\n                    <ResourceManagerModal\n                        roleId={this.state.roleId}\n                        resourceManagerModalVisible={\n                            this.state.resourceManagerModalVisible\n                        }\n                        currentRoleName={this.state.currentRoleName}\n                        hideModal={() => {\n                            this.setState({\n                                resourceManagerModalVisible: false,\n                            });\n                        }}\n                        handleCancelResourceManager={this.handleCancelAddRole.bind(\n                            this,\n                        )}\n                    />\n                ) : (\n                    \"\"\n                )}\n                {this.state.authLinkManagerModalVisible ? (\n                    <AuthLinkManagerModal\n                        roleId={this.state.roleId}\n                        authLinkManagerModalVisible={\n                            this.state.authLinkManagerModalVisible\n                        }\n                        currentRoleName={this.state.currentRoleName}\n                        hideModal={() => {\n                            this.setState({\n                                authLinkManagerModalVisible: false,\n                            });\n                        }}\n                        handleCancelAuthLinkManager={this.handleCancelAddRole.bind(\n                            this,\n                        )}\n                    />\n                ) : (\n                    \"\"\n                )}\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    rowClassName=\"fixedHeight\"\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default RolesManager;\n","import React, { Component, Fragment } from \"react\";\nimport {\n    Layout,\n    Table,\n    Form,\n    Popconfirm,\n    Row,\n    Col,\n    Button,\n    Modal,\n    Input,\n    message,\n} from \"antd\";\nimport {\n    deleteAuthLink,\n    getPermissionsList,\n    postAddAuthLink,\n} from \"../../api/role\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass AuthLinkModal extends Component {\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Fragment>\n                <Modal\n                    title=\"新建权限链接\"\n                    destroyOnClose=\"true\"\n                    visible={this.props.authLinkModalVisible}\n                    onOk={this.props.handleAddAuthLink}\n                    onCancel={this.props.handleCancelAddAuthLink}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form ref={this.props.formRef}>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"权限名称\"\n                            name=\"name\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入路径权限名称\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入路径权限名称\" />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"权限描述\"\n                            name=\"description\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入权限描述\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入权限描述\" />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"权限URI路径\"\n                            name=\"path\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请输入权限URI路径\",\n                                },\n                            ]}\n                        >\n                            <Input placeholder=\"请输入权限URI路径\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        );\n    }\n}\n\nclass PermissionsManager extends Component {\n    constructor(props) {\n        super(props);\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.createAuthLink = this.createAuthLink.bind(this);\n        this.handleAddAuthLink = this.handleAddAuthLink.bind(this);\n        this.handleCancelAddAuthLink = this.handleCancelAddAuthLink.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"Id\",\n                    key: \"Id\",\n                    width: 60,\n                },\n                {\n                    title: \"权限名称\",\n                    dataIndex: \"name\",\n                    key: \"name\",\n                    width: 200,\n                },\n                {\n                    title: \"权限描述\",\n                    dataIndex: \"description\",\n                    key: \"description\",\n                    className: { columnStyle },\n                    width: 260,\n                },\n                {\n                    title: \"权限路径\",\n                    dataIndex: \"urlPath\",\n                    key: \"urlPath\",\n                    className: { columnStyle },\n                    width: 360,\n                },\n                {},\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    width: 60,\n                    align: \"center\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Popconfirm\n                                    title=\"确定删除该项内容吗?\"\n                                    onConfirm={this.confirmDeleteAuthLink.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            authLinkModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    confirmDeleteAuthLink = (e) => {\n        deleteAuthLink({\n            id: e.Id,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    };\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getPermissionsList(\n            this.state.pagination.page,\n            this.state.pagination.pageSize,\n        )\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"permissions\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        Id: data[i][\"Id\"],\n                        name: data[i][\"name\"],\n                        description: data[i][\"description\"],\n                        urlPath: data[i][\"urlPath\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    createAuthLink() {\n        this.setState({\n            authLinkModalVisible: true,\n        });\n    }\n\n    handleCancelAddAuthLink() {\n        this.setState({\n            authLinkModalVisible: false,\n        });\n    }\n\n    handleAddAuthLink() {\n        this.formRef.current.validateFields().then((values) => {\n            postAddAuthLink(values)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"创建成功\");\n                        this.setState({\n                            authLinkModalVisible: false,\n                        });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"权限管理\", \"链接权限\", \"权限链接列表\"]}\n                />\n                <div style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Row>\n                        <Col>\n                            <Button\n                                type=\"primary\"\n                                onClick={this.createAuthLink}\n                            >\n                                新建权限链接\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n                <AuthLinkModal\n                    formRef={this.formRef}\n                    authLinkModalVisible={this.state.authLinkModalVisible}\n                    handleAddAuthLink={this.handleAddAuthLink}\n                    handleCancelAddAuthLink={this.handleCancelAddAuthLink}\n                />\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default PermissionsManager;\n","import React, { Component } from 'react';\nimport {Layout, Input, Form, Button, message} from 'antd';\nimport {postUpdatePassword} from \"../../api/user\";\n\nconst { Content } = Layout;\n\n\nclass PasswordManager extends Component {\n\n    constructor(props) {\n        super(props);\n        this.setState({\n\n        });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('两次密码不一致!');\n        } else {\n            callback();\n        }\n    };\n\n    updatePassword = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let reqData = {\n                    \"password\": values['password'],\n                    \"confirm_password\": values['confirm_password']\n                };\n                postUpdatePassword(reqData).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"密码修改成功!\");\n                    }\n                }).catch((err)=>{\n                    console.log(err)\n                });\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 6 },\n        };\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Form onSubmit={this.updatePassword}>\n                    <Form.Item label=\"新密码\" hasFeedback {...formItemLayout}>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入新密码',\n                                }\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"确认密码\" hasFeedback {...formItemLayout}>\n                        {getFieldDecorator('confirm_password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请确认新密码',\n                                },\n                                {\n                                    validator: this.compareToFirstPassword\n                                }\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} style={{ textAlign: 'center' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            确 认\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n    \n}\n\nexport default PasswordManager;","import React, { Component } from \"react\";\nimport {Button, Card, Col, Layout, message, Row, Statistic} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getAliyunStatisData,\n    getSyncAliyunEcs,\n    getSyncAliyunKv,\n    getSyncAliyunRds,\n    getSyncAliyunSlb\n} from \"../../api/data_api\";\n\nconst { Content } = Layout;\n\nclass SyncAliyunContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.syncAliyunEcs = this.syncAliyunEcs.bind(this);\n        this.syncAliyunRds = this.syncAliyunRds.bind(this);\n        this.syncAliyunKv = this.syncAliyunKv.bind(this);\n        this.syncAliyunSlb = this.syncAliyunSlb.bind(this);\n        this.state = {\n            syncEcsLoading: false,\n            syncRdsLoading: false,\n            syncKvLoading: false,\n            syncSlbLoading: false,\n        }\n    }\n\n    componentDidMount() {\n        this.syncAliyunStatisData();\n    }\n\n    syncAliyunStatisData() {\n        getAliyunStatisData().then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    ecsCount: res.data.ecsCount,\n                    rdsCount: res.data.rdsCount,\n                    kvCount: res.data.kvCount,\n                    slbCount: res.data.slbCount,\n                })\n            } else {\n                message.error(\"获取钉钉统计数据异常\")\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        })\n    }\n\n    syncAliyunEcs() {\n        const loadingType = \"syncEcsLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunEcs().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunRds() {\n        const loadingType = \"syncRdsLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunRds().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunKv() {\n        const loadingType = \"syncKvLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunKv().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunSlb() {\n        const loadingType = \"syncSlbLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunSlb().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"数据管理\", \"阿里云数据\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Card size=\"small\" title=\"平台数据总览\">\n                        <Row>\n                            <Col span={5}>\n                                <Statistic title=\"ECS总数\" value={this.state.ecsCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncEcsLoading}\n                                        onClick={this.syncAliyunEcs}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"RDS总数\" value={this.state.rdsCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncRdsLoading}\n                                        onClick={this.syncAliyunRds}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"Redis总数\" value={this.state.kvCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncKvLoading}\n                                        onClick={this.syncAliyunKv}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"SLB总数\" value={this.state.slbCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncSlbLoading}\n                                        onClick={this.syncAliyunSlb}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Card>\n                </div>\n            </Content>\n        )\n    }\n\n}\n\nexport default SyncAliyunContent;","import req from \"../utils/axios\";\n\nconst SyncTimeOut = 90000;\n\nconst getSyncAliyunEcs = (params) =>{\n    return req.get('/data/syncAliyunEcs', params, SyncTimeOut)\n};\nexport {getSyncAliyunEcs}\n\nconst getSyncAliyunRds = (params) =>{\n    return req.get('/data/syncAliyunRds', params, SyncTimeOut)\n};\nexport {getSyncAliyunRds}\n\nconst getSyncAliyunKv = (params) =>{\n    return req.get('/data/syncAliyunKv', {}, SyncTimeOut)\n};\nexport {getSyncAliyunKv}\n\nconst getSyncAliyunSlb = (params) =>{\n    return req.get('/data/syncAliyunSlb', {}, SyncTimeOut)\n};\nexport {getSyncAliyunSlb}\n\nconst getAliyunStatisData = (params) =>{\n    return req.get('/data/syncAliyunStatisData')\n};\nexport {getAliyunStatisData}","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Input,\n    Row,\n    Table,\n    Layout,\n    DatePicker,\n    Select,\n    message,\n    Modal,\n    Form,\n    Typography,\n    Divider,\n    Popconfirm,\n    Tooltip,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudOtherRes,\n    getCloudAccouts,\n    getCloudOtherRes,\n    postCloudOtherRes,\n    putCloudOtherRes,\n} from \"../../api/cloud\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\n\nconst { Option } = Select;\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nclass OtherInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.switchChange = this.switchChange.bind(this);\n        this.state = {\n            sitesData: [],\n            renewSwitch: true,\n            cloudAccountList: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadCloudAccountData();\n    }\n\n    loadCloudAccountData() {\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    switchChange(value) {\n        this.setState({ renewSwitch: value });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item) => {\n            return (\n                <Option key={item.id} value={item.id}>\n                    {item.accountName}\n                </Option>\n            );\n        });\n        const { actionType } = this.props;\n        let actionName = \"新增\";\n        if (actionType === \"update\") {\n            actionName = \"编辑\";\n        }\n        return (\n            <Modal\n                title={actionName + \" - 资源信息\"}\n                destroyOnClose={true}\n                visible={this.props.server_info_modal_visible}\n                onOk={this.props.handlePostServerInfoSubmit}\n                onCancel={this.props.handlePostServerInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={1000}\n            >\n                <Form ref={this.props.formRef}>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"资源类型\"\n                                {...formItemLayout}\n                                name=\"resType\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请选择资源类型\",\n                                    },\n                                ]}\n                            >\n                                <Select>\n                                    <Option value=\"MongoDB\">MongoDB</Option>\n                                    <Option value=\"MaxCompute\">\n                                        MaxCompute\n                                    </Option>\n                                    <Option value=\"SSL\">SSL</Option>\n                                    <Option value=\"带宽\">带宽</Option>\n                                    <Option value=\"后付费\">后付费</Option>\n                                    <Option value=\"弹性IP\">弹性IP</Option>\n                                    <Option value=\"Memcached\">Memcached</Option>\n                                    <Option value=\"Kafka\">Kafka</Option>\n                                    <Option value=\"NAS\">NAS</Option>\n                                    <Option value=\"PolarDB\">PolarDB</Option>\n                                    <Option value=\"HBase\">HBase</Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"实例ID\"\n                                {...formItemLayout}\n                                name=\"instanceId\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"实例名称\"\n                                {...formItemLayout}\n                                name=\"instanceName\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请输入实例名称\",\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"连接地址\"\n                                {...formItemLayout}\n                                name=\"connections\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"区域\"\n                                {...formItemLayout}\n                                name=\"region\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"Engine\"\n                                {...formItemLayout}\n                                name=\"engine\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"CPU\"\n                                {...formItemLayout}\n                                name=\"cpu\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"磁盘\"\n                                {...formItemLayout}\n                                name=\"disk\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"内存\"\n                                {...formItemLayout}\n                                name=\"memory\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"带宽\"\n                                {...formItemLayout}\n                                name=\"bandwidth\"\n                            >\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"创建时间\"\n                                {...formItemLayout}\n                                name=\"createTime\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请输入创建时间\",\n                                    },\n                                ]}\n                            >\n                                <DatePicker\n                                    format=\"YYYY-MM-DD\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item\n                                label=\"过期时间\"\n                                {...formItemLayout}\n                                name=\"expiredTime\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"请输入过期时间\",\n                                    },\n                                ]}\n                            >\n                                <DatePicker\n                                    format=\"YYYY-MM-DD\"\n                                    style={{ width: \"100%\" }}\n                                />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item\n                                label=\"云账号\"\n                                {...formItemLayout}\n                                name=\"cloudAccountId\"\n                            >\n                                <Select>{accountOptions}</Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        );\n    }\n}\n\nclass OtherContent extends Component {\n    constructor(props) {\n        super(props);\n        this.keywordOnChange = this.keywordOnChange.bind(this);\n        this.handleQuery = this.handleQuery.bind(this);\n        this.handlePostOtherInfoSubmit = this.handlePostOtherInfoSubmit.bind(\n            this,\n        );\n        this.handlePostOtherInfoCancel = this.handlePostOtherInfoCancel.bind(\n            this,\n        );\n        this.changePage = this.changePage.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleResTypeChange = this.handleResTypeChange.bind(this);\n        this.handleCloudAccountChange = this.handleCloudAccountChange.bind(\n            this,\n        );\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"资源类型\",\n                    dataIndex: \"ResType\",\n                    key: \"ResType\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true}>{value}</Text>\n                            </Tooltip>\n                        );\n                    },\n                },\n                {\n                    title: \"云账号\",\n                    dataIndex: \"CloudAccountName\",\n                    key: \"CloudAccountName\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"实例id\",\n                    dataIndex: \"InstanceId\",\n                    key: \"InstanceId\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"访问地址\",\n                    dataIndex: \"Connections\",\n                    key: \"Connections\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return (\n                            <Paragraph\n                                style={{ marginBottom: 0 }}\n                                copyable={value !== \"\"}\n                            >\n                                {value}\n                            </Paragraph>\n                        );\n                    },\n                },\n                {\n                    title: \"Region\",\n                    dataIndex: \"Region\",\n                    key: \"Region\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"Engine\",\n                    dataIndex: \"Engine\",\n                    key: \"Engine\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"Cpu\",\n                    dataIndex: \"Cpu\",\n                    key: \"Cpu\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"带宽\",\n                    dataIndex: \"Bandwidth\",\n                    key: \"Bandwidth\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"CreateTime\",\n                    key: \"CreateTime\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ExpiredTime\",\n                    key: \"ExpiredTime\",\n                    className: \"small_font\",\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    className: \"small_font\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.serverEdit.bind(this, record)}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.serverDelete.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            actionType: \"add\",\n            editId: 0,\n            extraInfoModalVisible: false,\n            other_info_modal_visible: false,\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            cloudAccountList: [],\n            queryResType: \"所有\",\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        };\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100)\n            .then((res) => {\n                if (res.code === 0) {\n                    that.setState({\n                        cloudAccountList: res.data.accounts,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            queryKeyword: this.state.queryKeyword,\n            queryResType: this.state.queryResType,\n            queryExpiredTime:\n                this.state.queryExpiredTime === null\n                    ? null\n                    : this.state.queryExpiredTime.format(\"YYYY-MM-DD HH:mm:ss\"),\n            queryCloudAccount: this.state.queryCloudAccount,\n        };\n        getCloudOtherRes(queryParams)\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination: { ...pagination },\n                });\n                let data = res[\"data\"][\"otherRes\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        key: data[i][\"ID\"],\n                        ID: data[i][\"ID\"],\n                        CloudAccountId: data[i][\"CloudAccountId\"],\n                        CloudAccountName: data[i][\"CloudAccountName\"],\n                        ResType: data[i][\"ResType\"],\n                        InstanceId: data[i][\"InstanceId\"],\n                        InstanceName: data[i][\"InstanceName\"],\n                        Connections: data[i][\"Connections\"],\n                        Region: data[i][\"Region\"],\n                        Engine: data[i][\"Engine\"],\n                        Cpu: data[i][\"Cpu\"],\n                        Bandwidth: data[i][\"Bandwidth\"],\n                        RenewStatus: data[i][\"RenewStatus\"],\n                        RenewSiteId: data[i][\"RenewSiteId\"],\n                        BankAccount: data[i][\"BankAccount\"],\n                        CreateTime: moment(data[i][\"CreateTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                        ExpiredTime: moment(data[i][\"ExpiredTime\"]).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                message.error(err);\n            });\n    };\n\n    handleAdd() {\n        this.setState({\n            other_info_modal_visible: true,\n            actionType: \"add\",\n            editId: 0,\n        });\n    }\n\n    handleQuery() {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    onExpiredDateChange = (moment) => {\n        if (moment == null) {\n            this.setState({ queryExpiredTime: null });\n        } else {\n            this.setState({ queryExpiredTime: moment });\n        }\n    };\n\n    keywordOnChange(e) {\n        this.setState({ queryKeyword: e.target.value });\n    }\n\n    handleResTypeChange(value) {\n        this.setState({ queryResType: value });\n    }\n\n    handleCloudAccountChange(value) {\n        this.setState({ queryCloudAccount: value });\n    }\n\n    handleManageUserChange = (queryManageUser) => {\n        this.setState({ queryManageUser });\n    };\n\n    serverEdit(data) {\n        const that = this;\n        this.setState(\n            {\n                other_info_modal_visible: true,\n                editId: data.ID,\n                actionType: \"update\",\n                updateMode: \"single\",\n            },\n            () => {\n                setTimeout(() => {\n                    that.formRef.current.setFieldsValue({\n                        cloudAccountId:\n                            data.CloudAccountId !== 0\n                                ? data.CloudAccountId\n                                : null,\n                        resType: data.ResType,\n                        instanceId: data.InstanceId,\n                        instanceName: data.InstanceName,\n                        connections: data.Connections,\n                        region: data.Region,\n                        engine: data.Engine,\n                        cpu: data.Cpu,\n                        bandwidth: data.Bandwidth,\n                        createTime:\n                            data.CreateTime !== \"\"\n                                ? moment(data.CreateTime, \"YYYY-MM-DD\")\n                                : undefined,\n                        expiredTime:\n                            data.ExpiredTime !== \"\"\n                                ? moment(data.ExpiredTime, \"YYYY-MM-DD\")\n                                : undefined,\n                    });\n                }, 500);\n            },\n        );\n    }\n\n    serverDelete(data) {\n        deleteCloudOtherRes(data.ID)\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"删除成功\");\n                    this.refreshTableData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handlePostOtherInfoSubmit() {\n        this.formRef.current.validateFields().then((values) => {\n            postCloudOtherRes({\n                ...values,\n                id: this.state.editId,\n                createTime: values.createTime.format(\"YYYY-MM-DD\"),\n                expiredTime:\n                    values.expiredTime === undefined\n                        ? undefined\n                        : values.expiredTime.format(\"YYYY-MM-DD\"),\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        if (this.state.actionType === \"add\") {\n                            message.success(\n                                \"添加成功，请到权限管理中增加访问权限！\",\n                            );\n                        } else {\n                            message.success(\"编辑成功\");\n                        }\n                        this.setState({ other_info_modal_visible: false });\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handlePostOtherInfoCancel() {\n        this.setState({ other_info_modal_visible: false });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if (this.state.updateMode === \"single\") {\n            targetId = String(this.state.editId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudOtherRes({\n            ...data,\n            id: targetId,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"修改成功\");\n                    this.setState({\n                        extraInfoModalVisible: false,\n                        selectedRowKeys: [],\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({ extraInfoModalVisible: false });\n    }\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if (idList.length === 0) {\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({\n            extraInfoModalVisible: true,\n            updateMode: \"batch\",\n            idsList: idList,\n        });\n    };\n\n    onSelectChange = (selectedRowKeys) => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath\n                    pathData={[\"云资源\", \"其它资源\", \"其它资源汇总列表\"]}\n                />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={4} className=\"col-span\">\n                        <DatePicker\n                            style={{ width: \"100%\" }}\n                            defaultValue={this.state.queryExpiredTime}\n                            placeholder=\"到期截止时间\"\n                            onChange={this.onExpiredDateChange}\n                        />\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Input\n                            placeholder=\"输入实例id/名称/地址查询\"\n                            value={this.state.queryKeyword}\n                            onChange={this.keywordOnChange}\n                        />\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            defaultValue={this.state.queryResType}\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleResTypeChange}\n                        >\n                            <Option value=\"所有\">所有</Option>\n                            <Option value=\"MongoDB\">MongoDB</Option>\n                            <Option value=\"MaxCompute\">MaxCompute</Option>\n                            <Option value=\"SSL\">SSL</Option>\n                            <Option value=\"带宽\">带宽</Option>\n                            <Option value=\"后付费\">后付费</Option>\n                            <Option value=\"弹性IP\">弹性IP</Option>\n                            <Option value=\"Memcached\">Memcached</Option>\n                            <Option value=\"Kafka\">Kafka</Option>\n                            <Option value=\"NAS\">NAS</Option>\n                            <Option value=\"PolarDB\">PolarDB</Option>\n                            <Option value=\"HBase\">HBase</Option>\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAdd}\n                        >\n                            新 增\n                        </Button>\n                    </Col>\n                </Row>\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    wrappedComponentRef={(form) =>\n                        (this.extraInfoFormRef = form)\n                    }\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <OtherInfoModal\n                    formRef={this.formRef}\n                    server_info_modal_visible={\n                        this.state.other_info_modal_visible\n                    }\n                    actionType={this.state.actionType}\n                    handlePostServerInfoSubmit={this.handlePostOtherInfoSubmit}\n                    handlePostServerInfoCancel={this.handlePostOtherInfoCancel}\n                />\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default OtherContent;\n","import req from \"../utils/axios\";\n\nconst getSettingsValue = (params) =>{\n    return req.get('settings/value', params)\n};\nexport {getSettingsValue}\n\nconst putSettingsValue = (data) => {\n    return req.put('settings/value', data)\n};\nexport {putSettingsValue}\n","import React, { Component } from 'react';\nimport {Card, Layout, Switch, message, Modal, Col, Row, DatePicker, Alert} from \"antd\";\nimport {getSettingsValue, putSettingsValue} from \"../../api/settings_api\";\n\nconst { Content } = Layout;\nconst { RangePicker } = DatePicker;\n\n\nclass SettingsContent extends Component {\n\n    constructor(props){\n        super(props);\n        this.onChangeAllowRenewConfirm = this.onChangeAllowRenewConfirm.bind(this);\n        this.dateOnChange = this.dateOnChange.bind(this);\n        this.handleSetExpireDateSubmit = this.handleSetExpireDateSubmit.bind(this);\n        this.handleSetExpireDateCancel = this.handleSetExpireDateCancel.bind(this);\n        this.state = {\n            expireSettingModalVisible: false,\n            isOpenRenewConfirm: false,\n            expireStartDate: null,\n            expireEndDate: null,\n        }\n    }\n\n    componentWillMount() {\n        this.loadAllowRenewConfirmStatus();\n    }\n\n    loadAllowRenewConfirmStatus() {\n        getSettingsValue({key_name: \"open_renew_confirm\"}).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    isOpenRenewConfirm: res.data[\"value\"]===\"true\"\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    onChangeAllowRenewConfirm(data) {\n        this.setState({isOpenRenewConfirm: data});\n        if(data===true) {\n            this.setState({expireSettingModalVisible: true})\n        } else {\n            putSettingsValue({\n                key_name: \"open_renew_confirm\",\n                value: data.toLocaleString(),\n            }).then((res)=>{\n                if(res.code===0){\n                    message.success(\"设置成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            });\n        }\n    }\n\n    dateOnChange(date, dateString) {\n        this.setState({\n            expireStartDate: dateString[0],\n            expireEndDate: dateString[1],\n        })\n    };\n\n    handleSetExpireDateSubmit() {\n        putSettingsValue({\n            key_name: \"open_renew_confirm\",\n            value: this.state.isOpenRenewConfirm.toLocaleString(),\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"设置成功\");\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n        putSettingsValue({\n            key_name: \"expire_start_date\",\n            value: this.state.expireStartDate,\n        }).then((res)=>{\n            if(res.code!==0){\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n        putSettingsValue({\n            key_name: \"expire_end_date\",\n            value: this.state.expireEndDate,\n        }).then((res)=>{\n            if(res.code!==0){\n                message.error(res.msg);\n            } else {\n                this.setState({expireSettingModalVisible: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleSetExpireDateCancel() {\n        this.setState({expireSettingModalVisible: false});\n    }\n\n    render() {\n        return (\n            <Content style={{\n            background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Modal\n                    title=\"设置过期确认时间区间\"\n                    destroyOnClose={true}\n                    visible={this.state.expireSettingModalVisible}\n                    onOk={this.handleSetExpireDateSubmit}\n                    onCancel={this.handleSetExpireDateCancel}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                    width={700}\n                >\n                    <Alert message=\"负责人只可确认该时间段内过期的资源\" banner />\n\n                    <Row style={{ marginTop: 30, marginBottom: 30 }}>\n                        <Col span={4}/>\n                        <Col span={3} style={{textAlign: \"right\"}}>\n                            <label style={{fontSize:14, lineHeight: \"32px\", marginRight: 10, fontWeight: 500}}>过期时间: </label>\n                        </Col>\n                        <Col span={13}>\n                            <RangePicker\n                                style={{width: \"100%\"}}\n                                onChange={this.dateOnChange}\n                                format=\"YYYY-MM-DD\"\n                            />\n                        </Col>\n                        <Col span={4}>\n                        </Col>\n                    </Row>\n                </Modal>\n                <Card style={{ width: 200, textAlign: \"center\" }}>\n                    <Switch checked={this.state.isOpenRenewConfirm} onChange={this.onChangeAllowRenewConfirm} />\n                    <p style={{paddingTop: 20, fontWeight: 500}}>是否开启续费确认窗口</p>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\nexport default SettingsContent;","import React, {Component} from 'react';\nclass LogoutContent extends Component {\n    componentWillMount() {\n        localStorage.removeItem(\"ops_token\");\n        localStorage.removeItem(\"token_info\");\n        window.location.href = \"/login\";\n    }\n\n    render() {\n        return (\n            <div>\n                注销中...\n            </div>\n        )\n    }\n\n}\n\nexport default LogoutContent;","import req from \"../utils/axios\";\n\nconst getUserFeedbackList = (page, size) =>{\n    return req.get('user/feedback', {page, size})\n};\nexport {getUserFeedbackList}","import React, { Component } from \"react\";\nimport { Layout, Table, Button, Row, Col } from \"antd\";\nimport { getUserFeedbackList } from \"../../api/system\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\n\nlet columnStyle = {\n    overFlow: \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass UserFeedbackManager extends Component {\n    constructor(props) {\n        super(props);\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"id\",\n                    key: \"id\",\n                    width: 30,\n                    className: \"small_font\",\n                },\n                {\n                    title: \"用户\",\n                    dataIndex: \"username\",\n                    key: \"username\",\n                    className: \"small_font\",\n                },\n                {\n                    title: \"内容\",\n                    dataIndex: \"content\",\n                    key: \"content\",\n                    className: \"small_font \" + { columnStyle },\n                },\n                {\n                    title: \"评分\",\n                    dataIndex: \"score\",\n                    key: \"score\",\n                    className: \"small_font \" + { columnStyle },\n                },\n                {\n                    title: \"创建时间\",\n                    dataIndex: \"createTime\",\n                    key: \"createTime\",\n                    className: \"small_font \" + { columnStyle },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            authLinkModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n        };\n    }\n\n    onShowSizeChange(current, size) {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                    pageSize: size,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    }\n\n    changePage = (e) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: e,\n                    current: e,\n                },\n            },\n            () => {\n                this.refreshTableData();\n            },\n        );\n    };\n\n    refreshTableData = () => {\n        this.setState({ tableLoading: true });\n        getUserFeedbackList(\n            this.state.pagination.page,\n            this.state.pagination.pageSize,\n        )\n            .then((res) => {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination,\n                });\n                let data = res[\"data\"][\"feedbacks\"];\n                let tableData = [];\n                for (let i = 0; i < data.length; i++) {\n                    tableData.push({\n                        id: data[i][\"id\"],\n                        createTime: data[i][\"createTime\"],\n                        username: data[i][\"username\"],\n                        content: data[i][\"content\"],\n                        score: data[i][\"score\"],\n                    });\n                }\n                this.setState({ tableData: tableData, tableLoading: false });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"系统管理\", \"用户反馈\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Row>\n                        <Col span={3}>\n                            <Button\n                                type=\"primary\"\n                                onClick={this.refreshTableData}\n                            >\n                                刷 新\n                            </Button>\n                        </Col>\n                    </Row>\n                </div>\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    rowClassName=\"fixedHeight\"\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default UserFeedbackManager;\n","import React, {Component} from 'react';\nimport {Card, Layout, Row, message, Button} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {getJenkinsAllJobs} from \"../../api/jenkins\";\n\n\nconst {Content} = Layout;\n\nclass JenkinsJobsContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.jumpJobDetail = this.jumpJobDetail.bind(this);\n        this.state = {\n            jobs: [],\n        }\n    }\n\n    componentDidMount() {\n        this.loadJenkinsAllJobs();\n    }\n\n    loadJenkinsAllJobs() {\n        getJenkinsAllJobs().then((res)=>{\n            if(res.code===0){\n                this.setState({jobs: res.data});\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    jumpJobDetail(jobName) {\n        this.props.history.push({pathname: \"/admin/cicd/job_detail\", state: {\"jobName\": jobName}});\n    }\n\n    render() {\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <OpsBreadcrumbPath pathData={[\"CI & CD\", \"任务列表\"]} />\n                <Row>\n                    <Card title=\"当前任务\" size=\"small\">\n                        {\n                            this.state.jobs.map((item, index)=> {\n                                return (\n                                    <Card.Grid key={index} style={{ width: '25%', textAlign: 'center' }}>\n                                        <Button type=\"link\" onClick={this.jumpJobDetail.bind(this, item.name)}>{item.name}</Button>\n                                    </Card.Grid>\n                                )\n                            })\n                        }\n                    </Card>\n                </Row>\n            </Content>\n        )\n    }\n}\n\nexport default JenkinsJobsContent;","import req from '../utils/axios';\n\nconst getJenkinsAllJobs = (params) =>{\n    return req.get('jenkins/jobs', params)\n};\nexport {getJenkinsAllJobs}\n\nconst getJenkinsJobBuildList = (params) =>{\n    return req.get('jenkins/jobBuildList', params)\n};\nexport {getJenkinsJobBuildList}\n\nconst getJenkinsJobLastBuildLog = (params) =>{\n    return req.get('jenkins/jobLastBuildLog', params)\n};\nexport {getJenkinsJobLastBuildLog}\n\nconst getJenkinsJobBuildLog = (params) =>{\n    return req.get('jenkins/jobBuildLog', params)\n};\nexport {getJenkinsJobBuildLog}\n\nconst postJenkinsStartJob = (params) =>{\n    return req.post('jenkins/jobBuild', params)\n};\nexport {postJenkinsStartJob}\n\nconst postJenkinsEnableJob = (params) =>{\n    return req.post('jenkins/enableJob', params)\n};\nexport {postJenkinsEnableJob}\n\nconst postJenkinsDisableJob = (params) =>{\n    return req.post('jenkins/disableJob', params)\n};\nexport {postJenkinsDisableJob}","import React, {Component} from 'react';\nimport {Layout, message, Descriptions, List, Tag, Typography, Button, Drawer, Icon, Row, Col} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getJenkinsJobBuildList,\n    getJenkinsJobBuildLog, postJenkinsDisableJob, postJenkinsEnableJob,\n    postJenkinsStartJob\n} from \"../../api/jenkins\";\nimport moment from \"moment\";\nimport Spin from \"antd/es/spin\";\n\n\nconst {Content} = Layout;\nconst { Text } = Typography;\n\nclass Jenkins_job_detail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onDrawerClose = this.onDrawerClose.bind(this);\n        this.startBuildJob = this.startBuildJob.bind(this);\n        this.refreshJobInfo = this.refreshJobInfo.bind(this);\n        this.disableJob = this.disableJob.bind(this);\n        this.enableJob = this.enableJob.bind(this);\n        this.loadJenkinsJobBuildList = this.loadJenkinsJobBuildList.bind(this);\n        this.state = {\n            buildInfo: [],\n            buildConsoleLog: '',\n            logLoading: false,\n            jobBuilding: false,\n            refreshInfoLoading: false,\n            buildLog: [],\n            start: 0,\n            timer: null,\n            progressLoading: 'none',\n            nextBuildNumber: 0,\n        }\n    }\n\n    componentDidMount() {\n        this.loadJenkinsJobBuildList({\"name\": this.props.location.state.jobName});\n        this.setState({\n            \"buildName\": this.props.location.state.jobName\n        })\n    }\n\n    loadJenkinsJobBuildList(params) {\n        this.setState({refreshInfoLoading: true});\n        getJenkinsJobBuildList(params).then((res)=>{\n            if(res.code===0){\n                let buildLog = [];\n                if(res.data[\"buildLog\"]!==undefined && res.data[\"buildLog\"]!==null){\n                    buildLog = res.data[\"buildLog\"];\n                }\n                this.setState({\n                    buildInfo: res.data,\n                    buildLog: buildLog,\n                    nextBuildNumber: parseInt(res.data[\"nextBuildNumber\"]),\n                });\n            } else {\n                message.error(res.msg);\n            }\n            this.setState({refreshInfoLoading: false});\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refreshJobInfo() {\n        this.loadJenkinsJobBuildList({\"name\": this.props.location.state.jobName});\n    }\n\n    onDrawerClose() {\n        this.setState({\n            drawerVisible: false,\n            progressLoading: 'none',\n            buildConsoleLog: '',\n            start: 0,\n        });\n        clearTimeout(this.timer);\n        this.timer = null;\n        this.refreshJobInfo();\n    }\n\n    showBuildConsoleLog(buildId) {\n        this.setState({drawerVisible: true, logLoading: true, jobBuilding: true});\n        getJenkinsJobBuildLog({\n            \"name\": this.state.buildName,\n            \"buildId\": buildId,\n            \"start\": parseInt(this.state.start),\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    buildConsoleLog: this.state.buildConsoleLog + res.data[\"content\"],\n                    logLoading: false,\n                    jobBuilding: false,\n                    start: res.data[\"start\"],\n                });\n                if(res.data[\"hasMore\"]===\"true\") {\n                    this.setState({progressLoading: 'inline-block'});\n                    this.timer = setTimeout(() => {\n                        this.showBuildConsoleLog(buildId)\n                    }, 2000);\n                } else {\n                    this.setState({progressLoading: 'none'});\n                    clearTimeout(this.timer);\n                    this.timer = null;\n                    this.refreshJobInfo();\n                }\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    startBuildJob() {\n        this.setState({jobBuilding: true});\n        postJenkinsStartJob({\n            \"name\": this.state.buildName,\n        }).then((res)=>{\n            if(res.code===0){\n                setTimeout(()=>{\n                    this.setState({jobBuilding: false});\n                    this.refreshJobInfo();\n                }, 4000);\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    disableJob() {\n        postJenkinsDisableJob({\"name\": this.state.buildName}).then((res)=>{\n            if(res.code===0){\n                message.success(\"禁用成功\");\n                this.refreshJobInfo();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    enableJob() {\n        postJenkinsEnableJob({\"name\": this.state.buildName}).then((res)=>{\n            if(res.code===0){\n                message.success(\"启用成功\");\n                this.refreshJobInfo();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        let titleContent = (\n            <div>\n                构建日志\n                <Icon type=\"loading\" style={{marginLeft: '20px', display: this.state.progressLoading}}/>\n            </div>\n        );\n        let ableBuild = true;\n        let ableContent = (\n            <Button size=\"small\" onClick={this.disableJob} style={{ marginLeft: '20px' }}>\n                禁 用\n            </Button>\n        );\n        if(this.state.buildInfo[\"buildable\"]===false){\n            ableBuild = false;\n            ableContent = (\n                <Button size=\"small\" onClick={this.enableJob} style={{ marginLeft: '20px' }}>\n                    启 用\n                </Button>\n            );\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <OpsBreadcrumbPath pathData={[\"CI & CD\", \"任务详情\"]} />\n                <Row  style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={2}>\n                        <Button type=\"primary\" onClick={this.refreshJobInfo}>刷 新</Button>\n                    </Col>\n                </Row>\n\n                <Spin spinning={this.state.refreshInfoLoading}>\n                    <Descriptions bordered size=\"small\" column={2}>\n                        <Descriptions.Item label=\"任务名\">{this.state.buildInfo.displayName}</Descriptions.Item>\n                        <Descriptions.Item label=\"任务描述\">{this.state.buildInfo.description}</Descriptions.Item>\n                        <Descriptions.Item label=\"任务操作\">\n                            <Button size=\"small\" disabled={!ableBuild} loading={this.state.jobBuilding} onClick={this.startBuildJob}>\n                                构建\n                            </Button>\n                            { ableContent }\n                        </Descriptions.Item>\n                    </Descriptions>\n                </Spin>\n\n                <Drawer\n                    title={titleContent}\n                    placement=\"left\"\n                    closable={false}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.drawerVisible}\n                    width={700}\n                >\n                    <Spin spinning={this.state.logLoading}>\n                    <Text style={{whiteSpace: 'pre'}}>{this.state.buildConsoleLog}</Text>\n                    </Spin>\n                </Drawer>\n\n                <List\n                    header={<div>近5次构建状态</div>}\n                    footer={null}\n                    bordered\n                    dataSource={this.state.buildLog}\n                    style={{ marginTop: '10px', width: '50%' }}\n                    renderItem={item => {\n                            let data = JSON.parse(item);\n                            let buildTag = <Tag color=\"#2db7f5\">构建中</Tag>;\n                            if(data.result!==undefined && data.result !== null) {\n                                if(data.result===\"SUCCESS\") {\n                                    buildTag = <Tag color=\"#108ee9\">成 功</Tag>;\n                                } else if(data.result===\"FAILURE\") {\n                                    buildTag = <Tag color=\"#f50\">失 败</Tag>;\n                                } else if(data.result===\"ABORTED\") {\n                                    buildTag = <Tag color=\"#f50\">中 止</Tag>;\n                                } else {\n                                    buildTag = <Tag color=\"magenta\">{data.result}</Tag>;\n                                }\n                            }\n\n                            let timeTag = <Text type=\"secondary\">{moment(data.timestamp).format(\"MM-DD HH:mm:ss\")}</Text>;\n                            let actionContent = (\n                                <div style={{ display: 'inline-block', float: 'right' }}>\n                                    <Button type=\"link\" size=\"small\" onClick={this.showBuildConsoleLog.bind(this, data.id)}>构建日志</Button>\n                                </div>\n                            );\n                            return (\n                                <List.Item>\n                                    {buildTag} - {data.fullDisplayName} - {timeTag}\n                                    {actionContent}\n                                </List.Item>\n                            )\n                        }\n                    }\n                />\n            </Content>\n        )\n    }\n}\n\nexport default Jenkins_job_detail;","import React, {Component} from 'react';\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport JenkinsJobsContent from \"./jenkins_jobs\";\nimport Jenkins_job_detail from \"./jenkins_job_detail\";\n\n\nconst {Content} = Layout;\n\nclass JenkinsContent extends Component {\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 0, margin: 0, height: \"100%\",\n            }}>\n                <Switch>\n                    <Route path=\"/admin/cicd/jobs\" component={JenkinsJobsContent} />\n                    <Route path=\"/admin/cicd/job_detail\" component={Jenkins_job_detail} />\n                </Switch>\n            </Content>\n        )\n    }\n}\n\nexport default JenkinsContent;","import req from \"../utils/axios\";\n\nconst getNodes = (params) => {\n    return req.get(\"/kubernetes/nodes\", params);\n};\nexport { getNodes };\n\nconst getNamespaces = (params) => {\n    return req.get(\"/kubernetes/namespaces\", params);\n};\nexport { getNamespaces };\n\nconst getDeployments = (params) => {\n    return req.get(\"/kubernetes/deployments\", params);\n};\nexport { getDeployments };\n\nconst getReplicationControllers = (params) => {\n    return req.get(\"/kubernetes/replication_controllers\", params);\n};\nexport { getReplicationControllers };\n\nconst getReplicaSets = (params) => {\n    return req.get(\"/kubernetes/replica_sets\", params);\n};\nexport { getReplicaSets };\n\nconst getServices = (params) => {\n    return req.get(\"/kubernetes/services\", params);\n};\nexport { getServices };\n\nconst getIngresses = (params) => {\n    return req.get(\"/kubernetes/ingress\", params);\n};\nexport { getIngresses };\n\nconst getPods = (params) => {\n    return req.get(\"/kubernetes/pods\", params);\n};\nexport { getPods };\n\nconst getPodLogs = (params) => {\n    return req.get(\"/kubernetes/pod/log\", params);\n};\nexport { getPodLogs };\n\nconst postApplyYaml = (data) => {\n    return req.post(\"/kubernetes/yaml_resource\", data);\n};\nexport { postApplyYaml };\n\nconst getResourceYaml = (params) => {\n    return req.get(\"/kubernetes/yaml\", params);\n};\nexport { getResourceYaml };\n\nconst putResourceScale = (data) => {\n    return req.put(\"/kubernetes/scale\", data);\n};\nexport { putResourceScale };\n\nconst deleteResource = (data) => {\n    return req.delete(\"/kubernetes/resource\", data);\n};\nexport { deleteResource };\n\nconst getConfigDict = (params) => {\n    return req.get(\"/kubernetes/config_dict\", params);\n};\nexport { getConfigDict };\n\nconst getSecretDict = (params) => {\n    return req.get(\"/kubernetes/secret_dict\", params);\n};\nexport { getSecretDict };\n\nconst deleteConfigMap = (data) => {\n    return req.delete(\"/kubernetes/config_map\", data);\n};\nexport { deleteConfigMap };\n\nconst deleteSecret = (data) => {\n    return req.delete(\"/kubernetes/secret\", data);\n};\nexport { deleteSecret };\n\nconst getClusterData = (params) => {\n    return req.get(\"/kubernetes/cluster\", params);\n};\nexport { getClusterData };\n\nconst postCluster = (data) => {\n    return req.post(\"/kubernetes/cluster\", data);\n};\nexport { postCluster };\n\nconst deleteCluster = (data) => {\n    return req.delete(\"/kubernetes/cluster\", data);\n};\nexport { deleteCluster };\n\nconst getNodeMetrics = (params) => {\n    return req.get(\"/kubernetes/metrics/node\", params);\n};\nexport { getNodeMetrics };\n\nconst getPodMetrics = (params) => {\n    return req.get(\"/kubernetes/metrics/pod\", params);\n};\nexport { getPodMetrics };\n","const K8sTemplate = {\n    \"rc\": `apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: redis-rc\nspec:\n  replicas: 1\n  selector:\n    app: redis\n  template:\n    metadata:\n      name: redis\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - containerPort: 6379`,\n\n    \"rs\": `apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: redis-rs\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - containerPort: 6379`,\n\n    \"deployment\": `apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80`,\n\n    \"statefull_rs\": `kind: StatefulSet\nmetadata:\n  name: web\nspec:\n  selector:\n    matchLabels:\n      app: nginx # has to match .spec.template.metadata.labels\n  serviceName: \"nginx\"\n  replicas: 3 # by default is 1\n  template:\n    metadata:\n      labels:\n        app: nginx # has to match .spec.selector.matchLabels\n    spec:\n      terminationGracePeriodSeconds: 10\n      containers:\n      - name: nginx\n        image: k8s.gcr.io/nginx-slim:0.8\n        ports:\n        - containerPort: 80\n          name: web\n        volumeMounts:\n        - name: www\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: www\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"my-storage-class\"\n      resources:\n        requests:\n          storage: 1Gi`,\n\n    \"daemon_set\": `apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd-elasticsearch\n  namespace: kube-system\n  labels:\n    k8s-app: fluentd-logging\nspec:\n  selector:\n    matchLabels:\n      name: fluentd-elasticsearch\n  template:\n    metadata:\n      labels:\n        name: fluentd-elasticsearch\n    spec:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n      containers:\n      - name: fluentd-elasticsearch\n        image: gcr.io/fluentd-elasticsearch/fluentd:v2.5.1\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        volumeMounts:\n        - name: varlog\n          mountPath: /var/log\n        - name: varlibdockercontainers\n          mountPath: /var/lib/docker/containers\n          readOnly: true\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - name: varlog\n        hostPath:\n          path: /var/log\n      - name: varlibdockercontainers\n        hostPath:\n          path: /var/lib/docker/containers`,\n    \n    \"service\": `apiVersion: v1\nkind: Service\nmetadata:\n  name: redis\nspec:\n  type: NodePort\n  ports:\n   - port: 6379\n     nodePort: 30003\n  selector:\n    app: redis`,\n\n    \"config_map\": `apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: example-config\ndata:\n  example.property.1: hello`,\n\n    \"secret_map\": `apiVersion: v1\nkind: Secret\nmetadata:\n  name: example-config\ntype: Opaque\nstringData:\n  example.property.1: \"test\"`,\n\n};\n\n\nexport default K8sTemplate;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass RcDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rcDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rcDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rcDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rcDetail.data.spec.selector){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rcDetail.data.spec.selector[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rcDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Replication Controller 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rcDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rcDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rcDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rcDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rcDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default RcDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass ServiceDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.serviceDetail.data.metadata.labels) {\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.serviceDetail.data.spec.selector) {\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.spec.selector[key]}\n            </Tag></div>)\n        }\n        let portsList = [];\n        let ports = this.state.serviceDetail.data.spec.ports;\n        for(let i=0; i<ports.length; i++){\n            let portContent = \"\";\n            if(ports[i].hasOwnProperty(\"port\")){\n                portContent += ports[i][\"port\"]+\"(port) \";\n            }\n            if(ports[i].hasOwnProperty(\"targetPort\")){\n                portContent += ports[i][\"targetPort\"]+\"(targetPort) \";\n            }\n            if(ports[i].hasOwnProperty(\"nodePort\")){\n                portContent += ports[i][\"nodePort\"]+\"(nodePort) \";\n            }\n            portsList.push(<Tag color=\"geekblue\">\n                {ports[i][\"protocol\"] + \": \" +portContent}\n             </Tag>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Service 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.serviceDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.serviceDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.serviceDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"clusterIP\">{this.state.serviceDetail.data.spec.clusterIP}</Descriptions.Item>\n                        <Descriptions.Item label=\"类型\">{this.state.serviceDetail.data.spec.type}</Descriptions.Item>\n                        <Descriptions.Item label=\"sessionAffinity\">{this.state.serviceDetail.data.spec.sessionAffinity}</Descriptions.Item>\n                        <Descriptions.Item label=\"端口\">{portsList}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择标签\">{selectors}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default ServiceDetailContent;","import React, { Component } from \"react\";\nimport { Area } from \"@antv/g2plot\";\n\nclass AreaChart extends Component {\n    constructor(props) {\n        super(props);\n        this.id = this.uuid();\n    }\n\n    uuid() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n            c,\n        ) {\n            var r = (Math.random() * 16) | 0,\n                v = c === \"x\" ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n\n    componentDidMount() {\n        let id = this.id;\n        let data = this.props.data;\n        let xField = this.props.xField ? this.props.xField : \"date\";\n        let yField = this.props.yField ? this.props.yField : \"value\";\n        setTimeout(() => {\n            this.area = new Area(id, {\n                data,\n                width: this.props.width,\n                height: this.props.height,\n                xField: xField,\n                yField: yField,\n                padding: \"auto\",\n                isStack: false,\n                yAxis: {\n                    label: {\n                        formatter: (v) => {\n                            return v + \" \" + this.props.unit;\n                        },\n                        style: {\n                            fill: \"#FE740C\",\n                        },\n                    },\n                },\n            });\n            this.area.render();\n        }, 300);\n    }\n\n    componentDidUpdate() {\n        this.area.changeData(this.props.data);\n    }\n\n    render() {\n        return (\n            <div\n                id={this.id}\n                style={{ height: this.props.height, width: this.props.width }}\n            ></div>\n        );\n    }\n}\n\nexport default AreaChart;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Card,\n    Descriptions,\n    Layout,\n    Tag,\n    message,\n    List,\n    Typography,\n    Row,\n    Col,\n    Tabs,\n} from \"antd\";\nimport AreaChart from \"../cloud_resource/common/area_chart.js\";\nimport { getPodMetrics } from \"../../api/kubernetes\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\nimport { K8sContainerIconSvg } from \"../../assets/Icons\";\n\nconst { Text } = Typography;\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nclass PodDetailContent extends Component {\n    constructor(props) {\n        super(props);\n        this.loadPodLog = this.loadPodLog.bind(this);\n        this.handleCancelLogModal = this.handleCancelLogModal.bind(this);\n        this.openWebTerminal = this.openWebTerminal.bind(this);\n        this.state = {\n            serviceDetail: this.props.location.state,\n            memoryChartData: [],\n            cpuChartData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.refreshPodCpuMetrics();\n        this.refreshPodMemoryMetrics();\n    }\n\n    refreshPodCpuMetrics() {\n        getPodMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"cpu\",\n            namespace: this.props.location.state.data.metadata.namespace,\n            podName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    cpuChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    refreshPodMemoryMetrics() {\n        getPodMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"memory\",\n            namespace: this.props.location.state.data.metadata.namespace,\n            podName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    memoryChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    loadPodLog(containerName) {\n        if (this.state.serviceDetail.data.status.phase !== \"Running\") {\n            message.error(\"当前pod未运行，无法查看日志！\");\n            return;\n        }\n        this.props.history.push({\n            pathname: \"/admin/k8s_cluster/manage/container_log\",\n            state: {\n                namespace: this.state.serviceDetail.data.metadata.namespace,\n                podName: this.state.serviceDetail.data.metadata.name,\n                containerName: containerName,\n            },\n        });\n    }\n\n    handleCancelLogModal() {\n        this.setState({ logModalVisible: false, logLoading: false });\n    }\n\n    openWebTerminal(containerName) {\n        if (this.state.serviceDetail.data.status.phase !== \"Running\") {\n            message.error(\"当前pod未运行，无法使用终端！\");\n            return;\n        }\n        this.props.history.push({\n            pathname: \"/admin/k8s_cluster/manage/container_terminal\",\n            state: {\n                namespace: this.state.serviceDetail.data.metadata.namespace,\n                podName: this.state.serviceDetail.data.metadata.name,\n                containerName: containerName,\n            },\n        });\n    }\n\n    render() {\n        let labels = [];\n        for (let key in this.state.serviceDetail.data.metadata.labels) {\n            labels.push(\n                <div key={key}>\n                    <Tag color=\"geekblue\">\n                        {key +\n                            \":\" +\n                            this.state.serviceDetail.data.metadata.labels[key]}\n                    </Tag>\n                </div>,\n            );\n        }\n        let containersList = this.state.serviceDetail.data.spec.containers.map(\n            (item) => {\n                let portsList = [];\n                if (item.hasOwnProperty(\"ports\")) {\n                    for (let i = 0; i < item.ports.length; i++) {\n                        portsList.push(\n                            <Tag color=\"geekblue\">\n                                {item.ports[i][\"containerPort\"] +\n                                    \"(\" +\n                                    item.ports[i][\"protocol\"] +\n                                    \")\"}\n                            </Tag>,\n                        );\n                    }\n                }\n                return (\n                    <Row\n                        style={{\n                            width: \"100%\",\n                            borderBottom: \"1px solid #e8e8e8\",\n                        }}\n                    >\n                        <Col span={24}>\n                            <List itemLayout=\"horizontal\">\n                                <List.Item style={{ width: \"100%\" }}>\n                                    <List.Item.Meta\n                                        avatar={<K8sContainerIconSvg />}\n                                        title={\n                                            <Text type=\"secondary\">\n                                                容器名：{item.name} &nbsp;&nbsp;\n                                                <Button\n                                                    type=\"link\"\n                                                    onClick={this.loadPodLog.bind(\n                                                        this,\n                                                        item.name,\n                                                    )}\n                                                >\n                                                    查看日志\n                                                </Button>\n                                                <Button\n                                                    type=\"link\"\n                                                    onClick={this.openWebTerminal.bind(\n                                                        this,\n                                                        item.name,\n                                                    )}\n                                                >\n                                                    执行命令\n                                                </Button>\n                                            </Text>\n                                        }\n                                        description={\n                                            <Text type=\"secondary\">\n                                                镜像：{item.image} &nbsp;&nbsp;\n                                                端口: {portsList}\n                                            </Text>\n                                        }\n                                    />\n                                </List.Item>\n                            </List>\n                        </Col>\n                    </Row>\n                );\n            },\n        );\n\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Tabs defaultActiveKey=\"Pod详情\">\n                    <TabPane tab=\"Pod详情\" key=\"Pod详情\">\n                        <Descriptions bordered size=\"small\" column={2}>\n                            <Descriptions.Item label=\"Pod名称\">\n                                {this.state.serviceDetail.data.metadata.name}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"命名空间\">\n                                {\n                                    this.state.serviceDetail.data.metadata\n                                        .namespace\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\">\n                                {\n                                    this.state.serviceDetail.data.metadata\n                                        .creationTimestamp\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"标签\">\n                                {labels}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">\n                                {this.state.serviceDetail.data.status.phase}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Host IP\">\n                                {this.state.serviceDetail.data.status.hostIP}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"Pod IP\">\n                                {this.state.serviceDetail.data.status.podIP}\n                            </Descriptions.Item>\n                        </Descriptions>\n                        <Card\n                            size=\"small\"\n                            title=\"容器列表\"\n                            style={{ width: \"100%\", marginTop: \"10px\" }}\n                        >\n                            {containersList}\n                        </Card>\n                    </TabPane>\n                    <TabPane tab=\"Pod监控\" key=\"Pod监控\">\n                        <Card\n                            size=\"small\"\n                            title=\"CPU\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshPodCpuMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                            style={{ marginBottom: 20 }}\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"m\"\n                                data={this.state.cpuChartData}\n                            />\n                        </Card>\n                        <Card\n                            size=\"small\"\n                            title=\"Memory\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshPodMemoryMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"Mi\"\n                                data={this.state.memoryChartData}\n                            />\n                        </Card>\n                    </TabPane>\n                </Tabs>\n            </Content>\n        );\n    }\n}\n\nexport default PodDetailContent;\n","import React, {Component} from 'react';\nimport {Button, Icon, Layout, message, Row, Spin} from \"antd\";\nimport {getPodLogs} from \"../../api/kubernetes\";\n\n\nconst {Content} = Layout;\n\nclass ContainerLogContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.goBack = this.goBack.bind(this);\n        this.syncLogs = this.syncLogs.bind(this);\n        this.state = {\n            logLoading: false,\n            containerInfo: this.props.location.state,\n        }\n    }\n\n    componentDidMount() {\n        this.syncLogs();\n    }\n\n    goBack() {\n        this.setState({logContent: ''}, ()=>{\n            this.props.history.goBack();\n        });\n    }\n\n    syncLogs() {\n        this.setState({logLoading: true});\n        getPodLogs({\n            namespace: this.state.containerInfo.namespace,\n            podName: this.state.containerInfo.podName,\n            containerName: this.state.containerInfo.containerName,\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({logContent: res.data, logLoading: false}, ()=>{\n                    this.scrollToBottom();\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    scrollToBottom() {\n        let panel = document.getElementById('logPanel');\n        panel.scrollTop = panel.scrollHeight;\n    }\n\n    render() {\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Button type=\"link\" onClick={this.goBack}>\n                        <Icon type=\"left\" />\n                        返回上级\n                    </Button>\n                    <Button type=\"link\" icon=\"reload\" onClick={this.syncLogs} style={{ float: 'right' }}>刷 新</Button>\n                </Row>\n                <Spin spinning={this.state.logLoading}>\n                <div style={{ height: '85vh' }}>\n                    <div id=\"logPanel\" style={{ whiteSpace: 'pre-line', backgroundColor: 'rgb(19, 19, 19)', color: '#fff',\n                        fontSize: '14px', lineHeight: '20px', height: '100%', padding: '10px', overflow: 'scroll' }}>\n                        {this.state.logContent}\n                    </div>\n                </div>\n                </Spin>\n            </Content>\n        )\n    }\n}\n\nexport default ContainerLogContent;","import React, { Component } from \"react\";\nimport { Descriptions, Layout, Tag, Typography, Tabs, Card } from \"antd\";\nimport { ReloadOutlined } from \"@ant-design/icons\";\nimport AreaChart from \"../cloud_resource/common/area_chart.js\";\nimport { getNodeMetrics } from \"../../api/kubernetes\";\n\nconst { Content } = Layout;\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nclass NodeDetailContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodeDetail: this.props.location.state,\n            memoryChartData: [],\n            cpuChartData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.refreshNodeCpuMetrics();\n        this.refreshNodeMemoryMetrics();\n    }\n\n    refreshNodeCpuMetrics() {\n        getNodeMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"cpu\",\n            nodeName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    cpuChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    refreshNodeMemoryMetrics() {\n        getNodeMetrics({\n            clusterId: localStorage.getItem(\"clusterId\"),\n            metricName: \"memory\",\n            nodeName: this.props.location.state.data.metadata.name,\n        }).then((res) => {\n            if (res.code === 0) {\n                this.setState({\n                    memoryChartData: res.data.items[0].metricPoints,\n                });\n            }\n        });\n    }\n\n    render() {\n        let labels = [];\n        for (let key in this.state.nodeDetail.data.metadata.labels) {\n            labels.push(\n                <div key={key}>\n                    <Tag color=\"geekblue\">\n                        {key +\n                            \":\" +\n                            this.state.nodeDetail.data.metadata.labels[key]}\n                    </Tag>\n                </div>,\n            );\n        }\n        let annotations = [];\n        for (let key in this.state.nodeDetail.data.metadata.annotations) {\n            annotations.push(\n                <div key={key}>\n                    <Tag color=\"geekblue\">\n                        {key +\n                            \":\" +\n                            this.state.nodeDetail.data.metadata.annotations[\n                                key\n                            ]}\n                    </Tag>\n                </div>,\n            );\n        }\n        let addresses = [];\n        const addressesData = this.state.nodeDetail.data.status.addresses;\n        for (let i = 0; i < addressesData.length; i++) {\n            addresses.push(\n                <Text>\n                    {addressesData[i][\"type\"] +\n                        \":  \" +\n                        addressesData[i][\"address\"]}\n                </Text>,\n            );\n            addresses.push(<br />);\n        }\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Tabs defaultActiveKey=\"Node信息\">\n                    <TabPane tab=\"Node信息\" key=\"Node信息\">\n                        <Descriptions bordered size=\"small\" column={1}>\n                            <Descriptions.Item label=\"名称\">\n                                {this.state.nodeDetail.data.metadata.name}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\">\n                                {\n                                    this.state.nodeDetail.data.metadata\n                                        .creationTimestamp\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"标签\">\n                                {labels}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"注解\">\n                                {annotations}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"地址\">\n                                {addresses}\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"kubelet端口\">\n                                {\n                                    this.state.nodeDetail.data.status\n                                        .daemonEndpoints.kubeletEndpoint.Port\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"容器版本\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .containerRuntimeVersion\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"kubelet版本\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .kubeletVersion\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"kubeProxy版本\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .kubeProxyVersion\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"系统\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .operatingSystem\n                                }\n                            </Descriptions.Item>\n                            <Descriptions.Item label=\"架构\">\n                                {\n                                    this.state.nodeDetail.data.status.nodeInfo\n                                        .architecture\n                                }\n                            </Descriptions.Item>\n                        </Descriptions>\n                    </TabPane>\n                    <TabPane tab=\"Node监控\" key=\"Node监控\">\n                        <Card\n                            size=\"small\"\n                            title=\"CPU\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshNodeCpuMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                            style={{ marginBottom: 20 }}\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"m\"\n                                data={this.state.cpuChartData}\n                            />\n                        </Card>\n                        <Card\n                            size=\"small\"\n                            title=\"Memory\"\n                            extra={\n                                <ReloadOutlined\n                                    onClick={this.refreshNodeMemoryMetrics.bind(\n                                        this,\n                                    )}\n                                />\n                            }\n                        >\n                            <AreaChart\n                                width=\"100%\"\n                                height={200}\n                                xField=\"timestamp\"\n                                unit=\"Mi\"\n                                data={this.state.memoryChartData}\n                            />\n                        </Card>\n                    </TabPane>\n                </Tabs>\n            </Content>\n        );\n    }\n}\n\nexport default NodeDetailContent;\n","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass RsDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rsDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.rsDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rsDetail.data.spec.selector.matchLabels){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.spec.selector.matchLabels[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rsDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"ReplicaSet 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rsDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rsDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rsDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rsDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rsDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default RsDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass DeploymentDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rsDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.rsDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rsDetail.data.spec.selector.matchLabels){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.spec.selector.matchLabels[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rsDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Deployment 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rsDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rsDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rsDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rsDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rsDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n}\n\nexport default DeploymentDetailContent;","import React, { Component } from \"react\";\nimport { Card, Descriptions, Layout, List } from \"antd\";\nimport moment from \"moment\";\n\nconst { Content } = Layout;\n\nclass IngressDetailContent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ingressDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let certContent = this.state.ingressDetail.data.spec.tls.map(\n            (item, index) => {\n                return (\n                    <span>\n                        {item.secretName}\n                        <br />\n                    </span>\n                );\n            },\n        );\n        let domainContent = this.state.ingressDetail.data.spec.rules.map(\n            (item, index) => {\n                return (\n                    <List\n                        header={<div>{item.host}</div>}\n                        bordered\n                        dataSource={item.http.paths}\n                        renderItem={(item) => (\n                            <List.Item>\n                                <Descriptions column={2}>\n                                    <Descriptions.Item label=\"path\">\n                                        {item.path}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"pathType\">\n                                        {item.pathType}\n                                    </Descriptions.Item>\n                                    <Descriptions.Item label=\"backend\">\n                                        {item.backend.serviceName}:\n                                        {item.backend.servicePort}\n                                    </Descriptions.Item>\n                                </Descriptions>\n                            </List.Item>\n                        )}\n                    />\n                );\n            },\n        );\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <Card\n                    size=\"small\"\n                    title=\"Ingress 详情\"\n                    style={{ width: \"100%\" }}\n                >\n                    <Descriptions bordered size=\"small\" column={2}>\n                        <Descriptions.Item label=\"名称\">\n                            {this.state.ingressDetail.data.metadata.name}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">\n                            {this.state.ingressDetail.data.metadata.namespace}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">\n                            {moment(\n                                this.state.ingressDetail.data.metadata\n                                    .creationTimestamp,\n                            ).format(\"YYYY-MM-DD HH:mm:ss\")}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"证书\">\n                            {certContent}\n                        </Descriptions.Item>\n                        <Descriptions.Item label=\"域名配置\">\n                            {domainContent}\n                        </Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        );\n    }\n}\n\nexport default IngressDetailContent;\n","import React, { Component } from \"react\";\nimport {\n    Layout,\n    Row,\n    message,\n    Col,\n    Select,\n    Tabs,\n    Card,\n    Table,\n    Tag,\n    Button,\n    Modal,\n    Alert,\n    Spin,\n    Icon,\n    Tooltip,\n    Drawer,\n    Menu,\n    Dropdown,\n    InputNumber,\n    Collapse,\n    Divider,\n    Input,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteConfigMap,\n    deleteResource,\n    deleteSecret,\n    getConfigDict,\n    getDeployments,\n    getNamespaces,\n    getNodes,\n    getPods,\n    getReplicaSets,\n    getReplicationControllers,\n    getResourceYaml,\n    getSecretDict,\n    getServices,\n    postApplyYaml,\n    putResourceScale,\n    getIngresses,\n} from \"../../api/kubernetes\";\nimport moment from \"moment\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport K8sTemplate from \"../../utils/k8s_template\";\nimport { Route, Switch } from \"react-router-dom\";\nimport RcDetailContent from \"./rc_detail\";\nimport ServiceDetailContent from \"./service_detail\";\nimport PodDetailContent from \"./pod_detail\";\nimport WebTerminalContent from \"./web_terminal\";\nimport ContainerLogContent from \"./container_log\";\nimport NodeDetailContent from \"./node_detail\";\nimport RsDetailContent from \"./rs_detail\";\nimport DeploymentDetailContent from \"./deployment_detail\";\nimport IngressDetailContent from \"./ingress_detail\";\nimport { StatusDoneSvg, StatusProgressSvg } from \"../../assets/Icons\";\nimport Highlighter from \"react-highlight-words\";\n\nconst { TabPane } = Tabs;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst { Panel } = Collapse;\nconst { confirm } = Modal;\n\nconst customPanelStyle = {\n    background: \"#f7f7f7\",\n    borderRadius: 4,\n    marginBottom: 24,\n    border: 0,\n    overflow: \"hidden\",\n};\n\nclass K8sNamespacesContent extends Component {\n    constructor(props) {\n        super(props);\n        this.refreshNamespaceResources = this.refreshNamespaceResources.bind(\n            this,\n        );\n        this.selectChange = this.selectChange.bind(this);\n        this.yarmCreateK8sResource = this.yarmCreateK8sResource.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.selectTemplateChange = this.selectTemplateChange.bind(this);\n        this.onDrawerClose = this.onDrawerClose.bind(this);\n        this.handleYamlDetailCancel = this.handleYamlDetailCancel.bind(this);\n        this.handleScaleCancel = this.handleScaleCancel.bind(this);\n        this.handleScaleCommit = this.handleScaleCommit.bind(this);\n        this.onInputNumberChange = this.onInputNumberChange.bind(this);\n        this.handleConfigCancel = this.handleConfigCancel.bind(this);\n        this.state = {\n            nodeColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"node\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"已就绪\",\n                    key: \"ready\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#f50\">False</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"Ready\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#87d068\">True</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"磁盘压力\",\n                    key: \"disk\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#87d068\">无压力</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"DiskPressure\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#f50\">有压力</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"内存压力\",\n                    key: \"memory\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#87d068\">无压力</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"MemoryPressure\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#f50\">有压力</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"PID压力\",\n                    key: \"pid\",\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color=\"#87d068\">无压力</Tag>;\n                        for (let i = 0; i < data.length; i++) {\n                            if (data[i][\"type\"] === \"PIDPressure\") {\n                                if (data[i][\"status\"] !== \"False\") {\n                                    content = <Tag color=\"#f50\">有压力</Tag>;\n                                }\n                                break;\n                            }\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n            ],\n            rcColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg />;\n                        if (\n                            record.status.readyReplicas === undefined ||\n                            record.status.readyReplicas < record.status.replicas\n                        ) {\n                            icon = <StatusProgressSvg />;\n                        }\n                        return (\n                            <div>\n                                <span\n                                    style={{ position: \"relative\", top: \"5px\" }}\n                                >\n                                    {icon}\n                                </span>\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.showDetail.bind(\n                                        this,\n                                        \"rc\",\n                                        record,\n                                    )}\n                                >\n                                    {record.metadata.name}\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"容器组\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if (record.status.hasOwnProperty(\"readyReplicas\")) {\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return readyReplicas + \" / \" + record.status.replicas;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"镜像\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">{data[i].image}</Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.autoScaleHandler.bind(\n                                            this,\n                                            \"rc\",\n                                            record,\n                                        )}\n                                    >\n                                        {\" \"}\n                                        伸缩\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"rc\",\n                                            record,\n                                        )}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"rc\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    type=\"link\"\n                                    className=\"ant-dropdown-link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            rsColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg />;\n                        if (\n                            record.status.readyReplicas === undefined ||\n                            record.status.readyReplicas < record.status.replicas\n                        ) {\n                            icon = <StatusProgressSvg />;\n                        }\n                        return (\n                            <div>\n                                <span\n                                    style={{ position: \"relative\", top: \"5px\" }}\n                                >\n                                    {icon}\n                                </span>\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.showDetail.bind(\n                                        this,\n                                        \"rs\",\n                                        record,\n                                    )}\n                                >\n                                    {record.metadata.name}\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"容器组\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if (record.status.hasOwnProperty(\"readyReplicas\")) {\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return readyReplicas + \" / \" + record.status.replicas;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"镜像\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">{data[i].image}</Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.autoScaleHandler.bind(\n                                            this,\n                                            \"rs\",\n                                            record,\n                                        )}\n                                    >\n                                        伸缩\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"rs\",\n                                            record,\n                                        )}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"rs\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    type=\"link\"\n                                    className=\"ant-dropdown-link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            serviceColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"service\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"集群IP\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        return record.spec.clusterIP;\n                    },\n                },\n                {\n                    title: \"内部端点\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.ports;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">\n                                        {record.metadata.name +\n                                            \".\" +\n                                            record.metadata.namespace +\n                                            \":\" +\n                                            data[i][\"port\"] +\n                                            \" \" +\n                                            data[i][\"protocol\"]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"service\",\n                                            record,\n                                        )}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"service\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            ingressColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"ingress\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"域名\",\n                    key: \"domain\",\n                    render: (text, record) => {\n                        let content = record.spec.rules.map((item, index) => {\n                            return (\n                                <span>\n                                    {item.host}\n                                    <br />\n                                </span>\n                            );\n                        });\n                        return <span>{content}</span>;\n                    },\n                },\n                {\n                    title: \"证书\",\n                    key: \"cert\",\n                    render: (text, record) => {\n                        let content = record.spec.tls.map((item, index) => {\n                            return (\n                                <span>\n                                    {item.secretName}\n                                    <br />\n                                </span>\n                            );\n                        });\n                        return <span>{content}</span>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"ingress\",\n                                            record,\n                                        )}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"ingress\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            deploymentColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg />;\n                        if (\n                            record.status.readyReplicas === undefined ||\n                            record.status.readyReplicas < record.status.replicas\n                        ) {\n                            icon = <StatusProgressSvg />;\n                        }\n                        return (\n                            <div>\n                                <span\n                                    style={{ position: \"relative\", top: \"5px\" }}\n                                >\n                                    {icon}\n                                </span>\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.showDetail.bind(\n                                        this,\n                                        \"deployment\",\n                                        record,\n                                    )}\n                                >\n                                    {record.metadata.name}\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"标签\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        let labels = [];\n                        for (let key in record.metadata.labels) {\n                            labels.push(\n                                <div key={key}>\n                                    <Tag color=\"geekblue\">\n                                        {key +\n                                            \":\" +\n                                            record.metadata.labels[key]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"容器组\",\n                    key: \"replicas\",\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if (record.status.hasOwnProperty(\"readyReplicas\")) {\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return readyReplicas + \" / \" + record.status.replicas;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"镜像\",\n                    key: \"image\",\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">{data[i].image}</Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.autoScaleHandler.bind(\n                                            this,\n                                            \"deployment\",\n                                            record,\n                                        )}\n                                    >\n                                        伸缩\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"deployment\",\n                                            record,\n                                        )}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"deployment\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            podColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return (\n                            <Button\n                                type=\"link\"\n                                onClick={this.showDetail.bind(\n                                    this,\n                                    \"pod\",\n                                    record,\n                                )}\n                            >\n                                {record.metadata.name}\n                            </Button>\n                        );\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"节点\",\n                    key: \"labels\",\n                    render: (text, record) => {\n                        return <span>{record.spec.nodeName}</span>;\n                    },\n                },\n                {\n                    title: \"状态\",\n                    key: \"status\",\n                    dataIndex: \"\",\n                    render: (text, record) => {\n                        let value = record.status.phase;\n                        let statusContent = <Tag color=\"#87d068\">{value}</Tag>;\n                        if (value === \"Failed\") {\n                            statusContent = <Tag color=\"#f50\">{value}</Tag>;\n                        }\n                        if (value === \"Pending\") {\n                            statusContent = <Tag color=\"#108ee9\">{value}</Tag>;\n                        }\n                        return statusContent;\n                    },\n                },\n                {\n                    title: \"重启次数\",\n                    key: \"count\",\n                    render: (text, record) => {\n                        if (record.status.phase === \"Failed\") {\n                            return \"0\";\n                        }\n                        let data = record.status.containerStatuses;\n                        let labels = [];\n                        for (let i = 0; i < data.length; i++) {\n                            labels.push(\n                                <div key={i}>\n                                    <Tag color=\"geekblue\">\n                                        {data[i][\"name\"] +\n                                            \" - \" +\n                                            data[i][\"restartCount\"]}\n                                    </Tag>\n                                </div>,\n                            );\n                        }\n                        return labels;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"create_time\",\n                    render: (text, record) =>\n                        moment(record.metadata.creationTimestamp).format(\n                            \"YYYY-MM-DD\",\n                        ),\n                },\n                {\n                    title: \"操作\",\n                    key: \"action\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"1\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.deleteHandler.bind(\n                                            this,\n                                            \"pod\",\n                                            record,\n                                        )}\n                                    >\n                                        删除\n                                    </Button>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <Button\n                                        type=\"link\"\n                                        onClick={this.showYamlHandler.bind(\n                                            this,\n                                            \"pod\",\n                                            record,\n                                        )}\n                                    >\n                                        查看yaml文件\n                                    </Button>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={[\"click\"]}>\n                                <Button\n                                    className=\"ant-dropdown-link\"\n                                    type=\"link\"\n                                >\n                                    资源操作 <Icon type=\"down\" />\n                                </Button>\n                            </Dropdown>\n                        );\n                    },\n                },\n            ],\n            configDictColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return <span>{record.metadata.name}</span>;\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"creationTimestamp\",\n                    render: (text, record) => {\n                        return (\n                            <span>\n                                {moment(\n                                    record.metadata.creationTimestamp,\n                                ).format(\"YYYY-MM-DD\")}\n                            </span>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"data\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.showDictValue.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    查看\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.deleteDictValue.bind(\n                                        this,\n                                        \"config_map\",\n                                        record,\n                                    )}\n                                >\n                                    删除\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            secretDictColumns: [\n                {\n                    title: \"名称\",\n                    key: \"name\",\n                    ...this.getColumnSearchProps(\"name\"),\n                    render: (text, record) => {\n                        return <span>{record.metadata.name}</span>;\n                    },\n                },\n                {\n                    title: \"命名空间\",\n                    key: \"namespace\",\n                    render: (text, record) => {\n                        return <span>{record.metadata.namespace}</span>;\n                    },\n                },\n                {\n                    title: \"类型\",\n                    dataIndex: \"type\",\n                    key: \"type\",\n                },\n                {\n                    title: \"创建时间\",\n                    key: \"creationTimestamp\",\n                    render: (text, record) => {\n                        return (\n                            <span>\n                                {moment(\n                                    record.metadata.creationTimestamp,\n                                ).format(\"YYYY-MM-DD\")}\n                            </span>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"data\",\n                    fixed: \"right\",\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.showDictValue.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    查看\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Button\n                                    type=\"link\"\n                                    onClick={this.deleteDictValue.bind(\n                                        this,\n                                        \"secret\",\n                                        record,\n                                    )}\n                                >\n                                    删除\n                                </Button>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            namespaceList: [],\n            replicationControllerList: [],\n            deploymentList: [],\n            replicaSetList: [],\n            serviceList: [],\n            ingressList: [],\n            podList: [],\n            nodeList: [],\n            configDictList: [],\n            secretDictList: [],\n            dictConfigValue: {},\n            refreshDataLoading: false,\n            detailDrawerVisible: false,\n            yamlModalVisible: false,\n            scaleModalVisible: false,\n            configModalVisible: false,\n            yamlDetail: \"\",\n            currentNamespace: \"default\",\n            yamlCode: \"\",\n            replicaCount: 0,\n            scaleResType: \"\",\n            scaleResData: {\n                spec: {\n                    replicas: 0,\n                },\n            },\n        };\n    }\n\n    componentDidMount() {\n        this.getK8sNamespaces();\n        this.refreshNamespaceResources();\n        this.getK8sNodes();\n    }\n\n    selectChange(value) {\n        this.setState({ currentNamespace: value }, () => {\n            this.refreshNamespaceResources();\n        });\n    }\n\n    getK8sNamespaces() {\n        getNamespaces()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ namespaceList: res.data.items });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getK8sNodes() {\n        getNodes()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        nodeList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    refreshNamespaceResources() {\n        this.getNamespaceDeployments();\n        this.getNamespaceReplicationControllers();\n        this.getNamespaceReplicaSets();\n        this.getNamespaceServices();\n        this.getNamespaceIngress();\n        this.getNamespacePods();\n        this.getNamespaceConfigDict();\n        this.getNamespaceSecretDict();\n        this.showLoading();\n    }\n\n    showLoading = () => {\n        this.setState({ refreshDataLoading: true });\n        setTimeout(() => {\n            this.setState({ refreshDataLoading: false });\n        }, 800);\n    };\n\n    getNamespaceDeployments() {\n        getDeployments({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        deploymentList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceReplicationControllers() {\n        getReplicationControllers({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        replicationControllerList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceReplicaSets() {\n        getReplicaSets({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        replicaSetList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceServices() {\n        getServices({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        serviceList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespacePods() {\n        getPods({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        podList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceIngress() {\n        getIngresses({ namespace: this.state.currentNamespace })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        ingressList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceConfigDict() {\n        getConfigDict({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        configDictList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getNamespaceSecretDict() {\n        getSecretDict({\n            namespace: this.state.currentNamespace,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({\n                        secretDictList: res.data.items,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    getColumnSearchProps = (dataIndex) => ({\n        filterDropdown: ({\n            setSelectedKeys,\n            selectedKeys,\n            confirm,\n            clearFilters,\n        }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={(node) => {\n                        this.searchInput = node;\n                    }}\n                    value={selectedKeys[0]}\n                    onChange={(e) =>\n                        setSelectedKeys(e.target.value ? [e.target.value] : [])\n                    }\n                    onPressEnter={() =>\n                        this.handleSearch(selectedKeys, confirm)\n                    }\n                    style={{ width: 188, marginBottom: 8, display: \"block\" }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => this.handleSearch(selectedKeys, confirm)}\n                    icon=\"search\"\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    查找\n                </Button>\n                <Button\n                    onClick={() => this.handleReset(clearFilters)}\n                    size=\"small\"\n                    style={{ width: 90 }}\n                >\n                    重置\n                </Button>\n            </div>\n        ),\n        filterIcon: (filtered) => (\n            <Icon\n                type=\"search\"\n                style={{ color: filtered ? \"#1890ff\" : \"#40a9ff\" }}\n            />\n        ),\n        onFilter: (value, record) => {\n            console.log(dataIndex, record);\n            return record[\"metadata\"][dataIndex]\n                .toString()\n                .toLowerCase()\n                .includes(value.toLowerCase());\n        },\n        onFilterDropdownVisibleChange: (visible) => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: (text) => (\n            <Highlighter\n                highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n                searchWords={[this.state.searchText]}\n                autoEscape\n                textToHighlight={text.toString()}\n            />\n        ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n        confirm();\n        this.setState({ searchText: selectedKeys[0] });\n    };\n\n    handleReset = (clearFilters) => {\n        clearFilters();\n        this.setState({ searchText: \"\" });\n    };\n\n    showDictValue(data) {\n        this.setState({\n            configModalVisible: true,\n            dictConfigValue: data.data,\n        });\n    }\n\n    deleteDictValue(type, data) {\n        switch (type) {\n            case \"config_map\":\n                deleteConfigMap({\n                    namespace: this.state.currentNamespace,\n                    resName: data.metadata.name,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            this.refreshNamespaceResources();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n                break;\n            case \"secret\":\n                deleteSecret({\n                    namespace: this.state.currentNamespace,\n                    resName: data.metadata.name,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            this.refreshNamespaceResources();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n                break;\n            default:\n                message.warn(\"不支持的类型\");\n                break;\n        }\n    }\n\n    handleConfigCancel() {\n        this.setState({\n            configModalVisible: false,\n        });\n    }\n\n    yarmCreateK8sResource() {\n        this.setState({ createModalVisible: true });\n    }\n\n    handleOk() {\n        if (this.state.yamlCode.trim() === \"\") {\n            message.warn(\"需要填写文件内容！\");\n            return;\n        }\n        postApplyYaml({\n            namespace: this.state.currentNamespace,\n            yamlContent: this.state.yamlCode,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ createModalVisible: false });\n                    message.success(\"提交成功，请到对应资源栏查看详情\");\n                    this.refreshNamespaceResources();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleCancel() {\n        this.setState({ createModalVisible: false });\n    }\n\n    selectTemplateChange(data) {\n        this.setState({ yamlCode: K8sTemplate[data] });\n    }\n\n    showDetail(resourceType, data) {\n        this.setState({ detailDrawerVisible: true });\n        switch (resourceType) {\n            case \"node\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/node_detail\",\n                    state: { data },\n                });\n                break;\n            case \"rc\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/rc_detail\",\n                    state: { data },\n                });\n                break;\n            case \"rs\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/rs_detail\",\n                    state: { data },\n                });\n                break;\n            case \"deployment\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/deployment_detail\",\n                    state: { data },\n                });\n                break;\n            case \"service\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/service_detail\",\n                    state: { data },\n                });\n                break;\n            case \"ingress\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/ingress_detail\",\n                    state: { data },\n                });\n                break;\n            case \"pod\":\n                this.props.history.push({\n                    pathname: \"/admin/k8s_cluster/manage/pod_detail\",\n                    state: { data },\n                });\n                break;\n            default:\n                message.error(\"不支持的类型：\" + resourceType);\n                break;\n        }\n    }\n\n    onDrawerClose() {\n        this.setState({ detailDrawerVisible: false });\n    }\n\n    autoScaleHandler(resType, data) {\n        this.setState({\n            scaleModalVisible: true,\n            scaleResType: resType,\n            scaleResData: data,\n        });\n    }\n\n    deleteHandler(resType, data) {\n        const that = this;\n        confirm({\n            title: \"操作警告?\",\n            content: \"确定删除该 kubernetes 资源吗？\",\n            icon: <Icon type=\"warning\" />,\n            onOk() {\n                deleteResource({\n                    namespace: data.metadata.namespace,\n                    resType: resType,\n                    resName: data.metadata.name,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            message.success(\"删除成功\");\n                            that.showLoading();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            },\n            onCancel() {\n                console.log(\"Cancel\");\n            },\n        });\n    }\n\n    showYamlHandler(resType, data) {\n        this.setState({ yamlModalVisible: true });\n        getResourceYaml({\n            namespace: data.metadata.namespace,\n            resType: resType,\n            resName: data.metadata.name,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ yamlDetail: res.data });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleYamlDetailCancel() {\n        this.setState({ yamlModalVisible: false });\n    }\n\n    handleScaleCancel() {\n        this.setState({ scaleModalVisible: false });\n    }\n\n    handleScaleCommit() {\n        putResourceScale({\n            namespace: this.state.scaleResData.metadata.namespace,\n            resType: this.state.scaleResType,\n            resName: this.state.scaleResData.metadata.name,\n            replicaCount: this.state.replicaCount,\n        })\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ scaleModalVisible: false });\n                    message.success(\"提交成功\");\n                    this.showLoading();\n                    switch (this.state.scaleResType) {\n                        case \"rc\":\n                            this.getNamespaceReplicationControllers();\n                            break;\n                        default:\n                            break;\n                    }\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    onInputNumberChange(data) {\n        this.setState({ replicaCount: data });\n    }\n\n    render() {\n        let modelTitle = \"新建资源 - \" + this.state.currentNamespace;\n        let alertTitle = (\n            <div>\n                填入 YAML 文件内容，将指定资源部署到当前所选命名空间。\n                <Tooltip\n                    title={\n                        <div>\n                            更多配置信息请查看:{\" \"}\n                            <a\n                                href=\"https://kubernetes.io/docs/home/\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                            >\n                                官方文档\n                            </a>\n                        </div>\n                    }\n                >\n                    <Icon type=\"question-circle\" />\n                </Tooltip>\n            </div>\n        );\n        let configList = [];\n        for (let key in this.state.dictConfigValue) {\n            configList.push(\n                <Panel header={key} key={key} style={customPanelStyle}>\n                    <CodeMirror value={this.state.dictConfigValue[key]} />\n                </Panel>,\n            );\n        }\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"Kubernetes\", \"集群管理\"]} />\n\n                <Row>\n                    <span\n                        style={{\n                            lineHeight: \"30px\",\n                            fontWeight: \"500\",\n                            marginRight: \"20px\",\n                        }}\n                    >\n                        命名空间:{\" \"}\n                    </span>\n                    <Select\n                        defaultValue=\"default\"\n                        style={{ width: \"200px\", marginRight: \"20px\" }}\n                        onChange={this.selectChange}\n                    >\n                        {this.state.namespaceList.map((item, index) => {\n                            let disabled = false;\n                            if (item[\"status\"][\"phase\"] !== \"Active\") {\n                                disabled = true;\n                            }\n                            return (\n                                <Option\n                                    key={index}\n                                    value={item.metadata.name}\n                                    disabled={disabled}\n                                >\n                                    {item.metadata.name}\n                                </Option>\n                            );\n                        })}\n                    </Select>\n                    <Button\n                        onClick={this.refreshNamespaceResources}\n                        style={{ marginRight: \"20px\" }}\n                    >\n                        刷 新\n                    </Button>\n                    <Button type=\"primary\" onClick={this.yarmCreateK8sResource}>\n                        新 建\n                    </Button>\n                </Row>\n\n                <Modal\n                    title={modelTitle}\n                    destroyOnClose={true}\n                    visible={this.state.createModalVisible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={700}\n                    centered={true}\n                >\n                    <Alert\n                        message={alertTitle}\n                        banner\n                        style={{ marginBottom: \"10px\", marginTop: \"-20px\" }}\n                    />\n                    <Row style={{ marginBottom: \"10px\" }}>\n                        <Col span={4}>\n                            <span\n                                style={{\n                                    lineHeight: \"30px\",\n                                    fontWeight: \"500\",\n                                }}\n                            >\n                                选择资源模板:{\" \"}\n                            </span>\n                        </Col>\n                        <Col span={6} style={{ marginRight: \"20px\" }}>\n                            <Select\n                                defaultValue=\"\"\n                                style={{ width: \"100%\" }}\n                                onChange={this.selectTemplateChange}\n                            >\n                                <Option key=\"0\" value=\"\">\n                                    无\n                                </Option>\n                                <Option key=\"1\" value=\"deployment\">\n                                    Deployment\n                                </Option>\n                                <Option key=\"2\" value=\"rc\">\n                                    ReplicationController\n                                </Option>\n                                <Option key=\"3\" value=\"rs\">\n                                    ReplicaSet\n                                </Option>\n                                <Option key=\"4\" value=\"statefull_rs\">\n                                    StatefulSets\n                                </Option>\n                                <Option key=\"5\" value=\"service\">\n                                    Service\n                                </Option>\n                                <Option key=\"6\" value=\"ingress\">\n                                    Ingress\n                                </Option>\n                                <Option key=\"7\" value=\"daemon_set\">\n                                    DaemonSet\n                                </Option>\n                                <Option key=\"8\" value=\"config_map\">\n                                    ConfigMap\n                                </Option>\n                                <Option key=\"9\" value=\"secret_map\">\n                                    Secret\n                                </Option>\n                            </Select>\n                        </Col>\n                    </Row>\n                    <CodeMirror\n                        value={this.state.yamlCode}\n                        options={{\n                            mode: \"xml\",\n                            theme: \"material\",\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.setState({ yamlCode: value });\n                        }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"YAML详情\"\n                    destroyOnClose={true}\n                    visible={this.state.yamlModalVisible}\n                    onCancel={this.handleYamlDetailCancel}\n                    width={700}\n                    centered={true}\n                    footer={[\n                        <Button onClick={this.handleYamlDetailCancel}>\n                            取消\n                        </Button>,\n                    ]}\n                >\n                    <CodeMirror\n                        value={this.state.yamlDetail}\n                        options={{\n                            mode: \"xml\",\n                            theme: \"material\",\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.setState({ yamlDetail: value });\n                        }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"自动伸缩\"\n                    destroyOnClose={true}\n                    visible={this.state.scaleModalVisible}\n                    onCancel={this.handleScaleCancel}\n                    width={400}\n                    centered={true}\n                    bodyStyle={{ textAlign: \"center\" }}\n                    footer={[\n                        <Button onClick={this.handleScaleCancel}>取消</Button>,\n                        <Button type=\"primary\" onClick={this.handleScaleCommit}>\n                            确定\n                        </Button>,\n                    ]}\n                >\n                    <InputNumber\n                        min={0}\n                        defaultValue={this.state.scaleResData.spec.replicas}\n                        onChange={this.onInputNumberChange}\n                        style={{ width: \"70%\" }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"配置字典值\"\n                    destroyOnClose={true}\n                    visible={this.state.configModalVisible}\n                    onCancel={this.handleConfigCancel}\n                    width={600}\n                    footer={[]}\n                >\n                    <Collapse bordered={false}>{configList}</Collapse>\n                </Modal>\n\n                <Drawer\n                    placement=\"left\"\n                    closable={true}\n                    destroyOnClose={true}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.detailDrawerVisible}\n                    width=\"70%\"\n                >\n                    <Switch>\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/node_detail\"\n                            component={NodeDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/rc_detail\"\n                            component={RcDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/rs_detail\"\n                            component={RsDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/deployment_detail\"\n                            component={DeploymentDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/service_detail\"\n                            component={ServiceDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/ingress_detail\"\n                            component={IngressDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/pod_detail\"\n                            component={PodDetailContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/container_log\"\n                            component={ContainerLogContent}\n                        />\n                        <Route\n                            path=\"/admin/k8s_cluster/manage/container_terminal\"\n                            component={WebTerminalContent}\n                        />\n                    </Switch>\n                </Drawer>\n\n                <Row style={{ marginTop: \"10px\" }}>\n                    <Card\n                        size=\"small\"\n                        title=\"资源总览\"\n                        style={{ width: \"100%\" }}\n                    >\n                        <Spin spinning={this.state.refreshDataLoading}>\n                            <Tabs\n                                defaultActiveKey=\"1\"\n                                tabPosition=\"left\"\n                                size=\"small\"\n                                style={{ width: \"100%\" }}\n                                tabBarStyle={{ textAlign: \"left\" }}\n                            >\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Node\n                                        </div>\n                                    }\n                                    key={1}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.nodeColumns}\n                                        dataSource={this.state.nodeList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            ReplicaSet\n                                        </div>\n                                    }\n                                    key={2}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.rsColumns}\n                                        dataSource={this.state.replicaSetList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Deployment\n                                        </div>\n                                    }\n                                    key={3}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.deploymentColumns}\n                                        dataSource={this.state.deploymentList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            RC\n                                        </div>\n                                    }\n                                    key={4}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.rcColumns}\n                                        dataSource={\n                                            this.state.replicationControllerList\n                                        }\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Service\n                                        </div>\n                                    }\n                                    key={5}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.serviceColumns}\n                                        dataSource={this.state.serviceList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Ingress\n                                        </div>\n                                    }\n                                    key={6}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.ingressColumns}\n                                        dataSource={this.state.ingressList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Pod\n                                        </div>\n                                    }\n                                    key={7}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.podColumns}\n                                        dataSource={this.state.podList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            ConfigMap\n                                        </div>\n                                    }\n                                    key={8}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.configDictColumns}\n                                        dataSource={this.state.configDictList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                                <TabPane\n                                    tab={\n                                        <div\n                                            style={{\n                                                fontSize: \"13px\",\n                                                width: \"80px\",\n                                                textAlign: \"left\",\n                                            }}\n                                        >\n                                            Secret\n                                        </div>\n                                    }\n                                    key={9}\n                                >\n                                    <Table\n                                        size=\"small\"\n                                        columns={this.state.secretDictColumns}\n                                        dataSource={this.state.secretDictList}\n                                        scroll={{ x: \"max-content\" }}\n                                    />\n                                </TabPane>\n                            </Tabs>\n                        </Spin>\n                    </Card>\n                </Row>\n            </Content>\n        );\n    }\n}\n\nexport default K8sNamespacesContent;\n","import React, { Component } from \"react\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    Row,\n    Layout,\n    Button,\n    Modal,\n    List,\n    Card,\n    Empty,\n    Form,\n    Input,\n    message,\n    Popconfirm,\n    Col,\n    Select,\n} from \"antd\";\nimport {\n    deleteCluster,\n    getClusterData,\n    postCluster,\n} from \"../../api/kubernetes\";\n\nconst { Content } = Layout;\nconst {Option} = Select;\n\nconst selectBefore = (\n    <Select defaultValue=\"http://\" className=\"select-before\">\n        <Option value=\"http://\">http://</Option>\n        <Option value=\"https://\">https://</Option>\n    </Select>\n);\n\nclass ClusterManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.addCluster = this.addCluster.bind(this);\n        this.handleClusterAddOk = this.handleClusterAddOk.bind(this);\n        this.handleClusterAddCancel = this.handleClusterAddCancel.bind(this);\n        this.loadClusterData = this.loadClusterData.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            addModelVisible: false,\n            clusterData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadClusterData();\n    }\n\n    enterToCluster(clusterId) {\n        let that = this;\n        message.loading(\"集群连接初始化中，即将跳转...\", 0.6);\n        localStorage.setItem(\"clusterId\", clusterId);\n        setTimeout(function() {\n            that.props.history.push({ pathname: \"/admin/k8s_cluster/manage\" });\n        }, 600);\n    }\n\n    loadClusterData() {\n        getClusterData()\n            .then((res) => {\n                if (res.code === 0) {\n                    this.setState({ clusterData: res.data.k8sData });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    addCluster() {\n        this.setState({ addModelVisible: true });\n    }\n\n    handleClusterAddOk() {\n        this.formRef.current.validateFields().then((values) => {\n            postCluster(values)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功\");\n                        this.setState({ addModelVisible: false });\n                        this.loadClusterData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    }\n\n    handleClusterAddCancel() {\n        this.setState({ addModelVisible: false });\n    }\n\n    confirmDeleteCluster(id) {\n        deleteCluster({ id: id })\n            .then((res) => {\n                if (res.code === 0) {\n                    message.success(\"移除成功\");\n                    this.loadClusterData();\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: \"5px 20px\",\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"Kubernetes\", \"集群信息\"]} />\n                <Row>\n                    <Col span={2}>\n                        <Button\n                            type=\"primary\"\n                            onClick={this.addCluster}\n                            style={{ width: \"100%\" }}\n                        >\n                            新增集群\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Row style={{ marginTop: \"10px\", width: \"100%\" }}>\n                    {this.state.clusterData.length === 0 ? (\n                        <Empty\n                            style={{ width: \"100%\" }}\n                            description=\"暂未添加任何kubernetes集群\"\n                        />\n                    ) : (\n                        <List\n                            grid={{\n                                gutter: 20,\n                                column: 4,\n                            }}\n                            style={{ width: \"100%\" }}\n                            dataSource={this.state.clusterData}\n                            renderItem={(item) => (\n                                <List.Item>\n                                    <Card title={item.name} size=\"small\">\n                                        <div\n                                            style={{\n                                                height: \"50px\",\n                                                fontSize: \"13px\",\n                                            }}\n                                        >\n                                            {item.description}\n                                        </div>\n                                        <div style={{ marginTop: \"10px\" }}>\n                                            <Button\n                                                type=\"link\"\n                                                size=\"small\"\n                                                style={{ float: \"left\" }}\n                                                onClick={this.enterToCluster.bind(\n                                                    this,\n                                                    item.clusterId,\n                                                )}\n                                            >\n                                                进入集群\n                                            </Button>\n                                            <Popconfirm\n                                                title=\"确定移除该集群吗?\"\n                                                okText=\"确认\"\n                                                cancelText=\"取消\"\n                                                onConfirm={this.confirmDeleteCluster.bind(\n                                                    this,\n                                                    item.id,\n                                                )}\n                                            >\n                                                <Button\n                                                    type=\"link\"\n                                                    size=\"small\"\n                                                    style={{\n                                                        color: \"red\",\n                                                        float: \"right\",\n                                                    }}\n                                                >\n                                                    删除集群\n                                                </Button>\n                                            </Popconfirm>\n                                        </div>\n                                    </Card>\n                                </List.Item>\n                            )}\n                        />\n                    )}\n                </Row>\n\n                <Modal\n                    title=\"新增集群信息\"\n                    destroyOnClose={true}\n                    visible={this.state.addModelVisible}\n                    onOk={this.handleClusterAddOk}\n                    onCancel={this.handleClusterAddCancel}\n                >\n                    <Form ref={this.formRef}>\n                        <Form.Item\n                            label=\"集群名称\"\n                            {...formItemLayout}\n                            name=\"name\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"集群描述\"\n                            {...formItemLayout}\n                            name=\"description\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"ApiServer\"\n                            {...formItemLayout}\n                            name=\"apiServer\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input addonBefore={selectBefore} />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Admin Token\"\n                            {...formItemLayout}\n                            name=\"token\"\n                            rules={[\n                                { required: true, message: \"该项为必填项\" },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Content>\n        );\n    }\n}\n\nexport default ClusterManageContent;\n","import React, {Component} from 'react';\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport K8sNamespacesContent from \"./namespaces\";\nimport ClusterManageContent from \"./k8s_cluster\";\n\nconst {Content} = Layout;\n\nclass KubernetesContent extends Component {\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 0, margin: 0, height: \"100%\",\n            }}>\n                <Switch>\n                    <Route path=\"/admin/k8s_cluster/info\" component={ClusterManageContent} />\n                    <Route path=\"/admin/k8s_cluster/manage\" component={K8sNamespacesContent} />\n                </Switch>\n            </Content>\n        )\n    }\n}\n\nexport default KubernetesContent;\n","import req from \"../utils/axios\";\n\nconst getDmsInstanceData = (params) => {\n    return req.get(\"dms/instances\", params);\n};\nexport { getDmsInstanceData };\n\nconst postDmsInstanceData = (params) => {\n    return req.post(\"dms/instance\", params);\n};\nexport { postDmsInstanceData };\n\nconst deleteDmsInstanceData = (params) => {\n    return req.delete(\"dms/instance\", params);\n};\nexport { deleteDmsInstanceData };\n\nconst getAllDmsInstanceData = (params) => {\n    return req.get(\"dms/instances/all\", params);\n};\nexport { getAllDmsInstanceData };\n\nconst deleteDmsInstanceDbData = (params) => {\n    return req.delete(\"dms/databaseData\", params);\n};\nexport { deleteDmsInstanceDbData };\n\nconst postDmsInstanceDbData = (params) => {\n    return req.post(\"dms/databaseData\", params);\n};\nexport { postDmsInstanceDbData };\n\n// -----------\n\nconst getDmsAuthData = (params) => {\n    return req.get(\"dms/authData\", params);\n};\nexport { getDmsAuthData };\n\nconst getDmsDatabaseData = (params) => {\n    return req.get(\"dms/databaseData\", params);\n};\nexport { getDmsDatabaseData };\n\nconst getDmsTableData = (params) => {\n    return req.get(\"dms/tableData\", params);\n};\nexport { getDmsTableData };\n\nconst postDmsUserAuth = (params) => {\n    return req.post(\"dms/auth\", params);\n};\nexport { postDmsUserAuth };\n\nconst getUserDmsInstanceData = (params) => {\n    return req.get(\"dms/userInstanceData\", params);\n};\nexport { getUserDmsInstanceData };\n\nconst getUserDmsDatabaseData = (params) => {\n    return req.get(\"dms/userDatabaseData\", params);\n};\nexport { getUserDmsDatabaseData };\n\nconst postDmsUserSubmitSQL = (params) => {\n    return req.post(\"dms/userSubmitSQL\", params);\n};\nexport { postDmsUserSubmitSQL };\n\nconst getUserDmsLog = (params) => {\n    return req.get(\"dms/userLog\", params);\n};\nexport { getUserDmsLog };\n\nconst getUserDmsApproves = (params) => {\n    return req.get(\"dms/userApproves\", params);\n};\nexport { getUserDmsApproves };\n\nconst postDmsUserExecSQL = (params) => {\n    return req.post(\"dms/userExecSQL\", params);\n};\nexport { postDmsUserExecSQL };\n\nconst postDmsRollbackSQL = (params) => {\n    return req.post(\"dms/userRollbackSQL\", params);\n};\nexport { postDmsRollbackSQL };\n\nconst deleteDmsUserAuth = (params) => {\n    return req.delete(\"dms/userAuth\", params);\n};\nexport { deleteDmsUserAuth };\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Layout,\n    message,\n    Modal,\n    Row,\n    Table,\n    Typography,\n    Input,\n    Form,\n    Radio,\n    InputNumber,\n    Popconfirm,\n    Divider,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    postDmsInstanceData,\n    getDmsInstanceData,\n    deleteDmsInstanceData,\n    getDmsDatabaseData,\n    deleteDmsInstanceDbData,\n    postDmsInstanceDbData,\n} from \"../../api/dms_api\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\nconst { Content } = Layout;\n\nconst { Text } = Typography;\n\nclass InstanceManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"实例类型\",\n                    dataIndex: \"InstanceType\",\n                    key: \"InstanceType\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value, record) => {\n                        let operType = \"Mysql\";\n                        if (value === 2) {\n                            operType = \"Mysql\";\n                        }\n                        if (value === 3) {\n                            operType = \"Sqlserver\";\n                        }\n                        return <Text ellipsis={true}>{operType}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceAlias\",\n                    key: \"InstanceAlias\",\n                    align: \"center\",\n                    width: 200,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"实例地址\",\n                    dataIndex: \"Host\",\n                    key: \"Host\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"实例端口\",\n                    dataIndex: \"Port\",\n                    key: \"Port\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"数据库账号\",\n                    dataIndex: \"OperUser\",\n                    key: \"OperUser\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: 200,\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button\n                                    type=\"info\"\n                                    size=\"small\"\n                                    onClick={this.editInstance.bind(\n                                        this,\n                                        record,\n                                    )}\n                                >\n                                    编辑\n                                </Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.deleteInstance.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            expendColumns: [\n                {\n                    title: \"库名称\",\n                    dataIndex: \"SchemaName\",\n                    key: \"SchemaName\",\n                    width: 100,\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: 100,\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.deleteInstanceDb.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            addInstanceModalVisible: false,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            searchValue: \"\",\n            initialValues: {},\n            editInstanseId: \"\",\n            addInstanceDbModalVisible: false,\n            addInstanceId: \"\",\n            inputDbName: \"\",\n            expendTableData: {},\n        };\n    }\n\n    componentDidMount() {\n        this.loadInstanceData();\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.loadInstanceData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.loadInstanceData();\n            },\n        );\n    };\n\n    loadInstanceData() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            pageSize: this.state.pagination.pageSize,\n            query: this.state.searchValue,\n        };\n        getDmsInstanceData(queryParams)\n            .then((res) => {\n                if (res.code === 0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({ pagination });\n                    let tableData = [];\n                    for (let i = 0; i < res.data.instanceData.length; i++) {\n                        tableData.push({\n                            key: res.data.instanceData[i].ID,\n                            ...res.data.instanceData[i],\n                        });\n                    }\n                    this.setState({\n                        tableData: tableData,\n                        tableLoading: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleQueryChange = (e) => {\n        this.setState({ searchValue: e.target.value });\n    };\n\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.loadInstanceData();\n            },\n        );\n    };\n\n    handleAddInstance() {\n        this.setState({\n            addInstanceModalVisible: true,\n            editInstanseId: \"\",\n            initialValues: {},\n        });\n    }\n\n    handleAddInstanceCancel = () => {\n        this.setState({\n            addInstanceModalVisible: false,\n            editInstanseId: \"\",\n            initialValues: {},\n        });\n    };\n\n    handleSubmitAddInstance = () => {\n        this.formRef.current.validateFields().then((values) => {\n            postDmsInstanceData({\n                ...values,\n                instanceId: this.state.editInstanseId,\n            })\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功!\");\n                        this.loadInstanceData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                    this.setState({\n                        addInstanceModalVisible: false,\n                    });\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n            this.setState({ editInstanseId: \"\", initialValues: {} });\n        });\n    };\n\n    addInstanceDb(instanceId) {\n        this.setState({\n            addInstanceId: instanceId,\n            addInstanceDbModalVisible: true,\n        });\n    }\n\n    dbNameChange(e) {\n        this.setState({ inputDbName: e.target.value });\n    }\n\n    handleSubmitAddInstanceDb() {\n        postDmsInstanceDbData({\n            instanceId: this.state.addInstanceId,\n            dbName: this.state.inputDbName,\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"添加成功\");\n                this.onExpand(true, { InstanceId: this.state.addInstanceId });\n                this.setState({\n                    addInstanceDbModalVisible: false,\n                });\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    handleAddInstanceDbCancel() {\n        this.setState({\n            inputDbName: \"\",\n            addInstanceId: \"\",\n            addInstanceDbModalVisible: false,\n        });\n    }\n\n    editInstance(data) {\n        this.setState({\n            addInstanceModalVisible: true,\n            editInstanseId: data.InstanceId,\n            initialValues: {\n                instanceType: data.InstanceType,\n                instanceAlias: data.InstanceAlias,\n                port: data.Port,\n                host: data.Host,\n                operUser: data.OperUser,\n                operPwd: data.OperPwd,\n            },\n        });\n    }\n\n    deleteInstance(data) {\n        deleteDmsInstanceData({ instanceId: data.InstanceId }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功\");\n                this.loadInstanceData();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    deleteInstanceDb(data) {\n        deleteDmsInstanceDbData({\n            instanceId: data.InstanceId,\n            databaseId: data.DatabaseId,\n        }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功\");\n                this.onExpand(true, data);\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onExpand = (expanded, record) => {\n        if (expanded) {\n            getDmsDatabaseData({ instanceId: record.InstanceId }).then(\n                (res) => {\n                    if (res.code === 0) {\n                        let expendTableData = this.state.expendTableData;\n                        expendTableData[record.InstanceId] = res.data;\n                        this.setState({\n                            expendTableData: expendTableData,\n                        });\n                    } else {\n                        message.error(res.msg);\n                    }\n                },\n            );\n        }\n    };\n\n    expandedRowRender = (record, index, indent, expanded) => {\n        return (\n            <Table\n                style={{ width: 300 }}\n                columns={this.state.expendColumns}\n                dataSource={this.state.expendTableData[record.InstanceId]}\n                pagination={false}\n                size=\"small\"\n                footer={() => {\n                    return (\n                        <Button\n                            size=\"small\"\n                            onClick={this.addInstanceDb.bind(\n                                this,\n                                record.InstanceId,\n                            )}\n                        >\n                            添加\n                        </Button>\n                    );\n                }}\n            />\n        );\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DMS\", \"实例管理\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={5} className=\"col-span\">\n                        <Input\n                            placeholder=\"请输入实例名称关键字\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleQueryChange}\n                        />\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAddInstance.bind(this)}\n                        >\n                            添加实例\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Modal\n                    title=\"添加实例信息\"\n                    visible={this.state.addInstanceModalVisible}\n                    destroyOnClose={true}\n                    width={700}\n                    onOk={this.handleSubmitAddInstance}\n                    onCancel={this.handleAddInstanceCancel}\n                >\n                    <Form\n                        ref={this.formRef}\n                        initialValues={this.state.initialValues}\n                    >\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"类型：\"\n                            name=\"instanceType\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例类型!\",\n                                },\n                            ]}\n                        >\n                            <Radio.Group>\n                                <Radio value=\"2\">Mysql</Radio>\n                                <Radio value=\"3\">Sqlserver</Radio>\n                            </Radio.Group>\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"实例名称：\"\n                            name=\"instanceAlias\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例名称!\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"实例地址：\"\n                            name=\"host\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例地址!\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"实例端口：\"\n                            name=\"port\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例端口!\",\n                                },\n                            ]}\n                        >\n                            <InputNumber min={1} />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"数据库账号：\"\n                            name=\"operUser\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例账号!\",\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            {...formItemLayout}\n                            label=\"数据库密码：\"\n                            name=\"operPwd\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"请设置数据库实例密码!\",\n                                },\n                            ]}\n                        >\n                            <Input.Password\n                                iconRender={(visible) =>\n                                    visible ? (\n                                        <EyeTwoTone />\n                                    ) : (\n                                        <EyeInvisibleOutlined />\n                                    )\n                                }\n                            />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    title=\"添加库名\"\n                    visible={this.state.addInstanceDbModalVisible}\n                    destroyOnClose={true}\n                    width={300}\n                    onOk={this.handleSubmitAddInstanceDb.bind(this)}\n                    onCancel={this.handleAddInstanceDbCancel.bind(this)}\n                >\n                    <Input\n                        placeholder=\"输入库名\"\n                        onChange={this.dbNameChange.bind(this)}\n                    />\n                </Modal>\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                    expandable={{\n                        onExpand: this.onExpand,\n                        expandedRowRender: this.expandedRowRender,\n                    }}\n                />\n            </Content>\n        );\n    }\n}\n\nexport default InstanceManageContent;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Col,\n    Layout,\n    message,\n    Modal,\n    Row,\n    Select,\n    Table,\n    Typography,\n    Tree,\n    Input,\n    Form,\n    Radio,\n    InputNumber,\n    DatePicker,\n    Popconfirm,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteDmsUserAuth,\n    getDmsAuthData,\n    getDmsDatabaseData,\n    getAllDmsInstanceData,\n    postDmsUserAuth,\n} from \"../../api/dms_api\";\nimport { SearchOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport { getUsersList } from \"../../api/user\";\nimport { OpsIcon } from \"../../assets/Icons\";\nconst { Content } = Layout;\n\nconst { Text } = Typography;\nconst { Option } = Select;\nconst { TreeNode } = Tree;\nconst { TextArea } = Input;\n\nclass AuthManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            columns: [\n                {\n                    title: \"Id\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    width: 60,\n                    render: (value) => {\n                        return <Text ellipsis={true}>{value}</Text>;\n                    },\n                },\n                {\n                    title: \"权限类型\",\n                    dataIndex: \"OperType\",\n                    key: \"OperType\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value, record) => {\n                        let operType = \"可见\";\n                        if (value === 2) {\n                            operType = \"查询\";\n                        }\n                        if (value === 3) {\n                            operType = \"修改\";\n                        }\n                        return <Text ellipsis={true}>{operType}</Text>;\n                    },\n                },\n                {\n                    title: \"实例名称\",\n                    dataIndex: \"InstanceName\",\n                    key: \"InstanceName\",\n                    align: \"center\",\n                    width: 200,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"库名称\",\n                    dataIndex: \"DatabaseName\",\n                    key: \"DatabaseName\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"授权用户\",\n                    dataIndex: \"Username\",\n                    key: \"Username\",\n                    align: \"center\",\n                    width: 150,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"剩余次数\",\n                    dataIndex: \"OperCount\",\n                    key: \"OperCount\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"过期时间\",\n                    dataIndex: \"ValidTime\",\n                    key: \"ValidTime\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"白名单表\",\n                    dataIndex: \"AllowTables\",\n                    key: \"AllowTables\",\n                    align: \"center\",\n                    width: 100,\n                    render: (value) => {\n                        return (\n                            <Text ellipsis={true} style={{ width: \"100%\" }}>\n                                {value}\n                            </Text>\n                        );\n                    },\n                },\n                {\n                    title: \"操作\",\n                    key: \"operation\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: 100,\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                {/*<Button type=\"primary\" size=\"small\" >禁用</Button>*/}\n                                {/*<Divider type=\"vertical\" />*/}\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.deleteUserAuth.bind(\n                                        this,\n                                        record,\n                                    )}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">\n                                        删除\n                                    </Button>\n                                </Popconfirm>\n                            </div>\n                        );\n                    },\n                },\n            ],\n            tableLoading: false,\n            addAuthModalVisible: false,\n            tableData: [],\n            usersData: [],\n            instanceOptions: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: (current, size) =>\n                    this.onShowSizeChange(current, size),\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (page, pageSize) => this.changePage(page, pageSize),\n            },\n            expandedKeys: [],\n            searchValue: \"\",\n            autoExpandParent: true,\n            queryInstanceId: \"\",\n            queryEmpId: \"\",\n            queryOperType: \"\",\n            treeData: [],\n            selectedNodeId: \"\",\n            selectedNodeType: \"\",\n        };\n    }\n\n    componentDidMount() {\n        this.getUserAuthData();\n        this.loadAllUsersData();\n        this.loadAllInstanceData();\n    }\n\n    onShowSizeChange(current, size) {\n        let pagination = {\n            ...this.state.pagination,\n            page: 1,\n            current: 1,\n            pageSize: size,\n        };\n        this.setState(\n            {\n                pagination: pagination,\n            },\n            () => {\n                this.getUserAuthData();\n            },\n        );\n    }\n\n    changePage = (page, pageSize) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: page,\n                    current: page,\n                    pageSize: pageSize,\n                },\n            },\n            () => {\n                this.getUserAuthData();\n            },\n        );\n    };\n\n    getUserAuthData() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            size: this.state.pagination.pageSize,\n            instanceId: this.state.queryInstanceId.trim(),\n            operType: this.state.queryOperType.trim(),\n            empId: this.state.queryEmpId,\n        };\n        getDmsAuthData(queryParams)\n            .then((res) => {\n                if (res.code === 0) {\n                    const pagination = this.state.pagination;\n                    pagination.total = parseInt(res.data.total);\n                    pagination.page = parseInt(res.data.page);\n                    pagination.showTotal(parseInt(res.data.total));\n                    this.setState({ pagination });\n                    this.setState({\n                        tableData: res.data.authData,\n                        tableLoading: false,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadAllUsersData() {\n        getUsersList(1, 1000)\n            .then((res) => {\n                if (res.code === 0) {\n                    let data = res.data.users;\n                    let optionsList = [];\n                    for (let i = 0; i < data.length; i++) {\n                        optionsList.push(\n                            <Option key={data[i].empId} value={data[i].empId}>\n                                {data[i].username}\n                            </Option>,\n                        );\n                    }\n                    this.setState({\n                        usersData: optionsList,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadAllInstanceData() {\n        getAllDmsInstanceData()\n            .then((res) => {\n                if (res.code === 0) {\n                    let optionsList = [];\n                    let instanceTreeNode = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        optionsList.push(\n                            <Option\n                                key={res.data[i].InstanceId}\n                                value={res.data[i].InstanceId}\n                            >\n                                {res.data[i].InstanceAlias}\n                            </Option>,\n                        );\n                        instanceTreeNode.push({\n                            title: res.data[i].InstanceAlias,\n                            key: res.data[i].InstanceId,\n                            type: \"instance\",\n                            instance_type:\n                                res.data[i].InstanceType === \"2\"\n                                    ? \"mysql\"\n                                    : \"sqlserver\",\n                        });\n                    }\n                    this.setState({\n                        instanceOptions: optionsList,\n                        treeData: instanceTreeNode,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    handleInstanceChange = (queryInstanceId) => {\n        this.setState({ queryInstanceId });\n    };\n\n    handleEmpIdChange = (queryEmpId) => {\n        this.setState({ queryEmpId });\n    };\n\n    handleOperTypeChange = (queryOperType) => {\n        this.setState({ queryOperType });\n    };\n\n    handleQuery = () => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                },\n            },\n            () => {\n                this.getUserAuthData();\n            },\n        );\n    };\n\n    handleAddAuth() {\n        this.setState({ addAuthModalVisible: true });\n    }\n\n    handleUserAuthCancel = () => {\n        this.setState({ addAuthModalVisible: false });\n    };\n\n    handleSubmitUserAuth = () => {\n        this.formRef.current.validateFields().then((values) => {\n            if (\n                this.state.selectedNodeId === \"\" ||\n                this.state.selectedNodeType === \"\"\n            ) {\n                message.warn(\"请选择具体的数据表！\");\n                return;\n            }\n            let reqParams = {\n                ...values,\n                validTime: values[\"validTime\"].format(\"YYYY-MM-DD HH:mm:ss\"),\n                selectedNodeId: this.state.selectedNodeId,\n                selectedNodeType: this.state.selectedNodeType,\n            };\n            postDmsUserAuth(reqParams)\n                .then((res) => {\n                    if (res.code === 0) {\n                        message.success(\"添加成功!\");\n                        this.getUserAuthData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                    this.setState({ addAuthModalVisible: false });\n                })\n                .catch((err) => {\n                    message.error(err.toLocaleString());\n                });\n        });\n    };\n\n    deleteUserAuth(data) {\n        deleteDmsUserAuth({ id: \"\" + data.ID }).then((res) => {\n            if (res.code === 0) {\n                message.success(\"删除成功\");\n                this.getUserAuthData();\n            } else {\n                message.error(res.msg);\n            }\n        });\n    }\n\n    onLoadData = (treeNode) => {\n        return new Promise((resolve) => {\n            if (treeNode.props.children) {\n                resolve();\n                return;\n            }\n            if (treeNode.props.dataRef.type === \"instance\") {\n                getDmsDatabaseData({ instanceId: treeNode.props.dataRef.key })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            let instanceChildren = [];\n                            for (let i = 0; i < res.data.length; i++) {\n                                instanceChildren.push({\n                                    title: res.data[i].SchemaName,\n                                    key: res.data[i].DatabaseId,\n                                    type: \"database\",\n                                    instance_type: res.data[i].InstanceType,\n                                    isLeaf: true,\n                                });\n                            }\n                            treeNode.props.dataRef.children = instanceChildren;\n                            this.setState({\n                                treeData: [...this.state.treeData],\n                            });\n                            resolve();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            }\n        });\n    };\n\n    renderTreeNodes = (data) =>\n        data.map((item) => {\n            let iconType = \"icondatabase\";\n            if (item.instance_type === \"mysql\") {\n                iconType = \"iconmysql\";\n            }\n            if (item.instance_type === \"sqlserver\") {\n                iconType = \"iconsqlserver\";\n            }\n            if (item.children) {\n                return (\n                    <TreeNode\n                        icon={\n                            <OpsIcon\n                                style={{ fontSize: \"20px\", color: \"#08c\" }}\n                                type={iconType}\n                            />\n                        }\n                        title={item.title}\n                        key={item.key}\n                        dataRef={item}\n                    >\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return (\n                <TreeNode\n                    icon={\n                        <OpsIcon\n                            style={{ fontSize: \"20px\", color: \"#08c\" }}\n                            type={iconType}\n                        />\n                    }\n                    key={item.key}\n                    {...item}\n                    dataRef={item}\n                />\n            );\n        });\n\n    onTreeNodeSelect = (selectedKeys, e) => {\n        this.setState({\n            selectedNodeId: e.selectedNodes[0].dataRef.key,\n            selectedNodeType: e.selectedNodes[0].dataRef.type,\n        });\n    };\n\n    resetSelectedNodeValue = () => {\n        this.setState({\n            selectedNodeId: \"\",\n            selectedNodeType: \"\",\n        });\n    };\n\n    render() {\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DMS\", \"权限管理\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={5} className=\"col-span\">\n                        <Select\n                            placeholder=\"请选择所属实例\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleInstanceChange}\n                        >\n                            <Option value=\"\">所有实例</Option>\n                            {this.state.instanceOptions}\n                        </Select>\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Select\n                            placeholder=\"请选择权限类型\"\n                            style={{ width: \"100%\" }}\n                            onChange={this.handleOperTypeChange}\n                        >\n                            <Option value={2}>查询</Option>\n                            <Option value={3}>修改</Option>\n                        </Select>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select\n                            showSearch\n                            placeholder=\"请选择用户\"\n                            style={{ width: \"100%\" }}\n                            optionFilterProp=\"children\"\n                            filterOption={(input, option) =>\n                                option.props.children\n                                    .toLowerCase()\n                                    .indexOf(input.toLowerCase()) >= 0\n                            }\n                            onChange={this.handleEmpIdChange}\n                        >\n                            <Option value=\"\">所有用户</Option>\n                            {this.state.usersData}\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            type=\"primary\"\n                            icon={<SearchOutlined />}\n                            onClick={this.handleQuery}\n                        >\n                            查 询\n                        </Button>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Button\n                            style={{ width: \"100%\" }}\n                            icon={<PlusCircleOutlined />}\n                            onClick={this.handleAddAuth.bind(this)}\n                        >\n                            添加权限\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Modal\n                    title=\"用户权限设置\"\n                    visible={this.state.addAuthModalVisible}\n                    destroyOnClose={true}\n                    width={700}\n                    onOk={this.handleSubmitUserAuth}\n                    onCancel={this.handleUserAuthCancel}\n                    afterClose={this.resetSelectedNodeValue}\n                >\n                    <Row>\n                        <Col span={10}>\n                            <div\n                                style={{\n                                    minHeight: 450,\n                                    maxHeight: \"100%\",\n                                    overflowY: \"scroll\",\n                                }}\n                            >\n                                <Tree\n                                    showIcon={true}\n                                    loadData={this.onLoadData}\n                                    showLine={true}\n                                    style={{\n                                        maxHeight: \"450px\",\n                                        overflowY: \"scroll\",\n                                    }}\n                                    onSelect={this.onTreeNodeSelect}\n                                >\n                                    {this.renderTreeNodes(this.state.treeData)}\n                                </Tree>\n                            </div>\n                        </Col>\n                        <Col span={2}></Col>\n                        <Col span={12}>\n                            <Form\n                                ref={this.formRef}\n                                {...formItemLayout}\n                                initialValues={{ operType: 2, operCount: 5 }}\n                            >\n                                <Form.Item\n                                    label=\"指定用户：\"\n                                    name=\"empId\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请选择用户!\",\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        showSearch\n                                        placeholder=\"请选择用户\"\n                                        style={{ width: \"100%\" }}\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option) =>\n                                            option.props.children\n                                                .toLowerCase()\n                                                .indexOf(input.toLowerCase()) >=\n                                            0\n                                        }\n                                    >\n                                        {this.state.usersData}\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"审批人：\"\n                                    name=\"approveEmpId\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请选择审批人!\",\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        showSearch\n                                        placeholder=\"请选择审批人\"\n                                        style={{ width: \"100%\" }}\n                                        optionFilterProp=\"children\"\n                                        filterOption={(input, option) =>\n                                            option.props.children\n                                                .toLowerCase()\n                                                .indexOf(input.toLowerCase()) >=\n                                            0\n                                        }\n                                    >\n                                        {this.state.usersData}\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"权限类型：\"\n                                    name=\"operType\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请设置权限!\",\n                                        },\n                                    ]}\n                                >\n                                    <Radio.Group>\n                                        <Radio value={2}>查询</Radio>\n                                        <Radio value={3}>修改</Radio>\n                                    </Radio.Group>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"申请原因：\"\n                                    name=\"authReason\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请输入申请原因!\",\n                                        },\n                                    ]}\n                                >\n                                    <TextArea\n                                        placeholder=\"请务必记录用户申请权限的原因\"\n                                        rows={3}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"操作次数：\"\n                                    name=\"operCount\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请输入操作次数!\",\n                                        },\n                                    ]}\n                                >\n                                    <InputNumber min={1} />\n                                    &nbsp;次\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"有效时间：\"\n                                    name=\"validTime\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: \"请选择有效时间!\",\n                                        },\n                                    ]}\n                                >\n                                    <DatePicker showTime />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"白名单表：\"\n                                    name=\"allowTables\"\n                                    rules={[\n                                        {\n                                            required: false,\n                                        },\n                                    ]}\n                                >\n                                    <TextArea\n                                        placeholder=\"输入对用户开放的数据表，多表之间用英文分号分割\"\n                                        rows={2}\n                                    />\n                                </Form.Item>\n                            </Form>\n                        </Col>\n                    </Row>\n                </Modal>\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: \"max-content\" }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    bordered\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nexport default AuthManageContent;\n","import React, { Component } from \"react\";\nimport {\n    Button,\n    Layout,\n    message,\n    Row,\n    Tabs,\n    Tree,\n    Typography,\n    Table,\n    Tag,\n    Popover,\n    Icon,\n    Card,\n    Empty,\n    Col,\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getUserDmsDatabaseData,\n    getUserDmsInstanceData,\n    getUserDmsLog,\n    postDmsUserExecSQL,\n} from \"../../api/dms_api\";\nimport \"../../assets/css/dms.css\";\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/mode/sql/sql\";\nimport \"codemirror/addon/hint/show-hint.css\";\nimport \"codemirror/addon/hint/show-hint\";\nimport \"codemirror/addon/hint/sql-hint\";\nimport { OpsIcon } from \"../../assets/Icons\";\n\nconst { Content } = Layout;\nconst { TreeNode } = Tree;\nconst { Text, Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nconst left_panel = {\n    float: \"left\",\n    width: \"20%\",\n    height: \"100%\",\n    padding: \"0px 0px 0px 0px\",\n    borderRight: \"solid 2px #acc3c0\",\n};\n\nconst right_panel = {\n    float: \"right\",\n    width: \"80%\",\n    height: \"100%\",\n    padding: \"0px 5px 0px 10px\",\n};\n\nclass DataManageContent extends Component {\n    constructor(props) {\n        super(props);\n        this.sqlInputRef = React.createRef();\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.loadUserHistoryLog = this.loadUserHistoryLog.bind(this);\n        this.state = {\n            treeData: [],\n            selectedNodeId: \"\",\n            selectedNodeType: \"\",\n            currentChoose: \"-\",\n            activeKey: \"1\",\n            sqlInput: \"\",\n            sqlDescription: \"\",\n            sqlExecuting: false,\n            execResultPanel: <Empty description={false} />,\n            tableLoading: false,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: [\"10\", \"20\", \"30\", \"100\"],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            sqlResultLog: [],\n            sqlResultLogColumns: [\n                {\n                    title: \"ID\",\n                    dataIndex: \"ID\",\n                    key: \"ID\",\n                    align: \"center\",\n                    width: \"50px\",\n                },\n                {\n                    title: \"库名\",\n                    dataIndex: \"DatabaseName\",\n                    key: \"DatabaseName\",\n                    align: \"center\",\n                    width: \"150px\",\n                },\n                {\n                    title: \"执行时间\",\n                    dataIndex: \"StartTime\",\n                    key: \"StartTime\",\n                    width: \"200px\",\n                    align: \"center\",\n                },\n                {\n                    title: \"SQL\",\n                    dataIndex: \"SqlContent\",\n                    key: \"SqlContent\",\n                    ellipsis: true,\n                    width: \"200px\",\n                    align: \"center\",\n                    render: (value) => {\n                        return (\n                            <Popover\n                                placement=\"topLeft\"\n                                content={\n                                    <Paragraph copyable>{value}</Paragraph>\n                                }\n                                title=\"当前SQL\"\n                            >\n                                {value}\n                            </Popover>\n                        );\n                    },\n                },\n                // {\n                //     title: '影响行数',\n                //     dataIndex: 'EffectRows',\n                //     key: 'EffectRows',\n                //     width: '100px',\n                //     align: 'center',\n                // },\n                {\n                    title: \"耗时\",\n                    dataIndex: \"Duration\",\n                    key: \"Duration\",\n                    width: \"100px\",\n                    align: \"center\",\n                    render: (value) => {\n                        return value + \" ms\";\n                    },\n                },\n                {\n                    title: \"执行状态\",\n                    dataIndex: \"ExecStatus\",\n                    key: \"ExecStatus\",\n                    width: \"100px\",\n                    fixed: \"right\",\n                    align: \"center\",\n                    render: (value) => {\n                        let content = <Tag color=\"#f50\">失败</Tag>;\n                        if (value === 1) {\n                            content = <Tag color=\"#2db7f5\">成功</Tag>;\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: \"异常信息\",\n                    dataIndex: \"ExceptionOutput\",\n                    key: \"ExceptionOutput\",\n                    ellipsis: true,\n                    fixed: \"right\",\n                    align: \"center\",\n                    width: \"100px\",\n                    render: (value) => {\n                        if (value !== \"\") {\n                            return (\n                                <Popover\n                                    placement=\"topLeft\"\n                                    content={\n                                        <Paragraph copyable>{value}</Paragraph>\n                                    }\n                                    title=\"异常详情\"\n                                    trigger=\"click\"\n                                >\n                                    <Button type=\"link\" size=\"small\">\n                                        点击查看\n                                    </Button>\n                                </Popover>\n                            );\n                        }\n                        return \"无异常\";\n                    },\n                },\n            ],\n        };\n    }\n\n    componentDidMount() {\n        this.loadAllInstanceData();\n        this.loadUserHistoryLog();\n    }\n\n    loadAllInstanceData() {\n        getUserDmsInstanceData()\n            .then((res) => {\n                if (res.code === 0) {\n                    let instanceTreeNode = [];\n                    for (let i = 0; i < res.data.length; i++) {\n                        instanceTreeNode.push({\n                            title: res.data[i].InstanceName,\n                            key: res.data[i].InstanceId,\n                            type: \"instance\",\n                            instance_type:\n                                res.data[i].InstanceType === \"2\"\n                                    ? \"mysql\"\n                                    : \"sqlserver\",\n                        });\n                    }\n                    this.setState({\n                        treeData: instanceTreeNode,\n                    });\n                } else {\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    loadUserHistoryLog() {\n        this.setState({ tableLoading: true });\n        const queryParams = {\n            page: this.state.pagination.page,\n            pageSize: this.state.pagination.pageSize,\n        };\n        getUserDmsLog(queryParams).then((res) => {\n            if (res.code === 0) {\n                const pagination = this.state.pagination;\n                pagination.total = parseInt(res.data.total);\n                pagination.page = parseInt(res.data.page);\n                pagination.showTotal(parseInt(res.data.total));\n                this.setState({\n                    pagination: { ...pagination },\n                });\n                this.setState({ sqlResultLog: res.data[\"log\"] });\n            } else {\n                message.error(res.msg);\n            }\n            this.setState({ tableLoading: false });\n        });\n    }\n\n    onShowSizeChange(current, size) {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: 1,\n                    current: 1,\n                    pageSize: size,\n                },\n            },\n            () => {\n                this.loadUserHistoryLog();\n            },\n        );\n    }\n\n    changePage = (e) => {\n        this.setState(\n            {\n                pagination: {\n                    ...this.state.pagination,\n                    page: e,\n                    current: e,\n                },\n            },\n            () => {\n                this.loadUserHistoryLog();\n            },\n        );\n    };\n\n    sqlDescriptionChange(e) {\n        this.setState({ sqlDescription: e.target.value });\n    }\n\n    onLoadData = (treeNode) => {\n        return new Promise((resolve) => {\n            if (treeNode.props.children) {\n                resolve();\n                return;\n            }\n            if (treeNode.props.dataRef.type === \"instance\") {\n                getUserDmsDatabaseData({\n                    instanceId: treeNode.props.dataRef.key,\n                })\n                    .then((res) => {\n                        if (res.code === 0) {\n                            let instanceChildren = [];\n                            for (let i = 0; i < res.data.length; i++) {\n                                instanceChildren.push({\n                                    title: res.data[i].DatabaseName,\n                                    key: res.data[i].DatabaseId,\n                                    type: \"database\",\n                                    instance_type: res.data[i].InstanceType,\n                                    isLeaf: true,\n                                });\n                            }\n                            treeNode.props.dataRef.children = instanceChildren;\n                            this.setState({\n                                treeData: [...this.state.treeData],\n                            });\n                            resolve();\n                        } else {\n                            message.error(res.msg);\n                        }\n                    })\n                    .catch((err) => {\n                        message.error(err.toLocaleString());\n                    });\n            }\n        });\n    };\n\n    renderSqlQueryResultTable(columns, data) {\n        if (columns === null || data === null) {\n            return (\n                <Text>未查询到数据，请查看『执行历史』检查是否存在异常</Text>\n            );\n        }\n        let titleColumns = [];\n        for (let i = 0; i < columns.length; i++) {\n            titleColumns.push({ title: columns[i], dataIndex: columns[i] });\n        }\n        return (\n            <Table\n                bordered\n                columns={titleColumns}\n                dataSource={data}\n                size=\"small\"\n                scroll={{ x: \"max-content\" }}\n                footer={(data) => {\n                    let count = data.length;\n                    return <span>数据行数: {count}</span>;\n                }}\n            />\n        );\n    }\n\n    renderSqlExecResultPanel(execStatus, exception, effectResult, duration) {\n        let color = \"green\";\n        let execResult = \"执行成功\";\n        let exceptionContent = \"\";\n        if (execStatus === 0) {\n            color = \"red\";\n            execResult = \"执行失败\";\n            exceptionContent = (\n                <span style={{ color: \"red\" }}>异常信息：{exception}</span>\n            );\n        }\n        return (\n            <Card>\n                <span>影响行数：{effectResult}</span> <br />\n                <span style={{ color: color }}>{execResult}</span> <br />\n                {exceptionContent} <br />\n                <span>执行时间：{duration} ms</span>\n            </Card>\n        );\n    }\n\n    renderTreeNodes = (data) =>\n        data.map((item) => {\n            let iconType = \"icondatabase\";\n            if (item.instance_type === \"mysql\") {\n                iconType = \"iconmysql\";\n            }\n            if (item.instance_type === \"sqlserver\") {\n                iconType = \"iconsqlserver\";\n            }\n            if (item.children) {\n                return (\n                    <TreeNode\n                        icon={\n                            <OpsIcon\n                                style={{ fontSize: \"20px\", color: \"#08c\" }}\n                                type={iconType}\n                            />\n                        }\n                        title={item.title}\n                        key={item.key}\n                        dataRef={item}\n                    >\n                        {this.renderTreeNodes(item.children)}\n                    </TreeNode>\n                );\n            }\n            return (\n                <TreeNode\n                    icon={\n                        <OpsIcon\n                            style={{ fontSize: \"20px\", color: \"#08c\" }}\n                            type={iconType}\n                        />\n                    }\n                    key={item.key}\n                    {...item}\n                    dataRef={item}\n                />\n            );\n        });\n\n    onTreeNodeSelect = (selectedKeys, e) => {\n        if (e.selectedNodes[0].dataRef.type === \"instance\") {\n            let title = \"实例 | \" + e.selectedNodes[0].dataRef.title;\n            this.setState({ currentChoose: title });\n        }\n        if (e.selectedNodes[0].dataRef.type === \"database\") {\n            let title = \"数据库 | \" + e.selectedNodes[0].dataRef.title;\n            this.setState({ currentChoose: title });\n        }\n        this.setState({\n            selectedNodeId: e.selectedNodes[0].dataRef.key,\n            selectedNodeType: e.selectedNodes[0].dataRef.type,\n        });\n    };\n\n    submitSql() {\n        if (this.state.selectedNodeType !== \"database\") {\n            message.warn(\"请选择具体的数据库！\");\n            return;\n        }\n        if (this.state.sqlInput.trim() === \"\") {\n            message.warn(\"请填写待执行的SQL语句！\");\n            return;\n        }\n        let reqParams = {\n            selectedNodeId: this.state.selectedNodeId,\n            selectedNodeType: this.state.selectedNodeType,\n            sqlInput: this.state.sqlInput,\n            sqlDescription: this.state.sqlDescription,\n        };\n        message.info(\"提交执行中...\");\n        this.setState({ sqlExecuting: true });\n        postDmsUserExecSQL(reqParams).then((res) => {\n            if (res.code === 0) {\n                if (res.data[\"execStatus\"] === 1) {\n                    message.success(\"执行成功\");\n                } else {\n                    message.error(\"执行失败\");\n                }\n                if (res.data[\"sqlType\"] === \"select\") {\n                    let content = this.renderSqlQueryResultTable(\n                        res.data[\"queryColumns\"],\n                        res.data[\"queryResult\"],\n                    );\n                    this.setState({ execResultPanel: content });\n                } else {\n                    let content = this.renderSqlExecResultPanel(\n                        res.data[\"execStatus\"],\n                        res.data[\"exceptionOutput\"],\n                        res.data[\"effectRows\"],\n                        res.data[\"duration\"],\n                    );\n                    this.setState({ execResultPanel: content });\n                }\n                this.setState({ sqlExecuting: false });\n            } else {\n                message.error(res.msg);\n                this.setState({ sqlExecuting: false });\n            }\n            this.loadUserHistoryLog();\n        });\n    }\n\n    tabsOnChange = (activeKey) => {\n        this.setState({ activeKey });\n    };\n\n    render() {\n        return (\n            <Content\n                style={{\n                    background: \"#fff\",\n                    padding: 20,\n                    margin: 0,\n                    height: \"100%\",\n                }}\n            >\n                <OpsBreadcrumbPath pathData={[\"DMS\", \"数据管理\"]} />\n                <div style={{ height: \"95%\" }}>\n                    <div style={left_panel}>\n                        {this.state.treeData.length > 0 ? (\n                            <Tree\n                                showIcon={true}\n                                loadData={this.onLoadData}\n                                showLine={true}\n                                style={{\n                                    maxHeight: \"100%\",\n                                    overflow: \"scroll\",\n                                }}\n                                onSelect={this.onTreeNodeSelect}\n                            >\n                                {this.renderTreeNodes(this.state.treeData)}\n                            </Tree>\n                        ) : (\n                            <Empty description=\"暂无授权实例\" />\n                        )}\n                    </div>\n                    <div style={right_panel}>\n                        <Row style={{ marginBottom: 10 }}>\n                            <Text\n                                strong\n                                style={{ color: \"rgba(0, 102, 192, 0.86)\" }}\n                            >\n                                你当前选择：{this.state.currentChoose}\n                            </Text>\n                        </Row>\n                        <div>\n                            <Text strong>在此输入SQL: </Text>\n                        </div>\n                        <Row style={{ height: \"120px\" }}>\n                            <Col span={24}>\n                                <CodeMirror\n                                    className=\"sqlEditor\"\n                                    ref={this.sqlInputRef}\n                                    options={{\n                                        mode: \"text/x-mysql\",\n                                        showCursorWhenSelecting: true,\n                                        option: {\n                                            autofocus: true,\n                                        },\n                                        lineWrapping: true,\n                                    }}\n                                    value={this.state.sqlInput}\n                                    onBeforeChange={(editor, data, value) => {\n                                        this.setState({ sqlInput: value });\n                                    }}\n                                />\n                            </Col>\n                        </Row>\n                        <Row style={{ marginTop: 5 }}>\n                            <Button\n                                type=\"primary\"\n                                loading={this.state.sqlExecuting}\n                                onClick={this.submitSql.bind(this)}\n                            >\n                                提交执行\n                            </Button>\n                        </Row>\n                        <Row style={{ marginBottom: 10 }}>\n                            <Col span={24}>\n                                <Tabs\n                                    defaultActiveKey=\"1\"\n                                    activeKey={this.state.activeKey}\n                                    size=\"small\"\n                                    onChange={this.tabsOnChange}\n                                >\n                                    <TabPane tab=\"执行结果\" key=\"1\">\n                                        {this.state.execResultPanel}\n                                    </TabPane>\n                                    <TabPane\n                                        tab={\n                                            <span>\n                                                执行历史{\" \"}\n                                                <Icon\n                                                    type=\"reload\"\n                                                    onClick={\n                                                        this.loadUserHistoryLog\n                                                    }\n                                                    style={{ marginLeft: 10 }}\n                                                />\n                                            </span>\n                                        }\n                                        key=\"2\"\n                                    >\n                                        <Table\n                                            size=\"small\"\n                                            dataSource={this.state.sqlResultLog}\n                                            columns={\n                                                this.state.sqlResultLogColumns\n                                            }\n                                            scroll={{ x: \"max-content\" }}\n                                            pagination={this.state.pagination}\n                                            loading={this.state.tableLoading}\n                                            bordered\n                                        />\n                                    </TabPane>\n                                </Tabs>\n                            </Col>\n                        </Row>\n                    </div>\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default DataManageContent;\n","import React, { Component } from \"react\";\nimport { Layout, message } from \"antd\";\nimport { Route, Switch } from \"react-router-dom\";\nimport WelcomeContent from \"./WelcomeContent\";\nimport ServerContent from \"../components/cloud_resource/server_content\";\nimport RdsContent from \"../components/cloud_resource/rds_content\";\nimport KvContent from \"../components/cloud_resource/kv_content\";\nimport SlbContent from \"../components/cloud_resource/slb_content\";\nimport CloudContent from \"../components/cloud_resource/account_content\";\nimport TaskContent from \"../components/task/task_content\";\nimport UserManager from \"../components/permissions/user_manager\";\nimport RolesManager from \"../components/permissions/role_manager\";\nimport PermissionsManager from \"../components/permissions/permission_manager\";\nimport PasswordManager from \"../components/permissions/password_manager\";\nimport { getUserTokenRefresh } from \"../api/user\";\nimport jwt_decode from \"jwt-decode\";\nimport SyncAliyunContent from \"../components/data/sync_aliyun\";\nimport OtherContent from \"../components/cloud_resource/other_content\";\nimport SettingsContent from \"../components/system/settings_content\";\nimport LogoutContent from \"../components/logout\";\nimport UserFeedbackManager from \"../components/system/feedback_manager\";\nimport JenkinsContent from \"../components/ci_cd/jenkins\";\nimport KubernetesContent from \"../components/kubernetes/kubernetes\";\nimport InstanceManageContent from \"../components/dms/instance_manage\";\nimport AuthManageContent from \"../components/dms/auth_manage\";\nimport DataManageContent from \"../components/dms/data_manage\";\n\nconst { Content } = Layout;\nclass ContentLayout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSuperAdmin: false,\n        };\n    }\n\n    componentWillMount() {\n        getUserTokenRefresh()\n            .then((res) => {\n                if (res.code === 0) {\n                    localStorage.setItem(\"ops_token\", res.data.token);\n                    let info = jwt_decode(res.data.token);\n                    this.setState({\n                        isSuperAdmin: info[\"userInfo\"][\"isSuperAdmin\"],\n                    });\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    render() {\n        return (\n            <Content\n                style={{\n                    height: \"100%\",\n                    minWidth: \"900px\",\n                    overflow: \"scroll\",\n                }}\n            >\n                <Switch>\n                    <Route exact path=\"/admin\" component={WelcomeContent} />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_server\"\n                        render={() => (\n                            <ServerContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_rds\"\n                        render={() => (\n                            <RdsContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_kv\"\n                        render={() => (\n                            <KvContent isSuperAdmin={this.state.isSuperAdmin} />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_slb\"\n                        render={() => (\n                            <SlbContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_account\"\n                        render={() => (\n                            <CloudContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cloud_resource/cloud_other\"\n                        render={() => (\n                            <OtherContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/task\"\n                        render={() => (\n                            <TaskContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n\n                    <Route\n                        path=\"/admin/dms/instance_manage\"\n                        render={() => (\n                            <InstanceManageContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/dms/auth_manage\"\n                        render={() => (\n                            <AuthManageContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/dms/data_manage\"\n                        render={() => (\n                            <DataManageContent\n                                isSuperAdmin={this.state.isSuperAdmin}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/admin/cicd\"\n                        render={() => <JenkinsContent />}\n                    />\n                    <Route\n                        path=\"/admin/k8s_cluster\"\n                        render={() => <KubernetesContent />}\n                    />\n                    <Route\n                        path=\"/admin/data/syncAliyun\"\n                        component={SyncAliyunContent}\n                    />\n                    <Route\n                        path=\"/admin/permission/users\"\n                        component={UserManager}\n                    />\n                    <Route\n                        path=\"/admin/permission/roles\"\n                        component={RolesManager}\n                    />\n                    <Route\n                        path=\"/admin/permission/permissions\"\n                        component={PermissionsManager}\n                    />\n                    <Route\n                        path=\"/admin/permission/password\"\n                        component={PasswordManager}\n                    />\n                    <Route\n                        path=\"/admin/system/setting\"\n                        component={SettingsContent}\n                    />\n                    <Route\n                        path=\"/admin/system/user_feedback\"\n                        component={UserFeedbackManager}\n                    />\n                    <Route path=\"/admin/logout\" component={LogoutContent} />\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default ContentLayout;\n","import React, { Component } from 'react';\nimport {Layout} from 'antd';\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\nimport OpsHeader from '../components/header';\nimport OpsSider from '../components/sidebar';\nimport OpsFooter from '../components/footer';\nimport ContentLayout from \"./ContentLayout\";\n\nclass AdminContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSiderMenu = this.handleSiderMenu.bind(this);\n        this.state = {\n            collapsed: false,\n        };\n    }\n\n    handleSiderMenu() {\n        this.setState({collapsed: !this.state.collapsed});\n    };\n\n    onExit = () => {\n        this.setState(() => ({ stepsEnabled: false }));\n    };\n\n    render() {\n        return (\n            <Router>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <OpsSider menuCollapsed={this.state.collapsed} />\n                    <Layout>\n                        <OpsHeader menuCollapsed={this.state.collapsed} handleSiderMenu={this.handleSiderMenu}/>\n                        <Route path=\"/admin\" component={ContentLayout}/>\n                        <OpsFooter/>\n                    </Layout>\n                </Layout>\n            </Router>\n        );\n    }\n}\n\n\nexport default withRouter(AdminContent);\n\n","import React, { Component } from \"react\";\nimport {\n    Form,\n    Icon,\n    Input,\n    Button,\n    Row,\n    Col,\n    message,\n    Popover,\n    Typography,\n} from \"antd\";\nimport \"../assets/css/login.css\";\nimport { postUserLogin } from \"../api/user\";\n\nconst { Text } = Typography;\n\nclass LoginContent extends Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.formRef = React.createRef();\n        this.state = {\n            currentYear: new Date().getFullYear(),\n        };\n    }\n\n    componentDidMount() {\n        let code = new URLSearchParams(this.props.location.search).get(\"code\");\n        if (code !== undefined && code !== null) {\n            code = parseInt(code);\n            if (code === 401) {\n                message.error(\"token过期，请重新登录!\", 4);\n            }\n            if (code === 403) {\n                message.error(\"用户不存在或被禁用，请联系管理员!\", 4);\n            }\n        }\n    }\n\n    handleEnterKey = (e) => {\n        if (e.nativeEvent.keyCode === 13) {\n            this.formRef.current.validateFields().then((values) => {\n                this.handleSubmit(values);\n            });\n        }\n    };\n\n    handleSubmit(values) {\n        postUserLogin(values)\n            .then((res) => {\n                if (res.code === 0) {\n                    localStorage.setItem(\"ops_token\", res.data.token);\n                    message.success(\"欢迎使用运维平台！\");\n                    this.props.history.push(\"/admin\");\n                } else {\n                    this.formRef.current.setFieldsValue({\n                        password: \"\",\n                    });\n                    message.error(res.msg);\n                }\n            })\n            .catch((err) => {\n                message.error(err.toLocaleString());\n            });\n    }\n\n    onFinishFailed(errorInfo) {\n        console.log(\"Failed:\", errorInfo);\n    }\n\n    render() {\n        let loginPanel = (\n            <div>\n                <Form\n                    ref={this.formRef}\n                    onFinish={this.handleSubmit}\n                    onFinishFailed={this.onFinishFailed}\n                    className=\"login-form\"\n                >\n                    <Form.Item\n                        name=\"username\"\n                        rules={[\n                            { required: true, message: \"请输入您的注册邮箱!\" },\n                        ]}\n                    >\n                        <Input\n                            size=\"large\"\n                            prefix={\n                                <Icon\n                                    type=\"user\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                />\n                            }\n                            placeholder=\"用户账号\"\n                            onKeyPress={this.handleEnterKey}\n                        />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"password\"\n                        rules={[{ required: true, message: \"请输入您的密码!\" }]}\n                    >\n                        <Input\n                            size=\"large\"\n                            prefix={\n                                <Icon\n                                    type=\"lock\"\n                                    style={{ color: \"rgba(0,0,0,.25)\" }}\n                                />\n                            }\n                            type=\"password\"\n                            placeholder=\"用户密码\"\n                            onKeyPress={this.handleEnterKey}\n                        />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button\n                            type=\"primary\"\n                            block\n                            className=\"login-form-button\"\n                            size=\"large\"\n                            htmlType=\"submit\"\n                        >\n                            登 录\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        );\n        return (\n            <div>\n                <Row style={{ height: \"15vh\", paddingTop: \"5vh\" }}>\n                    <Col span={9} />\n                    <Col span={6} style={{ padding: \"0px 30px\" }}>\n                        <span className=\"login-logo\" />\n                        <span className=\"login-logo-text\">运维平台</span>\n                    </Col>\n                    <Col span={9} />\n                </Row>\n                <Row style={{ height: \"40vh\" }}>\n                    <Col span={9} />\n                    {/* <Col\n                        span={10}\n                        style={{ textAlign: \"center\" }}\n                        className=\"login-ad\"\n                    ></Col> */}\n                    <Col span={6} style={{ paddingTop: 40 }}>\n                        {loginPanel}\n                    </Col>\n                    <Col span={9} />\n                </Row>\n                <Row style={{ height: \"30vh\" }} />\n                <Row\n                    style={{\n                        height: \"15vh\",\n                        textAlign: \"center\",\n                        paddingTop: 50,\n                        display: \"block\",\n                    }}\n                >\n                    ©2019-{this.state.currentYear} Created by &nbsp;\n                    <Popover content={<div className=\"wechat\" />}>\n                        <Text underline>KevinYang</Text>\n                    </Popover>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default LoginContent;\n","import React, {Component} from 'react';\nimport { Result, Button } from 'antd';\n\n\nclass Exception500 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"500\"\n                title=\"异常提醒\"\n                subTitle=\"服务异常，请联系运维中心处理\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nclass Exception403 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"403\"\n                title=\"403\"\n                subTitle=\"您没有访问权限\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nclass Exception404 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"访问的页面不存在\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nexport { Exception403, Exception404, Exception500 };","import React,{Component} from 'react'; \nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport AdminContent from './layouts/AdminLayout';\nimport LoginContent from './layouts/LoginLayout';\nimport {Exception404, Exception500} from \"./layouts/ExceptionContent\";\n\nexport default class RouterWrap extends Component{ \n    \n    render(){ \n        return ( \n            <div id=\"router\" style={{backgroundColor:\"#f0f2f5\"}}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/\" component={LoginContent} exact />\n                        <Route path=\"/admin\" component={AdminContent} />\n                        <Route path=\"/login\" component={LoginContent} />\n                        <Route component={Exception404} />\n                        <Route path=\"/exception500\" component={Exception500} />\n                    </Switch>\n                </BrowserRouter>\n            </div> \n        )\n    } \n\n}\n","import React, { Component } from 'react';\nimport '../assets/css/main.css';\nimport RouterWrap from '../router';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <RouterWrap/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layouts/main';\nimport * as serviceWorker from './serviceWorker';\nimport zhCN from 'antd/es/locale-provider/zh_CN';\nimport {ConfigProvider} from \"antd\";\n\n\nReactDOM.render(\n    <ConfigProvider locale={zhCN}>\n        <App/>\n    </ConfigProvider>\n    ,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}